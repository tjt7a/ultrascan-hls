




/*
******************** Summary ********************
report for vasim_68
Number of nodes = 1080
Number of edges = 1602
Average edge per node = 0.674157303371
Number of start nodes = 1
Number of report nodes = 2
does have all_input = True
does have special element = False
is Homogenous = True
stride value = 1
Max Fan-in = 2
Max Fan-out = 255
Max value in dim = 255
average number of intervals per STE = 2.42685185185
#######################################################
*/

 



module LUT_Match_vasim_68_1 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd65) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd97) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_2 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_3 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_4 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_5 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_6 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_7 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_8 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_9 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_10 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_11 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_12 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_13 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_14 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_15 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_16 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_17 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_18 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_19 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_20 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_21 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_22 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_23 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_24 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_25 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_26 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_27 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_28 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_29 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_30 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_31 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_32 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_33 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_34 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_35 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_36 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_37 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_38 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_39 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_40 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_41 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_42 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_43 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_44 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_45 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_46 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_47 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_48 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_49 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_50 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_51 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_52 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_53 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_54 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_55 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_56 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_57 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_58 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_59 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_60 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_61 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_62 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_63 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_64 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_65 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_66 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_67 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_68 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_69 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_70 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_71 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_72 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_73 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_74 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_75 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_76 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_77 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_78 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_79 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_80 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_81 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_82 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_83 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_84 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_85 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_86 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_87 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_88 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_89 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_90 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_91 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_92 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_93 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_94 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_95 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_96 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_97 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_98 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_99 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_100 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_101 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_102 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_103 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_104 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_105 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_106 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_107 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd86) &&(input_capture[7:0] <= 8'd86) && 1'b1) ||
     ((input_capture[7:0] >= 8'd118) &&(input_capture[7:0] <= 8'd118) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_108 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_109 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_110 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_111 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_112 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_113 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_114 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_115 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_116 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_117 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_118 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_119 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_120 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_121 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_122 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_123 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_124 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_125 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_126 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_127 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_128 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_129 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd69) &&(input_capture[7:0] <= 8'd69) && 1'b1) ||
     ((input_capture[7:0] >= 8'd101) &&(input_capture[7:0] <= 8'd101) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_130 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_131 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_132 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_133 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_134 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_135 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_136 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_137 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_138 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_139 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_140 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_141 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_142 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_143 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_144 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_145 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_146 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_147 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_148 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_149 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_150 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_151 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_152 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_153 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_154 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_155 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_156 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_157 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_158 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_159 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_160 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_161 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_162 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_163 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_164 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_165 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_166 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_167 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_168 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_169 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_170 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_171 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_172 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_173 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_174 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_175 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_176 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_177 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_178 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_179 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_180 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_181 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_182 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_183 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_184 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_185 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_186 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_187 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_188 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_189 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_190 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_191 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_192 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_193 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_194 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_195 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_196 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_197 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_198 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_199 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_200 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_201 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_202 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_203 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_204 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_205 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_206 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_207 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_208 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_209 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_210 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_211 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_212 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_213 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_214 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_215 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_216 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_217 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_218 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_219 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_220 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_221 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_222 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_223 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_224 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_225 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_226 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_227 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_228 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_229 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_230 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_231 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_232 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_233 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_234 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_235 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_236 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_237 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_238 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_239 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_240 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_241 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_242 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_243 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_244 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_245 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_246 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_247 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_248 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_249 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_250 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_251 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_252 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_253 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_254 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_255 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_256 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_257 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_258 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_259 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_260 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_261 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_262 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_263 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_264 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_265 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_266 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_267 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_268 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_269 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_270 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_271 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_272 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_273 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_274 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_275 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_276 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_277 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_278 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_279 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_280 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_281 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_282 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_283 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_284 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_285 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_286 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_287 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_288 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_289 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_290 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_291 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_292 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_293 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_294 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_295 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_296 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_297 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_298 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_299 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_300 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_301 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_302 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_303 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_304 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_305 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_306 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_307 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_308 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_309 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_310 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_311 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_312 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_313 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_314 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_315 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_316 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_317 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_318 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_319 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_320 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_321 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_322 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_323 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_324 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_325 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_326 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_327 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_328 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_329 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_330 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_331 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_332 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_333 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_334 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_335 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_336 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_337 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_338 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_339 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_340 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_341 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_342 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_343 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_344 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_345 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_346 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_347 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_348 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_349 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_350 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_351 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_352 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_353 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_354 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_355 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_356 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_357 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_358 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_359 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_360 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_361 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_362 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_363 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_364 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_365 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_366 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_367 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_368 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_369 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_370 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_371 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_372 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_373 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_374 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_375 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_376 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_377 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_378 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_379 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_380 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_381 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_382 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_383 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_384 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_385 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_386 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_387 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_388 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_389 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_390 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_391 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_392 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_393 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_394 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_395 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_396 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_397 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_398 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_399 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_400 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_401 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_402 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_403 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_404 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_405 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_406 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_407 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_408 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_409 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_410 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_411 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_412 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_413 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_414 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_415 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd45) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_416 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_417 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_418 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_419 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_420 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_421 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_422 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_423 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_424 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_425 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_426 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_427 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_428 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_429 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_430 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_431 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_432 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_433 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_434 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_435 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_436 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_437 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_438 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_439 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_440 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_441 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_442 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_443 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_444 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_445 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_446 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_447 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_448 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_449 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_450 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_451 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_452 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_453 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_454 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_455 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_456 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_457 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_458 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_459 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_460 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_461 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_462 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_463 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_464 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_465 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_466 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_467 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_468 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_469 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_470 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_471 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_472 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_473 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_474 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_475 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_476 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_477 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_478 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_479 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_480 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_481 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_482 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_483 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_484 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_485 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_486 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_487 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_488 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_489 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_490 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_491 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_492 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_493 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_494 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_495 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_496 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_497 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_498 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_499 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_500 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_501 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_502 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_503 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_504 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_505 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_506 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_507 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_508 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_509 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_510 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_511 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_512 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_513 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_514 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_515 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_516 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_517 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_518 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_519 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_520 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_521 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_522 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_523 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_524 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_525 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_526 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_527 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_528 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_529 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_530 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_531 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_532 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_533 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_534 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_535 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_536 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_537 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_538 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_539 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_540 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_541 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_542 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_543 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_544 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_545 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_546 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_547 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_548 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_549 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_550 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_551 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_552 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_553 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_554 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_555 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_556 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_557 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_558 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_559 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_560 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_561 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_562 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_563 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_564 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_565 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_566 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_567 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_568 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_569 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_570 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_571 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_572 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_573 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_574 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_575 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_576 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_577 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_578 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_579 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_580 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_581 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_582 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_583 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_584 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_585 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_586 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_587 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd32) &&(input_capture[7:0] <= 8'd32) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_588 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_589 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_590 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_591 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_592 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_593 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_594 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_595 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_596 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_597 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_598 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_599 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_600 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_601 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_602 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_603 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_604 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_605 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_606 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_607 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_608 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_609 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_610 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_611 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_612 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_613 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_614 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_615 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_616 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_617 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_618 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_619 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_620 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_621 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_622 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_623 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_624 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_625 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_626 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_627 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_628 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_629 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_630 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_631 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_632 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_633 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_634 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_635 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_636 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_637 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd83) &&(input_capture[7:0] <= 8'd83) && 1'b1) ||
     ((input_capture[7:0] >= 8'd115) &&(input_capture[7:0] <= 8'd115) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_638 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_639 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_640 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_641 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_642 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_643 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_644 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_645 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_646 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_647 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_648 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_649 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_650 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_651 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_652 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_653 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_654 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_655 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_656 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_657 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_658 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_659 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_660 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_661 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_662 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_663 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_664 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_665 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_666 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_667 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_668 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_669 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_670 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_671 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_672 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_673 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_674 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_675 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_676 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_677 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_678 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_679 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_680 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_681 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_682 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_683 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_684 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_685 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_686 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_687 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_688 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_689 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_690 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_691 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_692 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_693 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_694 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_695 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_696 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_697 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_698 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_699 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_700 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_701 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_702 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_703 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_704 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_705 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_706 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_707 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_708 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_709 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_710 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_711 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_712 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_713 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_714 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_715 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_716 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_717 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_718 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_719 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_720 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_721 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_722 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_723 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_724 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_725 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_726 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_727 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_728 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_729 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_730 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_731 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_732 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_733 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_734 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_735 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_736 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_737 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_738 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_739 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_740 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_741 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_742 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_743 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_744 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_745 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_746 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_747 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_748 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_749 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_750 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_751 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_752 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_753 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_754 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_755 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_756 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_757 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_758 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_759 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_760 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_761 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_762 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_763 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_764 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_765 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_766 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_767 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_768 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_769 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_770 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_771 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_772 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_773 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_774 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_775 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_776 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_777 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_778 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_779 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_780 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_781 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_782 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_783 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_784 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_785 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_786 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_787 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_788 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_789 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_790 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_791 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_792 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_793 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_794 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_795 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_796 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_797 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_798 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_799 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_800 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_801 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_802 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_803 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_804 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_805 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_806 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_807 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_808 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_809 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_810 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_811 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_812 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_813 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_814 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_815 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_816 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_817 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_818 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_819 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_820 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_821 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_822 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_823 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_824 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_825 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_826 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_827 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_828 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_829 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_830 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_831 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_832 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_833 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_834 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_835 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_836 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_837 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_838 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_839 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_840 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_841 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_842 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_843 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_844 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_845 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_846 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_847 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_848 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_849 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_850 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_851 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_852 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_853 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_854 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_855 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_856 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_857 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_858 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_859 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd76) &&(input_capture[7:0] <= 8'd76) && 1'b1) ||
     ((input_capture[7:0] >= 8'd108) &&(input_capture[7:0] <= 8'd108) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_860 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_861 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_862 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_863 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_864 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_865 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_866 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_867 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_868 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_869 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_870 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_871 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_872 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_873 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_874 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_875 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_876 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_877 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_878 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_879 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_880 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_881 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_882 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_883 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_884 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_885 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_886 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_887 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_888 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_889 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_890 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_891 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_892 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_893 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_894 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_895 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_896 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_897 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_898 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_899 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_900 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_901 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_902 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_903 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_904 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_905 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_906 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_907 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_908 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_909 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_910 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_911 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_912 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_913 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_914 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_915 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_916 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_917 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_918 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_919 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_920 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_921 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_922 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_923 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_924 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_925 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_926 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_927 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_928 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_929 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_930 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_931 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_932 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_933 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_934 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_935 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_936 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_937 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_938 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_939 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_940 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_941 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_942 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_943 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_944 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_945 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_946 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_947 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_948 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_949 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_950 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_951 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_952 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_953 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_954 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_955 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_956 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_957 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_958 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_959 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_960 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_961 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_962 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_963 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_964 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_965 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_966 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_967 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_968 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_969 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_970 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_971 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_972 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_973 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_974 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_975 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_976 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_977 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_978 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_979 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_980 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_981 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_982 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_983 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_984 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_985 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_986 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_987 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_988 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_989 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_990 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_991 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_992 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_993 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_994 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_995 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_996 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_997 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_998 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_999 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1000 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1001 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1002 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1003 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1004 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1005 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1006 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1007 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1008 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1009 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1010 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1011 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1012 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1013 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1014 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1015 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1016 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1017 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1018 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1019 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1020 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1021 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1022 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1023 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1024 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1025 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1026 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1027 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1028 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1029 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1030 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1031 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1032 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1033 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1034 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1035 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1036 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1037 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1038 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1039 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1040 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1041 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1042 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1043 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1044 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1045 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1046 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1047 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1048 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1049 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1050 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1051 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1052 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1053 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1054 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1055 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1056 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1057 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1058 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1059 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1060 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1061 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1062 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1063 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1064 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1065 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1066 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1067 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1068 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1069 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1070 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1071 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1072 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1073 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1074 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1075 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1076 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1077 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1078 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1079 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd45) &&(input_capture[7:0] <= 8'd46) && 1'b1) ||
     ((input_capture[7:0] >= 8'd48) &&(input_capture[7:0] <= 8'd57) && 1'b1) ||
     ((input_capture[7:0] >= 8'd65) &&(input_capture[7:0] <= 8'd90) && 1'b1) ||
     ((input_capture[7:0] >= 8'd97) &&(input_capture[7:0] <= 8'd122) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule

 



module LUT_Match_vasim_68_1080 #(parameter integer width = 8)(
        input clk,
        input [width-1:0] symbols,
        output match);

wire match_internal;
wire [width-1:0] input_capture;
assign input_capture = symbols;
assign match = match_internal;

assign match_internal = (((input_capture[7:0] >= 8'd0) &&(input_capture[7:0] <= 8'd0) && 1'b1) ||
      1'b0) ? 1'b1 : 1'b0;


endmodule



module Automata_vasim_68(input clk,
           input run,
           input reset,
           input [7 : 0] symbols
           
           , output vasim_68_w_out_85
           , output vasim_68_w_out_94);

wire all_input;
wire start_of_data;

assign all_input = 1'b1;
assign start_of_data = ~reset;



/*wire vasim_68_w_out_1;
*/

wire vasim_68_lut_match_1;
wire vasim_68_w_match_1;

    
    
    

LUT_Match_vasim_68_1 #(8) lut_match_vasim_68_1(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1));


assign vasim_68_w_match_1 = vasim_68_lut_match_1 ;

STE #(.fan_in(1)) vasim_68_ste_1 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_970 }),
                .match(vasim_68_w_match_1) ,
                .active_state(vasim_68_w_out_1));




/*wire vasim_68_w_out_2;
*/

wire vasim_68_lut_match_2;
wire vasim_68_w_match_2;

    
    
    

LUT_Match_vasim_68_2 #(8) lut_match_vasim_68_2(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_2));


assign vasim_68_w_match_2 = vasim_68_lut_match_2 ;

STE #(.fan_in(2)) vasim_68_ste_2 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_1070 }),
                .match(vasim_68_w_match_2) ,
                .active_state(vasim_68_w_out_2));




/*wire vasim_68_w_out_3;
*/

wire vasim_68_lut_match_3;
wire vasim_68_w_match_3;

    
    
    

LUT_Match_vasim_68_3 #(8) lut_match_vasim_68_3(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_3));


assign vasim_68_w_match_3 = vasim_68_lut_match_3 ;

STE #(.fan_in(2)) vasim_68_ste_3 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1080 }),
                .match(vasim_68_w_match_3) ,
                .active_state(vasim_68_w_out_3));




/*wire vasim_68_w_out_4;
*/

wire vasim_68_lut_match_4;
wire vasim_68_w_match_4;

    
    
    

LUT_Match_vasim_68_4 #(8) lut_match_vasim_68_4(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_4));


assign vasim_68_w_match_4 = vasim_68_lut_match_4 ;

STE #(.fan_in(1)) vasim_68_ste_4 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_3 }),
                .match(vasim_68_w_match_4) ,
                .active_state(vasim_68_w_out_4));




/*wire vasim_68_w_out_5;
*/

wire vasim_68_lut_match_5;
wire vasim_68_w_match_5;

    
    
    

LUT_Match_vasim_68_5 #(8) lut_match_vasim_68_5(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_5));


assign vasim_68_w_match_5 = vasim_68_lut_match_5 ;

STE #(.fan_in(2)) vasim_68_ste_5 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_4 }),
                .match(vasim_68_w_match_5) ,
                .active_state(vasim_68_w_out_5));




/*wire vasim_68_w_out_6;
*/

wire vasim_68_lut_match_6;
wire vasim_68_w_match_6;

    
    
    

LUT_Match_vasim_68_6 #(8) lut_match_vasim_68_6(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_6));


assign vasim_68_w_match_6 = vasim_68_lut_match_6 ;

STE #(.fan_in(1)) vasim_68_ste_6 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_5 }),
                .match(vasim_68_w_match_6) ,
                .active_state(vasim_68_w_out_6));




/*wire vasim_68_w_out_7;
*/

wire vasim_68_lut_match_7;
wire vasim_68_w_match_7;

    
    
    

LUT_Match_vasim_68_7 #(8) lut_match_vasim_68_7(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_7));


assign vasim_68_w_match_7 = vasim_68_lut_match_7 ;

STE #(.fan_in(2)) vasim_68_ste_7 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_6 }),
                .match(vasim_68_w_match_7) ,
                .active_state(vasim_68_w_out_7));




/*wire vasim_68_w_out_8;
*/

wire vasim_68_lut_match_8;
wire vasim_68_w_match_8;

    
    
    

LUT_Match_vasim_68_8 #(8) lut_match_vasim_68_8(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_8));


assign vasim_68_w_match_8 = vasim_68_lut_match_8 ;

STE #(.fan_in(1)) vasim_68_ste_8 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_7 }),
                .match(vasim_68_w_match_8) ,
                .active_state(vasim_68_w_out_8));




/*wire vasim_68_w_out_9;
*/

wire vasim_68_lut_match_9;
wire vasim_68_w_match_9;

    
    
    

LUT_Match_vasim_68_9 #(8) lut_match_vasim_68_9(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_9));


assign vasim_68_w_match_9 = vasim_68_lut_match_9 ;

STE #(.fan_in(2)) vasim_68_ste_9 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_8, vasim_68_w_out_592 }),
                .match(vasim_68_w_match_9) ,
                .active_state(vasim_68_w_out_9));




/*wire vasim_68_w_out_10;
*/

wire vasim_68_lut_match_10;
wire vasim_68_w_match_10;

    
    
    

LUT_Match_vasim_68_10 #(8) lut_match_vasim_68_10(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_10));


assign vasim_68_w_match_10 = vasim_68_lut_match_10 ;

STE #(.fan_in(1)) vasim_68_ste_10 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_9 }),
                .match(vasim_68_w_match_10) ,
                .active_state(vasim_68_w_out_10));




/*wire vasim_68_w_out_11;
*/

wire vasim_68_lut_match_11;
wire vasim_68_w_match_11;

    
    
    

LUT_Match_vasim_68_11 #(8) lut_match_vasim_68_11(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_11));


assign vasim_68_w_match_11 = vasim_68_lut_match_11 ;

STE #(.fan_in(2)) vasim_68_ste_11 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_10 }),
                .match(vasim_68_w_match_11) ,
                .active_state(vasim_68_w_out_11));




/*wire vasim_68_w_out_12;
*/

wire vasim_68_lut_match_12;
wire vasim_68_w_match_12;

    
    
    

LUT_Match_vasim_68_12 #(8) lut_match_vasim_68_12(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_12));


assign vasim_68_w_match_12 = vasim_68_lut_match_12 ;

STE #(.fan_in(1)) vasim_68_ste_12 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_11 }),
                .match(vasim_68_w_match_12) ,
                .active_state(vasim_68_w_out_12));




/*wire vasim_68_w_out_13;
*/

wire vasim_68_lut_match_13;
wire vasim_68_w_match_13;

    
    
    

LUT_Match_vasim_68_13 #(8) lut_match_vasim_68_13(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_13));


assign vasim_68_w_match_13 = vasim_68_lut_match_13 ;

STE #(.fan_in(1)) vasim_68_ste_13 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_2 }),
                .match(vasim_68_w_match_13) ,
                .active_state(vasim_68_w_out_13));




/*wire vasim_68_w_out_14;
*/

wire vasim_68_lut_match_14;
wire vasim_68_w_match_14;

    
    
    

LUT_Match_vasim_68_14 #(8) lut_match_vasim_68_14(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_14));


assign vasim_68_w_match_14 = vasim_68_lut_match_14 ;

STE #(.fan_in(2)) vasim_68_ste_14 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_12 }),
                .match(vasim_68_w_match_14) ,
                .active_state(vasim_68_w_out_14));




/*wire vasim_68_w_out_15;
*/

wire vasim_68_lut_match_15;
wire vasim_68_w_match_15;

    
    
    

LUT_Match_vasim_68_15 #(8) lut_match_vasim_68_15(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_15));


assign vasim_68_w_match_15 = vasim_68_lut_match_15 ;

STE #(.fan_in(1)) vasim_68_ste_15 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_14 }),
                .match(vasim_68_w_match_15) ,
                .active_state(vasim_68_w_out_15));




/*wire vasim_68_w_out_16;
*/

wire vasim_68_lut_match_16;
wire vasim_68_w_match_16;

    
    
    

LUT_Match_vasim_68_16 #(8) lut_match_vasim_68_16(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_16));


assign vasim_68_w_match_16 = vasim_68_lut_match_16 ;

STE #(.fan_in(2)) vasim_68_ste_16 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_15 }),
                .match(vasim_68_w_match_16) ,
                .active_state(vasim_68_w_out_16));




/*wire vasim_68_w_out_17;
*/

wire vasim_68_lut_match_17;
wire vasim_68_w_match_17;

    
    
    

LUT_Match_vasim_68_17 #(8) lut_match_vasim_68_17(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_17));


assign vasim_68_w_match_17 = vasim_68_lut_match_17 ;

STE #(.fan_in(1)) vasim_68_ste_17 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_16 }),
                .match(vasim_68_w_match_17) ,
                .active_state(vasim_68_w_out_17));




/*wire vasim_68_w_out_18;
*/

wire vasim_68_lut_match_18;
wire vasim_68_w_match_18;

    
    
    

LUT_Match_vasim_68_18 #(8) lut_match_vasim_68_18(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_18));


assign vasim_68_w_match_18 = vasim_68_lut_match_18 ;

STE #(.fan_in(2)) vasim_68_ste_18 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_17 }),
                .match(vasim_68_w_match_18) ,
                .active_state(vasim_68_w_out_18));




/*wire vasim_68_w_out_19;
*/

wire vasim_68_lut_match_19;
wire vasim_68_w_match_19;

    
    
    

LUT_Match_vasim_68_19 #(8) lut_match_vasim_68_19(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_19));


assign vasim_68_w_match_19 = vasim_68_lut_match_19 ;

STE #(.fan_in(1)) vasim_68_ste_19 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_18 }),
                .match(vasim_68_w_match_19) ,
                .active_state(vasim_68_w_out_19));




/*wire vasim_68_w_out_20;
*/

wire vasim_68_lut_match_20;
wire vasim_68_w_match_20;

    
    
    

LUT_Match_vasim_68_20 #(8) lut_match_vasim_68_20(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_20));


assign vasim_68_w_match_20 = vasim_68_lut_match_20 ;

STE #(.fan_in(2)) vasim_68_ste_20 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_19 }),
                .match(vasim_68_w_match_20) ,
                .active_state(vasim_68_w_out_20));




/*wire vasim_68_w_out_21;
*/

wire vasim_68_lut_match_21;
wire vasim_68_w_match_21;

    
    
    

LUT_Match_vasim_68_21 #(8) lut_match_vasim_68_21(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_21));


assign vasim_68_w_match_21 = vasim_68_lut_match_21 ;

STE #(.fan_in(1)) vasim_68_ste_21 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_20 }),
                .match(vasim_68_w_match_21) ,
                .active_state(vasim_68_w_out_21));




/*wire vasim_68_w_out_22;
*/

wire vasim_68_lut_match_22;
wire vasim_68_w_match_22;

    
    
    

LUT_Match_vasim_68_22 #(8) lut_match_vasim_68_22(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_22));


assign vasim_68_w_match_22 = vasim_68_lut_match_22 ;

STE #(.fan_in(2)) vasim_68_ste_22 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_21 }),
                .match(vasim_68_w_match_22) ,
                .active_state(vasim_68_w_out_22));




/*wire vasim_68_w_out_23;
*/

wire vasim_68_lut_match_23;
wire vasim_68_w_match_23;

    
    
    

LUT_Match_vasim_68_23 #(8) lut_match_vasim_68_23(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_23));


assign vasim_68_w_match_23 = vasim_68_lut_match_23 ;

STE #(.fan_in(1)) vasim_68_ste_23 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_22 }),
                .match(vasim_68_w_match_23) ,
                .active_state(vasim_68_w_out_23));




/*wire vasim_68_w_out_24;
*/

wire vasim_68_lut_match_24;
wire vasim_68_w_match_24;

    
    
    

LUT_Match_vasim_68_24 #(8) lut_match_vasim_68_24(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_24));


assign vasim_68_w_match_24 = vasim_68_lut_match_24 ;

STE #(.fan_in(2)) vasim_68_ste_24 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_13 }),
                .match(vasim_68_w_match_24) ,
                .active_state(vasim_68_w_out_24));




/*wire vasim_68_w_out_25;
*/

wire vasim_68_lut_match_25;
wire vasim_68_w_match_25;

    
    
    

LUT_Match_vasim_68_25 #(8) lut_match_vasim_68_25(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_25));


assign vasim_68_w_match_25 = vasim_68_lut_match_25 ;

STE #(.fan_in(2)) vasim_68_ste_25 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_23 }),
                .match(vasim_68_w_match_25) ,
                .active_state(vasim_68_w_out_25));




/*wire vasim_68_w_out_26;
*/

wire vasim_68_lut_match_26;
wire vasim_68_w_match_26;

    
    
    

LUT_Match_vasim_68_26 #(8) lut_match_vasim_68_26(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_26));


assign vasim_68_w_match_26 = vasim_68_lut_match_26 ;

STE #(.fan_in(1)) vasim_68_ste_26 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_25 }),
                .match(vasim_68_w_match_26) ,
                .active_state(vasim_68_w_out_26));




/*wire vasim_68_w_out_27;
*/

wire vasim_68_lut_match_27;
wire vasim_68_w_match_27;

    
    
    

LUT_Match_vasim_68_27 #(8) lut_match_vasim_68_27(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_27));


assign vasim_68_w_match_27 = vasim_68_lut_match_27 ;

STE #(.fan_in(2)) vasim_68_ste_27 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_26 }),
                .match(vasim_68_w_match_27) ,
                .active_state(vasim_68_w_out_27));




/*wire vasim_68_w_out_28;
*/

wire vasim_68_lut_match_28;
wire vasim_68_w_match_28;

    
    
    

LUT_Match_vasim_68_28 #(8) lut_match_vasim_68_28(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_28));


assign vasim_68_w_match_28 = vasim_68_lut_match_28 ;

STE #(.fan_in(1)) vasim_68_ste_28 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_27 }),
                .match(vasim_68_w_match_28) ,
                .active_state(vasim_68_w_out_28));




/*wire vasim_68_w_out_29;
*/

wire vasim_68_lut_match_29;
wire vasim_68_w_match_29;

    
    
    

LUT_Match_vasim_68_29 #(8) lut_match_vasim_68_29(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_29));


assign vasim_68_w_match_29 = vasim_68_lut_match_29 ;

STE #(.fan_in(2)) vasim_68_ste_29 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_28 }),
                .match(vasim_68_w_match_29) ,
                .active_state(vasim_68_w_out_29));




/*wire vasim_68_w_out_30;
*/

wire vasim_68_lut_match_30;
wire vasim_68_w_match_30;

    
    
    

LUT_Match_vasim_68_30 #(8) lut_match_vasim_68_30(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_30));


assign vasim_68_w_match_30 = vasim_68_lut_match_30 ;

STE #(.fan_in(1)) vasim_68_ste_30 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_29 }),
                .match(vasim_68_w_match_30) ,
                .active_state(vasim_68_w_out_30));




/*wire vasim_68_w_out_31;
*/

wire vasim_68_lut_match_31;
wire vasim_68_w_match_31;

    
    
    

LUT_Match_vasim_68_31 #(8) lut_match_vasim_68_31(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_31));


assign vasim_68_w_match_31 = vasim_68_lut_match_31 ;

STE #(.fan_in(2)) vasim_68_ste_31 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_30 }),
                .match(vasim_68_w_match_31) ,
                .active_state(vasim_68_w_out_31));




/*wire vasim_68_w_out_32;
*/

wire vasim_68_lut_match_32;
wire vasim_68_w_match_32;

    
    
    

LUT_Match_vasim_68_32 #(8) lut_match_vasim_68_32(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_32));


assign vasim_68_w_match_32 = vasim_68_lut_match_32 ;

STE #(.fan_in(1)) vasim_68_ste_32 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_31 }),
                .match(vasim_68_w_match_32) ,
                .active_state(vasim_68_w_out_32));




/*wire vasim_68_w_out_33;
*/

wire vasim_68_lut_match_33;
wire vasim_68_w_match_33;

    
    
    

LUT_Match_vasim_68_33 #(8) lut_match_vasim_68_33(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_33));


assign vasim_68_w_match_33 = vasim_68_lut_match_33 ;

STE #(.fan_in(2)) vasim_68_ste_33 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_32, vasim_68_w_out_592 }),
                .match(vasim_68_w_match_33) ,
                .active_state(vasim_68_w_out_33));




/*wire vasim_68_w_out_34;
*/

wire vasim_68_lut_match_34;
wire vasim_68_w_match_34;

    
    
    

LUT_Match_vasim_68_34 #(8) lut_match_vasim_68_34(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_34));


assign vasim_68_w_match_34 = vasim_68_lut_match_34 ;

STE #(.fan_in(1)) vasim_68_ste_34 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_33 }),
                .match(vasim_68_w_match_34) ,
                .active_state(vasim_68_w_out_34));




/*wire vasim_68_w_out_35;
*/

wire vasim_68_lut_match_35;
wire vasim_68_w_match_35;

    
    
    

LUT_Match_vasim_68_35 #(8) lut_match_vasim_68_35(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_35));


assign vasim_68_w_match_35 = vasim_68_lut_match_35 ;

STE #(.fan_in(1)) vasim_68_ste_35 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_24 }),
                .match(vasim_68_w_match_35) ,
                .active_state(vasim_68_w_out_35));




/*wire vasim_68_w_out_36;
*/

wire vasim_68_lut_match_36;
wire vasim_68_w_match_36;

    
    
    

LUT_Match_vasim_68_36 #(8) lut_match_vasim_68_36(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_36));


assign vasim_68_w_match_36 = vasim_68_lut_match_36 ;

STE #(.fan_in(2)) vasim_68_ste_36 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_34 }),
                .match(vasim_68_w_match_36) ,
                .active_state(vasim_68_w_out_36));




/*wire vasim_68_w_out_37;
*/

wire vasim_68_lut_match_37;
wire vasim_68_w_match_37;

    
    
    

LUT_Match_vasim_68_37 #(8) lut_match_vasim_68_37(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_37));


assign vasim_68_w_match_37 = vasim_68_lut_match_37 ;

STE #(.fan_in(1)) vasim_68_ste_37 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_36 }),
                .match(vasim_68_w_match_37) ,
                .active_state(vasim_68_w_out_37));




/*wire vasim_68_w_out_38;
*/

wire vasim_68_lut_match_38;
wire vasim_68_w_match_38;

    
    
    

LUT_Match_vasim_68_38 #(8) lut_match_vasim_68_38(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_38));


assign vasim_68_w_match_38 = vasim_68_lut_match_38 ;

STE #(.fan_in(2)) vasim_68_ste_38 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_37 }),
                .match(vasim_68_w_match_38) ,
                .active_state(vasim_68_w_out_38));




/*wire vasim_68_w_out_39;
*/

wire vasim_68_lut_match_39;
wire vasim_68_w_match_39;

    
    
    

LUT_Match_vasim_68_39 #(8) lut_match_vasim_68_39(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_39));


assign vasim_68_w_match_39 = vasim_68_lut_match_39 ;

STE #(.fan_in(1)) vasim_68_ste_39 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_38 }),
                .match(vasim_68_w_match_39) ,
                .active_state(vasim_68_w_out_39));




/*wire vasim_68_w_out_40;
*/

wire vasim_68_lut_match_40;
wire vasim_68_w_match_40;

    
    
    

LUT_Match_vasim_68_40 #(8) lut_match_vasim_68_40(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_40));


assign vasim_68_w_match_40 = vasim_68_lut_match_40 ;

STE #(.fan_in(2)) vasim_68_ste_40 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_39 }),
                .match(vasim_68_w_match_40) ,
                .active_state(vasim_68_w_out_40));




/*wire vasim_68_w_out_41;
*/

wire vasim_68_lut_match_41;
wire vasim_68_w_match_41;

    
    
    

LUT_Match_vasim_68_41 #(8) lut_match_vasim_68_41(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_41));


assign vasim_68_w_match_41 = vasim_68_lut_match_41 ;

STE #(.fan_in(1)) vasim_68_ste_41 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_40 }),
                .match(vasim_68_w_match_41) ,
                .active_state(vasim_68_w_out_41));




/*wire vasim_68_w_out_42;
*/

wire vasim_68_lut_match_42;
wire vasim_68_w_match_42;

    
    
    

LUT_Match_vasim_68_42 #(8) lut_match_vasim_68_42(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_42));


assign vasim_68_w_match_42 = vasim_68_lut_match_42 ;

STE #(.fan_in(2)) vasim_68_ste_42 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_41 }),
                .match(vasim_68_w_match_42) ,
                .active_state(vasim_68_w_out_42));




/*wire vasim_68_w_out_43;
*/

wire vasim_68_lut_match_43;
wire vasim_68_w_match_43;

    
    
    

LUT_Match_vasim_68_43 #(8) lut_match_vasim_68_43(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_43));


assign vasim_68_w_match_43 = vasim_68_lut_match_43 ;

STE #(.fan_in(1)) vasim_68_ste_43 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_42 }),
                .match(vasim_68_w_match_43) ,
                .active_state(vasim_68_w_out_43));




/*wire vasim_68_w_out_44;
*/

wire vasim_68_lut_match_44;
wire vasim_68_w_match_44;

    
    
    

LUT_Match_vasim_68_44 #(8) lut_match_vasim_68_44(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_44));


assign vasim_68_w_match_44 = vasim_68_lut_match_44 ;

STE #(.fan_in(2)) vasim_68_ste_44 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_43 }),
                .match(vasim_68_w_match_44) ,
                .active_state(vasim_68_w_out_44));




/*wire vasim_68_w_out_45;
*/

wire vasim_68_lut_match_45;
wire vasim_68_w_match_45;

    
    
    

LUT_Match_vasim_68_45 #(8) lut_match_vasim_68_45(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_45));


assign vasim_68_w_match_45 = vasim_68_lut_match_45 ;

STE #(.fan_in(1)) vasim_68_ste_45 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_44 }),
                .match(vasim_68_w_match_45) ,
                .active_state(vasim_68_w_out_45));




/*wire vasim_68_w_out_46;
*/

wire vasim_68_lut_match_46;
wire vasim_68_w_match_46;

    
    
    

LUT_Match_vasim_68_46 #(8) lut_match_vasim_68_46(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_46));


assign vasim_68_w_match_46 = vasim_68_lut_match_46 ;

STE #(.fan_in(2)) vasim_68_ste_46 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_35 }),
                .match(vasim_68_w_match_46) ,
                .active_state(vasim_68_w_out_46));




/*wire vasim_68_w_out_47;
*/

wire vasim_68_lut_match_47;
wire vasim_68_w_match_47;

    
    
    

LUT_Match_vasim_68_47 #(8) lut_match_vasim_68_47(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_47));


assign vasim_68_w_match_47 = vasim_68_lut_match_47 ;

STE #(.fan_in(2)) vasim_68_ste_47 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_45 }),
                .match(vasim_68_w_match_47) ,
                .active_state(vasim_68_w_out_47));




/*wire vasim_68_w_out_48;
*/

wire vasim_68_lut_match_48;
wire vasim_68_w_match_48;

    
    
    

LUT_Match_vasim_68_48 #(8) lut_match_vasim_68_48(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_48));


assign vasim_68_w_match_48 = vasim_68_lut_match_48 ;

STE #(.fan_in(1)) vasim_68_ste_48 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_47 }),
                .match(vasim_68_w_match_48) ,
                .active_state(vasim_68_w_out_48));




/*wire vasim_68_w_out_49;
*/

wire vasim_68_lut_match_49;
wire vasim_68_w_match_49;

    
    
    

LUT_Match_vasim_68_49 #(8) lut_match_vasim_68_49(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_49));


assign vasim_68_w_match_49 = vasim_68_lut_match_49 ;

STE #(.fan_in(2)) vasim_68_ste_49 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_48, vasim_68_w_out_592 }),
                .match(vasim_68_w_match_49) ,
                .active_state(vasim_68_w_out_49));




/*wire vasim_68_w_out_50;
*/

wire vasim_68_lut_match_50;
wire vasim_68_w_match_50;

    
    
    

LUT_Match_vasim_68_50 #(8) lut_match_vasim_68_50(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_50));


assign vasim_68_w_match_50 = vasim_68_lut_match_50 ;

STE #(.fan_in(1)) vasim_68_ste_50 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_49 }),
                .match(vasim_68_w_match_50) ,
                .active_state(vasim_68_w_out_50));




/*wire vasim_68_w_out_51;
*/

wire vasim_68_lut_match_51;
wire vasim_68_w_match_51;

    
    
    

LUT_Match_vasim_68_51 #(8) lut_match_vasim_68_51(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_51));


assign vasim_68_w_match_51 = vasim_68_lut_match_51 ;

STE #(.fan_in(2)) vasim_68_ste_51 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_50 }),
                .match(vasim_68_w_match_51) ,
                .active_state(vasim_68_w_out_51));




/*wire vasim_68_w_out_52;
*/

wire vasim_68_lut_match_52;
wire vasim_68_w_match_52;

    
    
    

LUT_Match_vasim_68_52 #(8) lut_match_vasim_68_52(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_52));


assign vasim_68_w_match_52 = vasim_68_lut_match_52 ;

STE #(.fan_in(1)) vasim_68_ste_52 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_51 }),
                .match(vasim_68_w_match_52) ,
                .active_state(vasim_68_w_out_52));




/*wire vasim_68_w_out_53;
*/

wire vasim_68_lut_match_53;
wire vasim_68_w_match_53;

    
    
    

LUT_Match_vasim_68_53 #(8) lut_match_vasim_68_53(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_53));


assign vasim_68_w_match_53 = vasim_68_lut_match_53 ;

STE #(.fan_in(2)) vasim_68_ste_53 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_52 }),
                .match(vasim_68_w_match_53) ,
                .active_state(vasim_68_w_out_53));




/*wire vasim_68_w_out_54;
*/

wire vasim_68_lut_match_54;
wire vasim_68_w_match_54;

    
    
    

LUT_Match_vasim_68_54 #(8) lut_match_vasim_68_54(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_54));


assign vasim_68_w_match_54 = vasim_68_lut_match_54 ;

STE #(.fan_in(1)) vasim_68_ste_54 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_53 }),
                .match(vasim_68_w_match_54) ,
                .active_state(vasim_68_w_out_54));




/*wire vasim_68_w_out_55;
*/

wire vasim_68_lut_match_55;
wire vasim_68_w_match_55;

    
    
    

LUT_Match_vasim_68_55 #(8) lut_match_vasim_68_55(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_55));


assign vasim_68_w_match_55 = vasim_68_lut_match_55 ;

STE #(.fan_in(2)) vasim_68_ste_55 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_54 }),
                .match(vasim_68_w_match_55) ,
                .active_state(vasim_68_w_out_55));




/*wire vasim_68_w_out_56;
*/

wire vasim_68_lut_match_56;
wire vasim_68_w_match_56;

    
    
    

LUT_Match_vasim_68_56 #(8) lut_match_vasim_68_56(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_56));


assign vasim_68_w_match_56 = vasim_68_lut_match_56 ;

STE #(.fan_in(1)) vasim_68_ste_56 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_55 }),
                .match(vasim_68_w_match_56) ,
                .active_state(vasim_68_w_out_56));




/*wire vasim_68_w_out_57;
*/

wire vasim_68_lut_match_57;
wire vasim_68_w_match_57;

    
    
    

LUT_Match_vasim_68_57 #(8) lut_match_vasim_68_57(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_57));


assign vasim_68_w_match_57 = vasim_68_lut_match_57 ;

STE #(.fan_in(1)) vasim_68_ste_57 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_46 }),
                .match(vasim_68_w_match_57) ,
                .active_state(vasim_68_w_out_57));




/*wire vasim_68_w_out_58;
*/

wire vasim_68_lut_match_58;
wire vasim_68_w_match_58;

    
    
    

LUT_Match_vasim_68_58 #(8) lut_match_vasim_68_58(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_58));


assign vasim_68_w_match_58 = vasim_68_lut_match_58 ;

STE #(.fan_in(2)) vasim_68_ste_58 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_56, vasim_68_w_out_592 }),
                .match(vasim_68_w_match_58) ,
                .active_state(vasim_68_w_out_58));




/*wire vasim_68_w_out_59;
*/

wire vasim_68_lut_match_59;
wire vasim_68_w_match_59;

    
    
    

LUT_Match_vasim_68_59 #(8) lut_match_vasim_68_59(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_59));


assign vasim_68_w_match_59 = vasim_68_lut_match_59 ;

STE #(.fan_in(1)) vasim_68_ste_59 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_58 }),
                .match(vasim_68_w_match_59) ,
                .active_state(vasim_68_w_out_59));




/*wire vasim_68_w_out_60;
*/

wire vasim_68_lut_match_60;
wire vasim_68_w_match_60;

    
    
    

LUT_Match_vasim_68_60 #(8) lut_match_vasim_68_60(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_60));


assign vasim_68_w_match_60 = vasim_68_lut_match_60 ;

STE #(.fan_in(2)) vasim_68_ste_60 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_59 }),
                .match(vasim_68_w_match_60) ,
                .active_state(vasim_68_w_out_60));




/*wire vasim_68_w_out_61;
*/

wire vasim_68_lut_match_61;
wire vasim_68_w_match_61;

    
    
    

LUT_Match_vasim_68_61 #(8) lut_match_vasim_68_61(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_61));


assign vasim_68_w_match_61 = vasim_68_lut_match_61 ;

STE #(.fan_in(1)) vasim_68_ste_61 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_60 }),
                .match(vasim_68_w_match_61) ,
                .active_state(vasim_68_w_out_61));




/*wire vasim_68_w_out_62;
*/

wire vasim_68_lut_match_62;
wire vasim_68_w_match_62;

    
    
    

LUT_Match_vasim_68_62 #(8) lut_match_vasim_68_62(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_62));


assign vasim_68_w_match_62 = vasim_68_lut_match_62 ;

STE #(.fan_in(2)) vasim_68_ste_62 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_61 }),
                .match(vasim_68_w_match_62) ,
                .active_state(vasim_68_w_out_62));




/*wire vasim_68_w_out_63;
*/

wire vasim_68_lut_match_63;
wire vasim_68_w_match_63;

    
    
    

LUT_Match_vasim_68_63 #(8) lut_match_vasim_68_63(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_63));


assign vasim_68_w_match_63 = vasim_68_lut_match_63 ;

STE #(.fan_in(1)) vasim_68_ste_63 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_62 }),
                .match(vasim_68_w_match_63) ,
                .active_state(vasim_68_w_out_63));




/*wire vasim_68_w_out_64;
*/

wire vasim_68_lut_match_64;
wire vasim_68_w_match_64;

    
    
    

LUT_Match_vasim_68_64 #(8) lut_match_vasim_68_64(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_64));


assign vasim_68_w_match_64 = vasim_68_lut_match_64 ;

STE #(.fan_in(2)) vasim_68_ste_64 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_63 }),
                .match(vasim_68_w_match_64) ,
                .active_state(vasim_68_w_out_64));




/*wire vasim_68_w_out_65;
*/

wire vasim_68_lut_match_65;
wire vasim_68_w_match_65;

    
    
    

LUT_Match_vasim_68_65 #(8) lut_match_vasim_68_65(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_65));


assign vasim_68_w_match_65 = vasim_68_lut_match_65 ;

STE #(.fan_in(1)) vasim_68_ste_65 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_64 }),
                .match(vasim_68_w_match_65) ,
                .active_state(vasim_68_w_out_65));




/*wire vasim_68_w_out_66;
*/

wire vasim_68_lut_match_66;
wire vasim_68_w_match_66;

    
    
    

LUT_Match_vasim_68_66 #(8) lut_match_vasim_68_66(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_66));


assign vasim_68_w_match_66 = vasim_68_lut_match_66 ;

STE #(.fan_in(2)) vasim_68_ste_66 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_65 }),
                .match(vasim_68_w_match_66) ,
                .active_state(vasim_68_w_out_66));




/*wire vasim_68_w_out_67;
*/

wire vasim_68_lut_match_67;
wire vasim_68_w_match_67;

    
    
    

LUT_Match_vasim_68_67 #(8) lut_match_vasim_68_67(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_67));


assign vasim_68_w_match_67 = vasim_68_lut_match_67 ;

STE #(.fan_in(1)) vasim_68_ste_67 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_66 }),
                .match(vasim_68_w_match_67) ,
                .active_state(vasim_68_w_out_67));




/*wire vasim_68_w_out_68;
*/

wire vasim_68_lut_match_68;
wire vasim_68_w_match_68;

    
    
    

LUT_Match_vasim_68_68 #(8) lut_match_vasim_68_68(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_68));


assign vasim_68_w_match_68 = vasim_68_lut_match_68 ;

STE #(.fan_in(2)) vasim_68_ste_68 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_57, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_68) ,
                .active_state(vasim_68_w_out_68));




/*wire vasim_68_w_out_69;
*/

wire vasim_68_lut_match_69;
wire vasim_68_w_match_69;

    
    
    

LUT_Match_vasim_68_69 #(8) lut_match_vasim_68_69(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_69));


assign vasim_68_w_match_69 = vasim_68_lut_match_69 ;

STE #(.fan_in(2)) vasim_68_ste_69 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_67 }),
                .match(vasim_68_w_match_69) ,
                .active_state(vasim_68_w_out_69));




/*wire vasim_68_w_out_70;
*/

wire vasim_68_lut_match_70;
wire vasim_68_w_match_70;

    
    
    

LUT_Match_vasim_68_70 #(8) lut_match_vasim_68_70(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_70));


assign vasim_68_w_match_70 = vasim_68_lut_match_70 ;

STE #(.fan_in(1)) vasim_68_ste_70 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_69 }),
                .match(vasim_68_w_match_70) ,
                .active_state(vasim_68_w_out_70));




/*wire vasim_68_w_out_71;
*/

wire vasim_68_lut_match_71;
wire vasim_68_w_match_71;

    
    
    

LUT_Match_vasim_68_71 #(8) lut_match_vasim_68_71(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_71));


assign vasim_68_w_match_71 = vasim_68_lut_match_71 ;

STE #(.fan_in(2)) vasim_68_ste_71 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_70 }),
                .match(vasim_68_w_match_71) ,
                .active_state(vasim_68_w_out_71));




/*wire vasim_68_w_out_72;
*/

wire vasim_68_lut_match_72;
wire vasim_68_w_match_72;

    
    
    

LUT_Match_vasim_68_72 #(8) lut_match_vasim_68_72(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_72));


assign vasim_68_w_match_72 = vasim_68_lut_match_72 ;

STE #(.fan_in(1)) vasim_68_ste_72 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_71 }),
                .match(vasim_68_w_match_72) ,
                .active_state(vasim_68_w_out_72));




/*wire vasim_68_w_out_73;
*/

wire vasim_68_lut_match_73;
wire vasim_68_w_match_73;

    
    
    

LUT_Match_vasim_68_73 #(8) lut_match_vasim_68_73(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_73));


assign vasim_68_w_match_73 = vasim_68_lut_match_73 ;

STE #(.fan_in(2)) vasim_68_ste_73 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_72, vasim_68_w_out_592 }),
                .match(vasim_68_w_match_73) ,
                .active_state(vasim_68_w_out_73));




/*wire vasim_68_w_out_74;
*/

wire vasim_68_lut_match_74;
wire vasim_68_w_match_74;

    
    
    

LUT_Match_vasim_68_74 #(8) lut_match_vasim_68_74(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_74));


assign vasim_68_w_match_74 = vasim_68_lut_match_74 ;

STE #(.fan_in(1)) vasim_68_ste_74 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_73 }),
                .match(vasim_68_w_match_74) ,
                .active_state(vasim_68_w_out_74));




/*wire vasim_68_w_out_75;
*/

wire vasim_68_lut_match_75;
wire vasim_68_w_match_75;

    
    
    

LUT_Match_vasim_68_75 #(8) lut_match_vasim_68_75(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_75));


assign vasim_68_w_match_75 = vasim_68_lut_match_75 ;

STE #(.fan_in(2)) vasim_68_ste_75 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_74 }),
                .match(vasim_68_w_match_75) ,
                .active_state(vasim_68_w_out_75));




/*wire vasim_68_w_out_76;
*/

wire vasim_68_lut_match_76;
wire vasim_68_w_match_76;

    
    
    

LUT_Match_vasim_68_76 #(8) lut_match_vasim_68_76(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_76));


assign vasim_68_w_match_76 = vasim_68_lut_match_76 ;

STE #(.fan_in(1)) vasim_68_ste_76 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_75 }),
                .match(vasim_68_w_match_76) ,
                .active_state(vasim_68_w_out_76));




/*wire vasim_68_w_out_77;
*/

wire vasim_68_lut_match_77;
wire vasim_68_w_match_77;

    
    
    

LUT_Match_vasim_68_77 #(8) lut_match_vasim_68_77(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_77));


assign vasim_68_w_match_77 = vasim_68_lut_match_77 ;

STE #(.fan_in(2)) vasim_68_ste_77 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_76 }),
                .match(vasim_68_w_match_77) ,
                .active_state(vasim_68_w_out_77));




/*wire vasim_68_w_out_78;
*/

wire vasim_68_lut_match_78;
wire vasim_68_w_match_78;

    
    
    

LUT_Match_vasim_68_78 #(8) lut_match_vasim_68_78(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_78));


assign vasim_68_w_match_78 = vasim_68_lut_match_78 ;

STE #(.fan_in(1)) vasim_68_ste_78 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_77 }),
                .match(vasim_68_w_match_78) ,
                .active_state(vasim_68_w_out_78));




/*wire vasim_68_w_out_79;
*/

wire vasim_68_lut_match_79;
wire vasim_68_w_match_79;

    
    
    

LUT_Match_vasim_68_79 #(8) lut_match_vasim_68_79(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_79));


assign vasim_68_w_match_79 = vasim_68_lut_match_79 ;

STE #(.fan_in(1)) vasim_68_ste_79 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_68 }),
                .match(vasim_68_w_match_79) ,
                .active_state(vasim_68_w_out_79));




/*wire vasim_68_w_out_80;
*/

wire vasim_68_lut_match_80;
wire vasim_68_w_match_80;

    
    
    

LUT_Match_vasim_68_80 #(8) lut_match_vasim_68_80(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_80));


assign vasim_68_w_match_80 = vasim_68_lut_match_80 ;

STE #(.fan_in(1)) vasim_68_ste_80 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_78 }),
                .match(vasim_68_w_match_80) ,
                .active_state(vasim_68_w_out_80));




/*wire vasim_68_w_out_81;
*/

wire vasim_68_lut_match_81;
wire vasim_68_w_match_81;

    
    
    

LUT_Match_vasim_68_81 #(8) lut_match_vasim_68_81(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_81));


assign vasim_68_w_match_81 = vasim_68_lut_match_81 ;

STE #(.fan_in(1)) vasim_68_ste_81 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_80 }),
                .match(vasim_68_w_match_81) ,
                .active_state(vasim_68_w_out_81));




/*wire vasim_68_w_out_82;
*/

wire vasim_68_lut_match_82;
wire vasim_68_w_match_82;

    
    
    

LUT_Match_vasim_68_82 #(8) lut_match_vasim_68_82(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_82));


assign vasim_68_w_match_82 = vasim_68_lut_match_82 ;

STE #(.fan_in(2)) vasim_68_ste_82 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_81, vasim_68_w_out_78 }),
                .match(vasim_68_w_match_82) ,
                .active_state(vasim_68_w_out_82));




/*wire vasim_68_w_out_83;
*/

wire vasim_68_lut_match_83;
wire vasim_68_w_match_83;

    
    
    

LUT_Match_vasim_68_83 #(8) lut_match_vasim_68_83(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_83));


assign vasim_68_w_match_83 = vasim_68_lut_match_83 ;

STE #(.fan_in(1)) vasim_68_ste_83 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_82 }),
                .match(vasim_68_w_match_83) ,
                .active_state(vasim_68_w_out_83));




/*wire vasim_68_w_out_84;
*/

wire vasim_68_lut_match_84;
wire vasim_68_w_match_84;

    
    
    

LUT_Match_vasim_68_84 #(8) lut_match_vasim_68_84(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_84));


assign vasim_68_w_match_84 = vasim_68_lut_match_84 ;

STE #(.fan_in(2)) vasim_68_ste_84 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_83, vasim_68_w_out_78 }),
                .match(vasim_68_w_match_84) ,
                .active_state(vasim_68_w_out_84));




/**/

wire vasim_68_lut_match_85;
wire vasim_68_w_match_85;

    
    
    

LUT_Match_vasim_68_85 #(8) lut_match_vasim_68_85(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_85));


assign vasim_68_w_match_85 = vasim_68_lut_match_85 ;

STE #(.fan_in(1)) vasim_68_ste_85 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_84 }),
                .match(vasim_68_w_match_85) ,
                .active_state(vasim_68_w_out_85));




/*wire vasim_68_w_out_86;
*/

wire vasim_68_lut_match_86;
wire vasim_68_w_match_86;

    
    
    

LUT_Match_vasim_68_86 #(8) lut_match_vasim_68_86(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_86));


assign vasim_68_w_match_86 = vasim_68_lut_match_86 ;

STE #(.fan_in(1)) vasim_68_ste_86 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_85 }),
                .match(vasim_68_w_match_86) ,
                .active_state(vasim_68_w_out_86));




/*wire vasim_68_w_out_87;
*/

wire vasim_68_lut_match_87;
wire vasim_68_w_match_87;

    
    
    

LUT_Match_vasim_68_87 #(8) lut_match_vasim_68_87(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_87));


assign vasim_68_w_match_87 = vasim_68_lut_match_87 ;

STE #(.fan_in(1)) vasim_68_ste_87 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_86 }),
                .match(vasim_68_w_match_87) ,
                .active_state(vasim_68_w_out_87));




/*wire vasim_68_w_out_88;
*/

wire vasim_68_lut_match_88;
wire vasim_68_w_match_88;

    
    
    

LUT_Match_vasim_68_88 #(8) lut_match_vasim_68_88(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_88));


assign vasim_68_w_match_88 = vasim_68_lut_match_88 ;

STE #(.fan_in(2)) vasim_68_ste_88 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_85, vasim_68_w_out_87 }),
                .match(vasim_68_w_match_88) ,
                .active_state(vasim_68_w_out_88));




/*wire vasim_68_w_out_89;
*/

wire vasim_68_lut_match_89;
wire vasim_68_w_match_89;

    
    
    

LUT_Match_vasim_68_89 #(8) lut_match_vasim_68_89(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_89));


assign vasim_68_w_match_89 = vasim_68_lut_match_89 ;

STE #(.fan_in(1)) vasim_68_ste_89 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_88 }),
                .match(vasim_68_w_match_89) ,
                .active_state(vasim_68_w_out_89));




/*wire vasim_68_w_out_90;
*/

wire vasim_68_lut_match_90;
wire vasim_68_w_match_90;

    
    
    

LUT_Match_vasim_68_90 #(8) lut_match_vasim_68_90(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_90));


assign vasim_68_w_match_90 = vasim_68_lut_match_90 ;

STE #(.fan_in(2)) vasim_68_ste_90 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_79 }),
                .match(vasim_68_w_match_90) ,
                .active_state(vasim_68_w_out_90));




/*wire vasim_68_w_out_91;
*/

wire vasim_68_lut_match_91;
wire vasim_68_w_match_91;

    
    
    

LUT_Match_vasim_68_91 #(8) lut_match_vasim_68_91(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_91));


assign vasim_68_w_match_91 = vasim_68_lut_match_91 ;

STE #(.fan_in(2)) vasim_68_ste_91 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_89, vasim_68_w_out_85 }),
                .match(vasim_68_w_match_91) ,
                .active_state(vasim_68_w_out_91));




/*wire vasim_68_w_out_92;
*/

wire vasim_68_lut_match_92;
wire vasim_68_w_match_92;

    
    
    

LUT_Match_vasim_68_92 #(8) lut_match_vasim_68_92(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_92));


assign vasim_68_w_match_92 = vasim_68_lut_match_92 ;

STE #(.fan_in(1)) vasim_68_ste_92 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_91 }),
                .match(vasim_68_w_match_92) ,
                .active_state(vasim_68_w_out_92));




/*wire vasim_68_w_out_93;
*/

wire vasim_68_lut_match_93;
wire vasim_68_w_match_93;

    
    
    

LUT_Match_vasim_68_93 #(8) lut_match_vasim_68_93(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_93));


assign vasim_68_w_match_93 = vasim_68_lut_match_93 ;

STE #(.fan_in(2)) vasim_68_ste_93 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_92, vasim_68_w_out_85 }),
                .match(vasim_68_w_match_93) ,
                .active_state(vasim_68_w_out_93));




/**/

wire vasim_68_lut_match_94;
wire vasim_68_w_match_94;

    
    
    

LUT_Match_vasim_68_94 #(8) lut_match_vasim_68_94(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_94));


assign vasim_68_w_match_94 = vasim_68_lut_match_94 ;

STE #(.fan_in(1)) vasim_68_ste_94 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_93 }),
                .match(vasim_68_w_match_94) ,
                .active_state(vasim_68_w_out_94));




/*wire vasim_68_w_out_95;
*/

wire vasim_68_lut_match_95;
wire vasim_68_w_match_95;

    
    
    

LUT_Match_vasim_68_95 #(8) lut_match_vasim_68_95(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_95));


assign vasim_68_w_match_95 = vasim_68_lut_match_95 ;

STE #(.fan_in(1)) vasim_68_ste_95 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_90 }),
                .match(vasim_68_w_match_95) ,
                .active_state(vasim_68_w_out_95));




/*wire vasim_68_w_out_96;
*/

wire vasim_68_lut_match_96;
wire vasim_68_w_match_96;

    
    
    

LUT_Match_vasim_68_96 #(8) lut_match_vasim_68_96(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_96));


assign vasim_68_w_match_96 = vasim_68_lut_match_96 ;

STE #(.fan_in(1)) vasim_68_ste_96 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1 }),
                .match(vasim_68_w_match_96) ,
                .active_state(vasim_68_w_out_96));




/*wire vasim_68_w_out_97;
*/

wire vasim_68_lut_match_97;
wire vasim_68_w_match_97;

    
    
    

LUT_Match_vasim_68_97 #(8) lut_match_vasim_68_97(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_97));


assign vasim_68_w_match_97 = vasim_68_lut_match_97 ;

STE #(.fan_in(2)) vasim_68_ste_97 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_95 }),
                .match(vasim_68_w_match_97) ,
                .active_state(vasim_68_w_out_97));




/*wire vasim_68_w_out_98;
*/

wire vasim_68_lut_match_98;
wire vasim_68_w_match_98;

    
    
    

LUT_Match_vasim_68_98 #(8) lut_match_vasim_68_98(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_98));


assign vasim_68_w_match_98 = vasim_68_lut_match_98 ;

STE #(.fan_in(1)) vasim_68_ste_98 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_97 }),
                .match(vasim_68_w_match_98) ,
                .active_state(vasim_68_w_out_98));




/*wire vasim_68_w_out_99;
*/

wire vasim_68_lut_match_99;
wire vasim_68_w_match_99;

    
    
    

LUT_Match_vasim_68_99 #(8) lut_match_vasim_68_99(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_99));


assign vasim_68_w_match_99 = vasim_68_lut_match_99 ;

STE #(.fan_in(2)) vasim_68_ste_99 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_98, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_99) ,
                .active_state(vasim_68_w_out_99));




/*wire vasim_68_w_out_100;
*/

wire vasim_68_lut_match_100;
wire vasim_68_w_match_100;

    
    
    

LUT_Match_vasim_68_100 #(8) lut_match_vasim_68_100(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_100));


assign vasim_68_w_match_100 = vasim_68_lut_match_100 ;

STE #(.fan_in(1)) vasim_68_ste_100 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_99 }),
                .match(vasim_68_w_match_100) ,
                .active_state(vasim_68_w_out_100));




/*wire vasim_68_w_out_101;
*/

wire vasim_68_lut_match_101;
wire vasim_68_w_match_101;

    
    
    

LUT_Match_vasim_68_101 #(8) lut_match_vasim_68_101(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_101));


assign vasim_68_w_match_101 = vasim_68_lut_match_101 ;

STE #(.fan_in(2)) vasim_68_ste_101 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_100 }),
                .match(vasim_68_w_match_101) ,
                .active_state(vasim_68_w_out_101));




/*wire vasim_68_w_out_102;
*/

wire vasim_68_lut_match_102;
wire vasim_68_w_match_102;

    
    
    

LUT_Match_vasim_68_102 #(8) lut_match_vasim_68_102(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_102));


assign vasim_68_w_match_102 = vasim_68_lut_match_102 ;

STE #(.fan_in(1)) vasim_68_ste_102 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_101 }),
                .match(vasim_68_w_match_102) ,
                .active_state(vasim_68_w_out_102));




/*wire vasim_68_w_out_103;
*/

wire vasim_68_lut_match_103;
wire vasim_68_w_match_103;

    
    
    

LUT_Match_vasim_68_103 #(8) lut_match_vasim_68_103(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_103));


assign vasim_68_w_match_103 = vasim_68_lut_match_103 ;

STE #(.fan_in(2)) vasim_68_ste_103 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_102 }),
                .match(vasim_68_w_match_103) ,
                .active_state(vasim_68_w_out_103));




/*wire vasim_68_w_out_104;
*/

wire vasim_68_lut_match_104;
wire vasim_68_w_match_104;

    
    
    

LUT_Match_vasim_68_104 #(8) lut_match_vasim_68_104(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_104));


assign vasim_68_w_match_104 = vasim_68_lut_match_104 ;

STE #(.fan_in(1)) vasim_68_ste_104 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_103 }),
                .match(vasim_68_w_match_104) ,
                .active_state(vasim_68_w_out_104));




/*wire vasim_68_w_out_105;
*/

wire vasim_68_lut_match_105;
wire vasim_68_w_match_105;

    
    
    

LUT_Match_vasim_68_105 #(8) lut_match_vasim_68_105(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_105));


assign vasim_68_w_match_105 = vasim_68_lut_match_105 ;

STE #(.fan_in(2)) vasim_68_ste_105 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_104, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_105) ,
                .active_state(vasim_68_w_out_105));




/*wire vasim_68_w_out_106;
*/

wire vasim_68_lut_match_106;
wire vasim_68_w_match_106;

    
    
    

LUT_Match_vasim_68_106 #(8) lut_match_vasim_68_106(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_106));


assign vasim_68_w_match_106 = vasim_68_lut_match_106 ;

STE #(.fan_in(1)) vasim_68_ste_106 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_105 }),
                .match(vasim_68_w_match_106) ,
                .active_state(vasim_68_w_out_106));




/*wire vasim_68_w_out_107;
*/

wire vasim_68_lut_match_107;
wire vasim_68_w_match_107;

    
    
    

LUT_Match_vasim_68_107 #(8) lut_match_vasim_68_107(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_107));


assign vasim_68_w_match_107 = vasim_68_lut_match_107 ;

STE #(.fan_in(1)) vasim_68_ste_107 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_96 }),
                .match(vasim_68_w_match_107) ,
                .active_state(vasim_68_w_out_107));




/*wire vasim_68_w_out_108;
*/

wire vasim_68_lut_match_108;
wire vasim_68_w_match_108;

    
    
    

LUT_Match_vasim_68_108 #(8) lut_match_vasim_68_108(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_108));


assign vasim_68_w_match_108 = vasim_68_lut_match_108 ;

STE #(.fan_in(2)) vasim_68_ste_108 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_106, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_108) ,
                .active_state(vasim_68_w_out_108));




/*wire vasim_68_w_out_109;
*/

wire vasim_68_lut_match_109;
wire vasim_68_w_match_109;

    
    
    

LUT_Match_vasim_68_109 #(8) lut_match_vasim_68_109(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_109));


assign vasim_68_w_match_109 = vasim_68_lut_match_109 ;

STE #(.fan_in(1)) vasim_68_ste_109 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_108 }),
                .match(vasim_68_w_match_109) ,
                .active_state(vasim_68_w_out_109));




/*wire vasim_68_w_out_110;
*/

wire vasim_68_lut_match_110;
wire vasim_68_w_match_110;

    
    
    

LUT_Match_vasim_68_110 #(8) lut_match_vasim_68_110(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_110));


assign vasim_68_w_match_110 = vasim_68_lut_match_110 ;

STE #(.fan_in(2)) vasim_68_ste_110 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_109 }),
                .match(vasim_68_w_match_110) ,
                .active_state(vasim_68_w_out_110));




/*wire vasim_68_w_out_111;
*/

wire vasim_68_lut_match_111;
wire vasim_68_w_match_111;

    
    
    

LUT_Match_vasim_68_111 #(8) lut_match_vasim_68_111(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_111));


assign vasim_68_w_match_111 = vasim_68_lut_match_111 ;

STE #(.fan_in(1)) vasim_68_ste_111 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_110 }),
                .match(vasim_68_w_match_111) ,
                .active_state(vasim_68_w_out_111));




/*wire vasim_68_w_out_112;
*/

wire vasim_68_lut_match_112;
wire vasim_68_w_match_112;

    
    
    

LUT_Match_vasim_68_112 #(8) lut_match_vasim_68_112(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_112));


assign vasim_68_w_match_112 = vasim_68_lut_match_112 ;

STE #(.fan_in(2)) vasim_68_ste_112 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_111 }),
                .match(vasim_68_w_match_112) ,
                .active_state(vasim_68_w_out_112));




/*wire vasim_68_w_out_113;
*/

wire vasim_68_lut_match_113;
wire vasim_68_w_match_113;

    
    
    

LUT_Match_vasim_68_113 #(8) lut_match_vasim_68_113(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_113));


assign vasim_68_w_match_113 = vasim_68_lut_match_113 ;

STE #(.fan_in(1)) vasim_68_ste_113 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_112 }),
                .match(vasim_68_w_match_113) ,
                .active_state(vasim_68_w_out_113));




/*wire vasim_68_w_out_114;
*/

wire vasim_68_lut_match_114;
wire vasim_68_w_match_114;

    
    
    

LUT_Match_vasim_68_114 #(8) lut_match_vasim_68_114(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_114));


assign vasim_68_w_match_114 = vasim_68_lut_match_114 ;

STE #(.fan_in(2)) vasim_68_ste_114 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_113, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_114) ,
                .active_state(vasim_68_w_out_114));




/*wire vasim_68_w_out_115;
*/

wire vasim_68_lut_match_115;
wire vasim_68_w_match_115;

    
    
    

LUT_Match_vasim_68_115 #(8) lut_match_vasim_68_115(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_115));


assign vasim_68_w_match_115 = vasim_68_lut_match_115 ;

STE #(.fan_in(1)) vasim_68_ste_115 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_114 }),
                .match(vasim_68_w_match_115) ,
                .active_state(vasim_68_w_out_115));




/*wire vasim_68_w_out_116;
*/

wire vasim_68_lut_match_116;
wire vasim_68_w_match_116;

    
    
    

LUT_Match_vasim_68_116 #(8) lut_match_vasim_68_116(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_116));


assign vasim_68_w_match_116 = vasim_68_lut_match_116 ;

STE #(.fan_in(2)) vasim_68_ste_116 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_115 }),
                .match(vasim_68_w_match_116) ,
                .active_state(vasim_68_w_out_116));




/*wire vasim_68_w_out_117;
*/

wire vasim_68_lut_match_117;
wire vasim_68_w_match_117;

    
    
    

LUT_Match_vasim_68_117 #(8) lut_match_vasim_68_117(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_117));


assign vasim_68_w_match_117 = vasim_68_lut_match_117 ;

STE #(.fan_in(1)) vasim_68_ste_117 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_116 }),
                .match(vasim_68_w_match_117) ,
                .active_state(vasim_68_w_out_117));




/*wire vasim_68_w_out_118;
*/

wire vasim_68_lut_match_118;
wire vasim_68_w_match_118;

    
    
    

LUT_Match_vasim_68_118 #(8) lut_match_vasim_68_118(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_118));


assign vasim_68_w_match_118 = vasim_68_lut_match_118 ;

STE #(.fan_in(1)) vasim_68_ste_118 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_107 }),
                .match(vasim_68_w_match_118) ,
                .active_state(vasim_68_w_out_118));




/*wire vasim_68_w_out_119;
*/

wire vasim_68_lut_match_119;
wire vasim_68_w_match_119;

    
    
    

LUT_Match_vasim_68_119 #(8) lut_match_vasim_68_119(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_119));


assign vasim_68_w_match_119 = vasim_68_lut_match_119 ;

STE #(.fan_in(2)) vasim_68_ste_119 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_117 }),
                .match(vasim_68_w_match_119) ,
                .active_state(vasim_68_w_out_119));




/*wire vasim_68_w_out_120;
*/

wire vasim_68_lut_match_120;
wire vasim_68_w_match_120;

    
    
    

LUT_Match_vasim_68_120 #(8) lut_match_vasim_68_120(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_120));


assign vasim_68_w_match_120 = vasim_68_lut_match_120 ;

STE #(.fan_in(1)) vasim_68_ste_120 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_119 }),
                .match(vasim_68_w_match_120) ,
                .active_state(vasim_68_w_out_120));




/*wire vasim_68_w_out_121;
*/

wire vasim_68_lut_match_121;
wire vasim_68_w_match_121;

    
    
    

LUT_Match_vasim_68_121 #(8) lut_match_vasim_68_121(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_121));


assign vasim_68_w_match_121 = vasim_68_lut_match_121 ;

STE #(.fan_in(2)) vasim_68_ste_121 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_120, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_121) ,
                .active_state(vasim_68_w_out_121));




/*wire vasim_68_w_out_122;
*/

wire vasim_68_lut_match_122;
wire vasim_68_w_match_122;

    
    
    

LUT_Match_vasim_68_122 #(8) lut_match_vasim_68_122(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_122));


assign vasim_68_w_match_122 = vasim_68_lut_match_122 ;

STE #(.fan_in(1)) vasim_68_ste_122 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_121 }),
                .match(vasim_68_w_match_122) ,
                .active_state(vasim_68_w_out_122));




/*wire vasim_68_w_out_123;
*/

wire vasim_68_lut_match_123;
wire vasim_68_w_match_123;

    
    
    

LUT_Match_vasim_68_123 #(8) lut_match_vasim_68_123(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_123));


assign vasim_68_w_match_123 = vasim_68_lut_match_123 ;

STE #(.fan_in(2)) vasim_68_ste_123 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_122, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_123) ,
                .active_state(vasim_68_w_out_123));




/*wire vasim_68_w_out_124;
*/

wire vasim_68_lut_match_124;
wire vasim_68_w_match_124;

    
    
    

LUT_Match_vasim_68_124 #(8) lut_match_vasim_68_124(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_124));


assign vasim_68_w_match_124 = vasim_68_lut_match_124 ;

STE #(.fan_in(1)) vasim_68_ste_124 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_123 }),
                .match(vasim_68_w_match_124) ,
                .active_state(vasim_68_w_out_124));




/*wire vasim_68_w_out_125;
*/

wire vasim_68_lut_match_125;
wire vasim_68_w_match_125;

    
    
    

LUT_Match_vasim_68_125 #(8) lut_match_vasim_68_125(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_125));


assign vasim_68_w_match_125 = vasim_68_lut_match_125 ;

STE #(.fan_in(2)) vasim_68_ste_125 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_124 }),
                .match(vasim_68_w_match_125) ,
                .active_state(vasim_68_w_out_125));




/*wire vasim_68_w_out_126;
*/

wire vasim_68_lut_match_126;
wire vasim_68_w_match_126;

    
    
    

LUT_Match_vasim_68_126 #(8) lut_match_vasim_68_126(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_126));


assign vasim_68_w_match_126 = vasim_68_lut_match_126 ;

STE #(.fan_in(1)) vasim_68_ste_126 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_125 }),
                .match(vasim_68_w_match_126) ,
                .active_state(vasim_68_w_out_126));




/*wire vasim_68_w_out_127;
*/

wire vasim_68_lut_match_127;
wire vasim_68_w_match_127;

    
    
    

LUT_Match_vasim_68_127 #(8) lut_match_vasim_68_127(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_127));


assign vasim_68_w_match_127 = vasim_68_lut_match_127 ;

STE #(.fan_in(2)) vasim_68_ste_127 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_126 }),
                .match(vasim_68_w_match_127) ,
                .active_state(vasim_68_w_out_127));




/*wire vasim_68_w_out_128;
*/

wire vasim_68_lut_match_128;
wire vasim_68_w_match_128;

    
    
    

LUT_Match_vasim_68_128 #(8) lut_match_vasim_68_128(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_128));


assign vasim_68_w_match_128 = vasim_68_lut_match_128 ;

STE #(.fan_in(1)) vasim_68_ste_128 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_127 }),
                .match(vasim_68_w_match_128) ,
                .active_state(vasim_68_w_out_128));




/*wire vasim_68_w_out_129;
*/

wire vasim_68_lut_match_129;
wire vasim_68_w_match_129;

    
    
    

LUT_Match_vasim_68_129 #(8) lut_match_vasim_68_129(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_129));


assign vasim_68_w_match_129 = vasim_68_lut_match_129 ;

STE #(.fan_in(1)) vasim_68_ste_129 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_118 }),
                .match(vasim_68_w_match_129) ,
                .active_state(vasim_68_w_out_129));




/*wire vasim_68_w_out_130;
*/

wire vasim_68_lut_match_130;
wire vasim_68_w_match_130;

    
    
    

LUT_Match_vasim_68_130 #(8) lut_match_vasim_68_130(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_130));


assign vasim_68_w_match_130 = vasim_68_lut_match_130 ;

STE #(.fan_in(2)) vasim_68_ste_130 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_128, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_130) ,
                .active_state(vasim_68_w_out_130));




/*wire vasim_68_w_out_131;
*/

wire vasim_68_lut_match_131;
wire vasim_68_w_match_131;

    
    
    

LUT_Match_vasim_68_131 #(8) lut_match_vasim_68_131(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_131));


assign vasim_68_w_match_131 = vasim_68_lut_match_131 ;

STE #(.fan_in(1)) vasim_68_ste_131 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_130 }),
                .match(vasim_68_w_match_131) ,
                .active_state(vasim_68_w_out_131));




/*wire vasim_68_w_out_132;
*/

wire vasim_68_lut_match_132;
wire vasim_68_w_match_132;

    
    
    

LUT_Match_vasim_68_132 #(8) lut_match_vasim_68_132(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_132));


assign vasim_68_w_match_132 = vasim_68_lut_match_132 ;

STE #(.fan_in(2)) vasim_68_ste_132 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_131 }),
                .match(vasim_68_w_match_132) ,
                .active_state(vasim_68_w_out_132));




/*wire vasim_68_w_out_133;
*/

wire vasim_68_lut_match_133;
wire vasim_68_w_match_133;

    
    
    

LUT_Match_vasim_68_133 #(8) lut_match_vasim_68_133(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_133));


assign vasim_68_w_match_133 = vasim_68_lut_match_133 ;

STE #(.fan_in(1)) vasim_68_ste_133 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_132 }),
                .match(vasim_68_w_match_133) ,
                .active_state(vasim_68_w_out_133));




/*wire vasim_68_w_out_134;
*/

wire vasim_68_lut_match_134;
wire vasim_68_w_match_134;

    
    
    

LUT_Match_vasim_68_134 #(8) lut_match_vasim_68_134(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_134));


assign vasim_68_w_match_134 = vasim_68_lut_match_134 ;

STE #(.fan_in(2)) vasim_68_ste_134 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_133 }),
                .match(vasim_68_w_match_134) ,
                .active_state(vasim_68_w_out_134));




/*wire vasim_68_w_out_135;
*/

wire vasim_68_lut_match_135;
wire vasim_68_w_match_135;

    
    
    

LUT_Match_vasim_68_135 #(8) lut_match_vasim_68_135(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_135));


assign vasim_68_w_match_135 = vasim_68_lut_match_135 ;

STE #(.fan_in(1)) vasim_68_ste_135 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_134 }),
                .match(vasim_68_w_match_135) ,
                .active_state(vasim_68_w_out_135));




/*wire vasim_68_w_out_136;
*/

wire vasim_68_lut_match_136;
wire vasim_68_w_match_136;

    
    
    

LUT_Match_vasim_68_136 #(8) lut_match_vasim_68_136(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_136));


assign vasim_68_w_match_136 = vasim_68_lut_match_136 ;

STE #(.fan_in(2)) vasim_68_ste_136 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_135 }),
                .match(vasim_68_w_match_136) ,
                .active_state(vasim_68_w_out_136));




/*wire vasim_68_w_out_137;
*/

wire vasim_68_lut_match_137;
wire vasim_68_w_match_137;

    
    
    

LUT_Match_vasim_68_137 #(8) lut_match_vasim_68_137(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_137));


assign vasim_68_w_match_137 = vasim_68_lut_match_137 ;

STE #(.fan_in(1)) vasim_68_ste_137 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_136 }),
                .match(vasim_68_w_match_137) ,
                .active_state(vasim_68_w_out_137));




/*wire vasim_68_w_out_138;
*/

wire vasim_68_lut_match_138;
wire vasim_68_w_match_138;

    
    
    

LUT_Match_vasim_68_138 #(8) lut_match_vasim_68_138(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_138));


assign vasim_68_w_match_138 = vasim_68_lut_match_138 ;

STE #(.fan_in(2)) vasim_68_ste_138 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_137, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_138) ,
                .active_state(vasim_68_w_out_138));




/*wire vasim_68_w_out_139;
*/

wire vasim_68_lut_match_139;
wire vasim_68_w_match_139;

    
    
    

LUT_Match_vasim_68_139 #(8) lut_match_vasim_68_139(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_139));


assign vasim_68_w_match_139 = vasim_68_lut_match_139 ;

STE #(.fan_in(1)) vasim_68_ste_139 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_138 }),
                .match(vasim_68_w_match_139) ,
                .active_state(vasim_68_w_out_139));




/*wire vasim_68_w_out_140;
*/

wire vasim_68_lut_match_140;
wire vasim_68_w_match_140;

    
    
    

LUT_Match_vasim_68_140 #(8) lut_match_vasim_68_140(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_140));


assign vasim_68_w_match_140 = vasim_68_lut_match_140 ;

STE #(.fan_in(1)) vasim_68_ste_140 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_129 }),
                .match(vasim_68_w_match_140) ,
                .active_state(vasim_68_w_out_140));




/*wire vasim_68_w_out_141;
*/

wire vasim_68_lut_match_141;
wire vasim_68_w_match_141;

    
    
    

LUT_Match_vasim_68_141 #(8) lut_match_vasim_68_141(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_141));


assign vasim_68_w_match_141 = vasim_68_lut_match_141 ;

STE #(.fan_in(2)) vasim_68_ste_141 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_139 }),
                .match(vasim_68_w_match_141) ,
                .active_state(vasim_68_w_out_141));




/*wire vasim_68_w_out_142;
*/

wire vasim_68_lut_match_142;
wire vasim_68_w_match_142;

    
    
    

LUT_Match_vasim_68_142 #(8) lut_match_vasim_68_142(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_142));


assign vasim_68_w_match_142 = vasim_68_lut_match_142 ;

STE #(.fan_in(1)) vasim_68_ste_142 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_141 }),
                .match(vasim_68_w_match_142) ,
                .active_state(vasim_68_w_out_142));




/*wire vasim_68_w_out_143;
*/

wire vasim_68_lut_match_143;
wire vasim_68_w_match_143;

    
    
    

LUT_Match_vasim_68_143 #(8) lut_match_vasim_68_143(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_143));


assign vasim_68_w_match_143 = vasim_68_lut_match_143 ;

STE #(.fan_in(2)) vasim_68_ste_143 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_142 }),
                .match(vasim_68_w_match_143) ,
                .active_state(vasim_68_w_out_143));




/*wire vasim_68_w_out_144;
*/

wire vasim_68_lut_match_144;
wire vasim_68_w_match_144;

    
    
    

LUT_Match_vasim_68_144 #(8) lut_match_vasim_68_144(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_144));


assign vasim_68_w_match_144 = vasim_68_lut_match_144 ;

STE #(.fan_in(1)) vasim_68_ste_144 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_143 }),
                .match(vasim_68_w_match_144) ,
                .active_state(vasim_68_w_out_144));




/*wire vasim_68_w_out_145;
*/

wire vasim_68_lut_match_145;
wire vasim_68_w_match_145;

    
    
    

LUT_Match_vasim_68_145 #(8) lut_match_vasim_68_145(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_145));


assign vasim_68_w_match_145 = vasim_68_lut_match_145 ;

STE #(.fan_in(2)) vasim_68_ste_145 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_144, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_145) ,
                .active_state(vasim_68_w_out_145));




/*wire vasim_68_w_out_146;
*/

wire vasim_68_lut_match_146;
wire vasim_68_w_match_146;

    
    
    

LUT_Match_vasim_68_146 #(8) lut_match_vasim_68_146(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_146));


assign vasim_68_w_match_146 = vasim_68_lut_match_146 ;

STE #(.fan_in(1)) vasim_68_ste_146 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_145 }),
                .match(vasim_68_w_match_146) ,
                .active_state(vasim_68_w_out_146));




/*wire vasim_68_w_out_147;
*/

wire vasim_68_lut_match_147;
wire vasim_68_w_match_147;

    
    
    

LUT_Match_vasim_68_147 #(8) lut_match_vasim_68_147(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_147));


assign vasim_68_w_match_147 = vasim_68_lut_match_147 ;

STE #(.fan_in(2)) vasim_68_ste_147 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_146, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_147) ,
                .active_state(vasim_68_w_out_147));




/*wire vasim_68_w_out_148;
*/

wire vasim_68_lut_match_148;
wire vasim_68_w_match_148;

    
    
    

LUT_Match_vasim_68_148 #(8) lut_match_vasim_68_148(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_148));


assign vasim_68_w_match_148 = vasim_68_lut_match_148 ;

STE #(.fan_in(1)) vasim_68_ste_148 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_147 }),
                .match(vasim_68_w_match_148) ,
                .active_state(vasim_68_w_out_148));




/*wire vasim_68_w_out_149;
*/

wire vasim_68_lut_match_149;
wire vasim_68_w_match_149;

    
    
    

LUT_Match_vasim_68_149 #(8) lut_match_vasim_68_149(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_149));


assign vasim_68_w_match_149 = vasim_68_lut_match_149 ;

STE #(.fan_in(2)) vasim_68_ste_149 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_148 }),
                .match(vasim_68_w_match_149) ,
                .active_state(vasim_68_w_out_149));




/*wire vasim_68_w_out_150;
*/

wire vasim_68_lut_match_150;
wire vasim_68_w_match_150;

    
    
    

LUT_Match_vasim_68_150 #(8) lut_match_vasim_68_150(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_150));


assign vasim_68_w_match_150 = vasim_68_lut_match_150 ;

STE #(.fan_in(1)) vasim_68_ste_150 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_149 }),
                .match(vasim_68_w_match_150) ,
                .active_state(vasim_68_w_out_150));




/*wire vasim_68_w_out_151;
*/

wire vasim_68_lut_match_151;
wire vasim_68_w_match_151;

    
    
    

LUT_Match_vasim_68_151 #(8) lut_match_vasim_68_151(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_151));


assign vasim_68_w_match_151 = vasim_68_lut_match_151 ;

STE #(.fan_in(1)) vasim_68_ste_151 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_140 }),
                .match(vasim_68_w_match_151) ,
                .active_state(vasim_68_w_out_151));




/*wire vasim_68_w_out_152;
*/

wire vasim_68_lut_match_152;
wire vasim_68_w_match_152;

    
    
    

LUT_Match_vasim_68_152 #(8) lut_match_vasim_68_152(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_152));


assign vasim_68_w_match_152 = vasim_68_lut_match_152 ;

STE #(.fan_in(2)) vasim_68_ste_152 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_150 }),
                .match(vasim_68_w_match_152) ,
                .active_state(vasim_68_w_out_152));




/*wire vasim_68_w_out_153;
*/

wire vasim_68_lut_match_153;
wire vasim_68_w_match_153;

    
    
    

LUT_Match_vasim_68_153 #(8) lut_match_vasim_68_153(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_153));


assign vasim_68_w_match_153 = vasim_68_lut_match_153 ;

STE #(.fan_in(1)) vasim_68_ste_153 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_152 }),
                .match(vasim_68_w_match_153) ,
                .active_state(vasim_68_w_out_153));




/*wire vasim_68_w_out_154;
*/

wire vasim_68_lut_match_154;
wire vasim_68_w_match_154;

    
    
    

LUT_Match_vasim_68_154 #(8) lut_match_vasim_68_154(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_154));


assign vasim_68_w_match_154 = vasim_68_lut_match_154 ;

STE #(.fan_in(2)) vasim_68_ste_154 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_153, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_154) ,
                .active_state(vasim_68_w_out_154));




/*wire vasim_68_w_out_155;
*/

wire vasim_68_lut_match_155;
wire vasim_68_w_match_155;

    
    
    

LUT_Match_vasim_68_155 #(8) lut_match_vasim_68_155(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_155));


assign vasim_68_w_match_155 = vasim_68_lut_match_155 ;

STE #(.fan_in(1)) vasim_68_ste_155 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_154 }),
                .match(vasim_68_w_match_155) ,
                .active_state(vasim_68_w_out_155));




/*wire vasim_68_w_out_156;
*/

wire vasim_68_lut_match_156;
wire vasim_68_w_match_156;

    
    
    

LUT_Match_vasim_68_156 #(8) lut_match_vasim_68_156(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_156));


assign vasim_68_w_match_156 = vasim_68_lut_match_156 ;

STE #(.fan_in(2)) vasim_68_ste_156 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_155 }),
                .match(vasim_68_w_match_156) ,
                .active_state(vasim_68_w_out_156));




/*wire vasim_68_w_out_157;
*/

wire vasim_68_lut_match_157;
wire vasim_68_w_match_157;

    
    
    

LUT_Match_vasim_68_157 #(8) lut_match_vasim_68_157(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_157));


assign vasim_68_w_match_157 = vasim_68_lut_match_157 ;

STE #(.fan_in(1)) vasim_68_ste_157 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_156 }),
                .match(vasim_68_w_match_157) ,
                .active_state(vasim_68_w_out_157));




/*wire vasim_68_w_out_158;
*/

wire vasim_68_lut_match_158;
wire vasim_68_w_match_158;

    
    
    

LUT_Match_vasim_68_158 #(8) lut_match_vasim_68_158(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_158));


assign vasim_68_w_match_158 = vasim_68_lut_match_158 ;

STE #(.fan_in(2)) vasim_68_ste_158 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_157 }),
                .match(vasim_68_w_match_158) ,
                .active_state(vasim_68_w_out_158));




/*wire vasim_68_w_out_159;
*/

wire vasim_68_lut_match_159;
wire vasim_68_w_match_159;

    
    
    

LUT_Match_vasim_68_159 #(8) lut_match_vasim_68_159(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_159));


assign vasim_68_w_match_159 = vasim_68_lut_match_159 ;

STE #(.fan_in(1)) vasim_68_ste_159 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_158 }),
                .match(vasim_68_w_match_159) ,
                .active_state(vasim_68_w_out_159));




/*wire vasim_68_w_out_160;
*/

wire vasim_68_lut_match_160;
wire vasim_68_w_match_160;

    
    
    

LUT_Match_vasim_68_160 #(8) lut_match_vasim_68_160(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_160));


assign vasim_68_w_match_160 = vasim_68_lut_match_160 ;

STE #(.fan_in(2)) vasim_68_ste_160 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_159 }),
                .match(vasim_68_w_match_160) ,
                .active_state(vasim_68_w_out_160));




/*wire vasim_68_w_out_161;
*/

wire vasim_68_lut_match_161;
wire vasim_68_w_match_161;

    
    
    

LUT_Match_vasim_68_161 #(8) lut_match_vasim_68_161(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_161));


assign vasim_68_w_match_161 = vasim_68_lut_match_161 ;

STE #(.fan_in(1)) vasim_68_ste_161 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_160 }),
                .match(vasim_68_w_match_161) ,
                .active_state(vasim_68_w_out_161));




/*wire vasim_68_w_out_162;
*/

wire vasim_68_lut_match_162;
wire vasim_68_w_match_162;

    
    
    

LUT_Match_vasim_68_162 #(8) lut_match_vasim_68_162(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_162));


assign vasim_68_w_match_162 = vasim_68_lut_match_162 ;

STE #(.fan_in(1)) vasim_68_ste_162 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_151 }),
                .match(vasim_68_w_match_162) ,
                .active_state(vasim_68_w_out_162));




/*wire vasim_68_w_out_163;
*/

wire vasim_68_lut_match_163;
wire vasim_68_w_match_163;

    
    
    

LUT_Match_vasim_68_163 #(8) lut_match_vasim_68_163(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_163));


assign vasim_68_w_match_163 = vasim_68_lut_match_163 ;

STE #(.fan_in(2)) vasim_68_ste_163 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_161, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_163) ,
                .active_state(vasim_68_w_out_163));




/*wire vasim_68_w_out_164;
*/

wire vasim_68_lut_match_164;
wire vasim_68_w_match_164;

    
    
    

LUT_Match_vasim_68_164 #(8) lut_match_vasim_68_164(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_164));


assign vasim_68_w_match_164 = vasim_68_lut_match_164 ;

STE #(.fan_in(1)) vasim_68_ste_164 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_163 }),
                .match(vasim_68_w_match_164) ,
                .active_state(vasim_68_w_out_164));




/*wire vasim_68_w_out_165;
*/

wire vasim_68_lut_match_165;
wire vasim_68_w_match_165;

    
    
    

LUT_Match_vasim_68_165 #(8) lut_match_vasim_68_165(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_165));


assign vasim_68_w_match_165 = vasim_68_lut_match_165 ;

STE #(.fan_in(2)) vasim_68_ste_165 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_164 }),
                .match(vasim_68_w_match_165) ,
                .active_state(vasim_68_w_out_165));




/*wire vasim_68_w_out_166;
*/

wire vasim_68_lut_match_166;
wire vasim_68_w_match_166;

    
    
    

LUT_Match_vasim_68_166 #(8) lut_match_vasim_68_166(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_166));


assign vasim_68_w_match_166 = vasim_68_lut_match_166 ;

STE #(.fan_in(1)) vasim_68_ste_166 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_165 }),
                .match(vasim_68_w_match_166) ,
                .active_state(vasim_68_w_out_166));




/*wire vasim_68_w_out_167;
*/

wire vasim_68_lut_match_167;
wire vasim_68_w_match_167;

    
    
    

LUT_Match_vasim_68_167 #(8) lut_match_vasim_68_167(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_167));


assign vasim_68_w_match_167 = vasim_68_lut_match_167 ;

STE #(.fan_in(2)) vasim_68_ste_167 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_166 }),
                .match(vasim_68_w_match_167) ,
                .active_state(vasim_68_w_out_167));




/*wire vasim_68_w_out_168;
*/

wire vasim_68_lut_match_168;
wire vasim_68_w_match_168;

    
    
    

LUT_Match_vasim_68_168 #(8) lut_match_vasim_68_168(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_168));


assign vasim_68_w_match_168 = vasim_68_lut_match_168 ;

STE #(.fan_in(1)) vasim_68_ste_168 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_167 }),
                .match(vasim_68_w_match_168) ,
                .active_state(vasim_68_w_out_168));




/*wire vasim_68_w_out_169;
*/

wire vasim_68_lut_match_169;
wire vasim_68_w_match_169;

    
    
    

LUT_Match_vasim_68_169 #(8) lut_match_vasim_68_169(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_169));


assign vasim_68_w_match_169 = vasim_68_lut_match_169 ;

STE #(.fan_in(2)) vasim_68_ste_169 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_168, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_169) ,
                .active_state(vasim_68_w_out_169));




/*wire vasim_68_w_out_170;
*/

wire vasim_68_lut_match_170;
wire vasim_68_w_match_170;

    
    
    

LUT_Match_vasim_68_170 #(8) lut_match_vasim_68_170(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_170));


assign vasim_68_w_match_170 = vasim_68_lut_match_170 ;

STE #(.fan_in(1)) vasim_68_ste_170 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_169 }),
                .match(vasim_68_w_match_170) ,
                .active_state(vasim_68_w_out_170));




/*wire vasim_68_w_out_171;
*/

wire vasim_68_lut_match_171;
wire vasim_68_w_match_171;

    
    
    

LUT_Match_vasim_68_171 #(8) lut_match_vasim_68_171(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_171));


assign vasim_68_w_match_171 = vasim_68_lut_match_171 ;

STE #(.fan_in(2)) vasim_68_ste_171 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_170, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_171) ,
                .active_state(vasim_68_w_out_171));




/*wire vasim_68_w_out_172;
*/

wire vasim_68_lut_match_172;
wire vasim_68_w_match_172;

    
    
    

LUT_Match_vasim_68_172 #(8) lut_match_vasim_68_172(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_172));


assign vasim_68_w_match_172 = vasim_68_lut_match_172 ;

STE #(.fan_in(1)) vasim_68_ste_172 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_171 }),
                .match(vasim_68_w_match_172) ,
                .active_state(vasim_68_w_out_172));




/*wire vasim_68_w_out_173;
*/

wire vasim_68_lut_match_173;
wire vasim_68_w_match_173;

    
    
    

LUT_Match_vasim_68_173 #(8) lut_match_vasim_68_173(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_173));


assign vasim_68_w_match_173 = vasim_68_lut_match_173 ;

STE #(.fan_in(1)) vasim_68_ste_173 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_162 }),
                .match(vasim_68_w_match_173) ,
                .active_state(vasim_68_w_out_173));




/*wire vasim_68_w_out_174;
*/

wire vasim_68_lut_match_174;
wire vasim_68_w_match_174;

    
    
    

LUT_Match_vasim_68_174 #(8) lut_match_vasim_68_174(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_174));


assign vasim_68_w_match_174 = vasim_68_lut_match_174 ;

STE #(.fan_in(2)) vasim_68_ste_174 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_172 }),
                .match(vasim_68_w_match_174) ,
                .active_state(vasim_68_w_out_174));




/*wire vasim_68_w_out_175;
*/

wire vasim_68_lut_match_175;
wire vasim_68_w_match_175;

    
    
    

LUT_Match_vasim_68_175 #(8) lut_match_vasim_68_175(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_175));


assign vasim_68_w_match_175 = vasim_68_lut_match_175 ;

STE #(.fan_in(1)) vasim_68_ste_175 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_174 }),
                .match(vasim_68_w_match_175) ,
                .active_state(vasim_68_w_out_175));




/*wire vasim_68_w_out_176;
*/

wire vasim_68_lut_match_176;
wire vasim_68_w_match_176;

    
    
    

LUT_Match_vasim_68_176 #(8) lut_match_vasim_68_176(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_176));


assign vasim_68_w_match_176 = vasim_68_lut_match_176 ;

STE #(.fan_in(2)) vasim_68_ste_176 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_175 }),
                .match(vasim_68_w_match_176) ,
                .active_state(vasim_68_w_out_176));




/*wire vasim_68_w_out_177;
*/

wire vasim_68_lut_match_177;
wire vasim_68_w_match_177;

    
    
    

LUT_Match_vasim_68_177 #(8) lut_match_vasim_68_177(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_177));


assign vasim_68_w_match_177 = vasim_68_lut_match_177 ;

STE #(.fan_in(1)) vasim_68_ste_177 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_176 }),
                .match(vasim_68_w_match_177) ,
                .active_state(vasim_68_w_out_177));




/*wire vasim_68_w_out_178;
*/

wire vasim_68_lut_match_178;
wire vasim_68_w_match_178;

    
    
    

LUT_Match_vasim_68_178 #(8) lut_match_vasim_68_178(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_178));


assign vasim_68_w_match_178 = vasim_68_lut_match_178 ;

STE #(.fan_in(2)) vasim_68_ste_178 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_177, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_178) ,
                .active_state(vasim_68_w_out_178));




/*wire vasim_68_w_out_179;
*/

wire vasim_68_lut_match_179;
wire vasim_68_w_match_179;

    
    
    

LUT_Match_vasim_68_179 #(8) lut_match_vasim_68_179(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_179));


assign vasim_68_w_match_179 = vasim_68_lut_match_179 ;

STE #(.fan_in(1)) vasim_68_ste_179 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_178 }),
                .match(vasim_68_w_match_179) ,
                .active_state(vasim_68_w_out_179));




/*wire vasim_68_w_out_180;
*/

wire vasim_68_lut_match_180;
wire vasim_68_w_match_180;

    
    
    

LUT_Match_vasim_68_180 #(8) lut_match_vasim_68_180(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_180));


assign vasim_68_w_match_180 = vasim_68_lut_match_180 ;

STE #(.fan_in(2)) vasim_68_ste_180 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_179 }),
                .match(vasim_68_w_match_180) ,
                .active_state(vasim_68_w_out_180));




/*wire vasim_68_w_out_181;
*/

wire vasim_68_lut_match_181;
wire vasim_68_w_match_181;

    
    
    

LUT_Match_vasim_68_181 #(8) lut_match_vasim_68_181(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_181));


assign vasim_68_w_match_181 = vasim_68_lut_match_181 ;

STE #(.fan_in(1)) vasim_68_ste_181 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_180 }),
                .match(vasim_68_w_match_181) ,
                .active_state(vasim_68_w_out_181));




/*wire vasim_68_w_out_182;
*/

wire vasim_68_lut_match_182;
wire vasim_68_w_match_182;

    
    
    

LUT_Match_vasim_68_182 #(8) lut_match_vasim_68_182(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_182));


assign vasim_68_w_match_182 = vasim_68_lut_match_182 ;

STE #(.fan_in(2)) vasim_68_ste_182 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_181 }),
                .match(vasim_68_w_match_182) ,
                .active_state(vasim_68_w_out_182));




/*wire vasim_68_w_out_183;
*/

wire vasim_68_lut_match_183;
wire vasim_68_w_match_183;

    
    
    

LUT_Match_vasim_68_183 #(8) lut_match_vasim_68_183(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_183));


assign vasim_68_w_match_183 = vasim_68_lut_match_183 ;

STE #(.fan_in(1)) vasim_68_ste_183 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_182 }),
                .match(vasim_68_w_match_183) ,
                .active_state(vasim_68_w_out_183));




/*wire vasim_68_w_out_184;
*/

wire vasim_68_lut_match_184;
wire vasim_68_w_match_184;

    
    
    

LUT_Match_vasim_68_184 #(8) lut_match_vasim_68_184(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_184));


assign vasim_68_w_match_184 = vasim_68_lut_match_184 ;

STE #(.fan_in(1)) vasim_68_ste_184 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_173 }),
                .match(vasim_68_w_match_184) ,
                .active_state(vasim_68_w_out_184));




/*wire vasim_68_w_out_185;
*/

wire vasim_68_lut_match_185;
wire vasim_68_w_match_185;

    
    
    

LUT_Match_vasim_68_185 #(8) lut_match_vasim_68_185(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_185));


assign vasim_68_w_match_185 = vasim_68_lut_match_185 ;

STE #(.fan_in(2)) vasim_68_ste_185 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_183 }),
                .match(vasim_68_w_match_185) ,
                .active_state(vasim_68_w_out_185));




/*wire vasim_68_w_out_186;
*/

wire vasim_68_lut_match_186;
wire vasim_68_w_match_186;

    
    
    

LUT_Match_vasim_68_186 #(8) lut_match_vasim_68_186(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_186));


assign vasim_68_w_match_186 = vasim_68_lut_match_186 ;

STE #(.fan_in(1)) vasim_68_ste_186 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_185 }),
                .match(vasim_68_w_match_186) ,
                .active_state(vasim_68_w_out_186));




/*wire vasim_68_w_out_187;
*/

wire vasim_68_lut_match_187;
wire vasim_68_w_match_187;

    
    
    

LUT_Match_vasim_68_187 #(8) lut_match_vasim_68_187(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_187));


assign vasim_68_w_match_187 = vasim_68_lut_match_187 ;

STE #(.fan_in(2)) vasim_68_ste_187 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_186, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_187) ,
                .active_state(vasim_68_w_out_187));




/*wire vasim_68_w_out_188;
*/

wire vasim_68_lut_match_188;
wire vasim_68_w_match_188;

    
    
    

LUT_Match_vasim_68_188 #(8) lut_match_vasim_68_188(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_188));


assign vasim_68_w_match_188 = vasim_68_lut_match_188 ;

STE #(.fan_in(1)) vasim_68_ste_188 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_187 }),
                .match(vasim_68_w_match_188) ,
                .active_state(vasim_68_w_out_188));




/*wire vasim_68_w_out_189;
*/

wire vasim_68_lut_match_189;
wire vasim_68_w_match_189;

    
    
    

LUT_Match_vasim_68_189 #(8) lut_match_vasim_68_189(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_189));


assign vasim_68_w_match_189 = vasim_68_lut_match_189 ;

STE #(.fan_in(2)) vasim_68_ste_189 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_188 }),
                .match(vasim_68_w_match_189) ,
                .active_state(vasim_68_w_out_189));




/*wire vasim_68_w_out_190;
*/

wire vasim_68_lut_match_190;
wire vasim_68_w_match_190;

    
    
    

LUT_Match_vasim_68_190 #(8) lut_match_vasim_68_190(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_190));


assign vasim_68_w_match_190 = vasim_68_lut_match_190 ;

STE #(.fan_in(1)) vasim_68_ste_190 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_189 }),
                .match(vasim_68_w_match_190) ,
                .active_state(vasim_68_w_out_190));




/*wire vasim_68_w_out_191;
*/

wire vasim_68_lut_match_191;
wire vasim_68_w_match_191;

    
    
    

LUT_Match_vasim_68_191 #(8) lut_match_vasim_68_191(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_191));


assign vasim_68_w_match_191 = vasim_68_lut_match_191 ;

STE #(.fan_in(2)) vasim_68_ste_191 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_190 }),
                .match(vasim_68_w_match_191) ,
                .active_state(vasim_68_w_out_191));




/*wire vasim_68_w_out_192;
*/

wire vasim_68_lut_match_192;
wire vasim_68_w_match_192;

    
    
    

LUT_Match_vasim_68_192 #(8) lut_match_vasim_68_192(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_192));


assign vasim_68_w_match_192 = vasim_68_lut_match_192 ;

STE #(.fan_in(1)) vasim_68_ste_192 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_191 }),
                .match(vasim_68_w_match_192) ,
                .active_state(vasim_68_w_out_192));




/*wire vasim_68_w_out_193;
*/

wire vasim_68_lut_match_193;
wire vasim_68_w_match_193;

    
    
    

LUT_Match_vasim_68_193 #(8) lut_match_vasim_68_193(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_193));


assign vasim_68_w_match_193 = vasim_68_lut_match_193 ;

STE #(.fan_in(2)) vasim_68_ste_193 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_192, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_193) ,
                .active_state(vasim_68_w_out_193));




/*wire vasim_68_w_out_194;
*/

wire vasim_68_lut_match_194;
wire vasim_68_w_match_194;

    
    
    

LUT_Match_vasim_68_194 #(8) lut_match_vasim_68_194(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_194));


assign vasim_68_w_match_194 = vasim_68_lut_match_194 ;

STE #(.fan_in(1)) vasim_68_ste_194 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_193 }),
                .match(vasim_68_w_match_194) ,
                .active_state(vasim_68_w_out_194));




/*wire vasim_68_w_out_195;
*/

wire vasim_68_lut_match_195;
wire vasim_68_w_match_195;

    
    
    

LUT_Match_vasim_68_195 #(8) lut_match_vasim_68_195(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_195));


assign vasim_68_w_match_195 = vasim_68_lut_match_195 ;

STE #(.fan_in(2)) vasim_68_ste_195 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_184, vasim_68_w_out_162 }),
                .match(vasim_68_w_match_195) ,
                .active_state(vasim_68_w_out_195));




/*wire vasim_68_w_out_196;
*/

wire vasim_68_lut_match_196;
wire vasim_68_w_match_196;

    
    
    

LUT_Match_vasim_68_196 #(8) lut_match_vasim_68_196(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_196));


assign vasim_68_w_match_196 = vasim_68_lut_match_196 ;

STE #(.fan_in(2)) vasim_68_ste_196 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_194, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_196) ,
                .active_state(vasim_68_w_out_196));




/*wire vasim_68_w_out_197;
*/

wire vasim_68_lut_match_197;
wire vasim_68_w_match_197;

    
    
    

LUT_Match_vasim_68_197 #(8) lut_match_vasim_68_197(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_197));


assign vasim_68_w_match_197 = vasim_68_lut_match_197 ;

STE #(.fan_in(1)) vasim_68_ste_197 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_196 }),
                .match(vasim_68_w_match_197) ,
                .active_state(vasim_68_w_out_197));




/*wire vasim_68_w_out_198;
*/

wire vasim_68_lut_match_198;
wire vasim_68_w_match_198;

    
    
    

LUT_Match_vasim_68_198 #(8) lut_match_vasim_68_198(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_198));


assign vasim_68_w_match_198 = vasim_68_lut_match_198 ;

STE #(.fan_in(2)) vasim_68_ste_198 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_197 }),
                .match(vasim_68_w_match_198) ,
                .active_state(vasim_68_w_out_198));




/*wire vasim_68_w_out_199;
*/

wire vasim_68_lut_match_199;
wire vasim_68_w_match_199;

    
    
    

LUT_Match_vasim_68_199 #(8) lut_match_vasim_68_199(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_199));


assign vasim_68_w_match_199 = vasim_68_lut_match_199 ;

STE #(.fan_in(1)) vasim_68_ste_199 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_198 }),
                .match(vasim_68_w_match_199) ,
                .active_state(vasim_68_w_out_199));




/*wire vasim_68_w_out_200;
*/

wire vasim_68_lut_match_200;
wire vasim_68_w_match_200;

    
    
    

LUT_Match_vasim_68_200 #(8) lut_match_vasim_68_200(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_200));


assign vasim_68_w_match_200 = vasim_68_lut_match_200 ;

STE #(.fan_in(2)) vasim_68_ste_200 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_199 }),
                .match(vasim_68_w_match_200) ,
                .active_state(vasim_68_w_out_200));




/*wire vasim_68_w_out_201;
*/

wire vasim_68_lut_match_201;
wire vasim_68_w_match_201;

    
    
    

LUT_Match_vasim_68_201 #(8) lut_match_vasim_68_201(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_201));


assign vasim_68_w_match_201 = vasim_68_lut_match_201 ;

STE #(.fan_in(1)) vasim_68_ste_201 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_200 }),
                .match(vasim_68_w_match_201) ,
                .active_state(vasim_68_w_out_201));




/*wire vasim_68_w_out_202;
*/

wire vasim_68_lut_match_202;
wire vasim_68_w_match_202;

    
    
    

LUT_Match_vasim_68_202 #(8) lut_match_vasim_68_202(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_202));


assign vasim_68_w_match_202 = vasim_68_lut_match_202 ;

STE #(.fan_in(2)) vasim_68_ste_202 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_201, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_202) ,
                .active_state(vasim_68_w_out_202));




/*wire vasim_68_w_out_203;
*/

wire vasim_68_lut_match_203;
wire vasim_68_w_match_203;

    
    
    

LUT_Match_vasim_68_203 #(8) lut_match_vasim_68_203(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_203));


assign vasim_68_w_match_203 = vasim_68_lut_match_203 ;

STE #(.fan_in(1)) vasim_68_ste_203 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_202 }),
                .match(vasim_68_w_match_203) ,
                .active_state(vasim_68_w_out_203));




/*wire vasim_68_w_out_204;
*/

wire vasim_68_lut_match_204;
wire vasim_68_w_match_204;

    
    
    

LUT_Match_vasim_68_204 #(8) lut_match_vasim_68_204(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_204));


assign vasim_68_w_match_204 = vasim_68_lut_match_204 ;

STE #(.fan_in(2)) vasim_68_ste_204 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_203 }),
                .match(vasim_68_w_match_204) ,
                .active_state(vasim_68_w_out_204));




/*wire vasim_68_w_out_205;
*/

wire vasim_68_lut_match_205;
wire vasim_68_w_match_205;

    
    
    

LUT_Match_vasim_68_205 #(8) lut_match_vasim_68_205(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_205));


assign vasim_68_w_match_205 = vasim_68_lut_match_205 ;

STE #(.fan_in(1)) vasim_68_ste_205 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_204 }),
                .match(vasim_68_w_match_205) ,
                .active_state(vasim_68_w_out_205));




/*wire vasim_68_w_out_206;
*/

wire vasim_68_lut_match_206;
wire vasim_68_w_match_206;

    
    
    

LUT_Match_vasim_68_206 #(8) lut_match_vasim_68_206(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_206));


assign vasim_68_w_match_206 = vasim_68_lut_match_206 ;

STE #(.fan_in(1)) vasim_68_ste_206 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_195 }),
                .match(vasim_68_w_match_206) ,
                .active_state(vasim_68_w_out_206));




/*wire vasim_68_w_out_207;
*/

wire vasim_68_lut_match_207;
wire vasim_68_w_match_207;

    
    
    

LUT_Match_vasim_68_207 #(8) lut_match_vasim_68_207(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_207));


assign vasim_68_w_match_207 = vasim_68_lut_match_207 ;

STE #(.fan_in(2)) vasim_68_ste_207 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_205 }),
                .match(vasim_68_w_match_207) ,
                .active_state(vasim_68_w_out_207));




/*wire vasim_68_w_out_208;
*/

wire vasim_68_lut_match_208;
wire vasim_68_w_match_208;

    
    
    

LUT_Match_vasim_68_208 #(8) lut_match_vasim_68_208(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_208));


assign vasim_68_w_match_208 = vasim_68_lut_match_208 ;

STE #(.fan_in(1)) vasim_68_ste_208 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_207 }),
                .match(vasim_68_w_match_208) ,
                .active_state(vasim_68_w_out_208));




/*wire vasim_68_w_out_209;
*/

wire vasim_68_lut_match_209;
wire vasim_68_w_match_209;

    
    
    

LUT_Match_vasim_68_209 #(8) lut_match_vasim_68_209(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_209));


assign vasim_68_w_match_209 = vasim_68_lut_match_209 ;

STE #(.fan_in(2)) vasim_68_ste_209 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_208, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_209) ,
                .active_state(vasim_68_w_out_209));




/*wire vasim_68_w_out_210;
*/

wire vasim_68_lut_match_210;
wire vasim_68_w_match_210;

    
    
    

LUT_Match_vasim_68_210 #(8) lut_match_vasim_68_210(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_210));


assign vasim_68_w_match_210 = vasim_68_lut_match_210 ;

STE #(.fan_in(1)) vasim_68_ste_210 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_209 }),
                .match(vasim_68_w_match_210) ,
                .active_state(vasim_68_w_out_210));




/*wire vasim_68_w_out_211;
*/

wire vasim_68_lut_match_211;
wire vasim_68_w_match_211;

    
    
    

LUT_Match_vasim_68_211 #(8) lut_match_vasim_68_211(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_211));


assign vasim_68_w_match_211 = vasim_68_lut_match_211 ;

STE #(.fan_in(2)) vasim_68_ste_211 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_210, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_211) ,
                .active_state(vasim_68_w_out_211));




/*wire vasim_68_w_out_212;
*/

wire vasim_68_lut_match_212;
wire vasim_68_w_match_212;

    
    
    

LUT_Match_vasim_68_212 #(8) lut_match_vasim_68_212(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_212));


assign vasim_68_w_match_212 = vasim_68_lut_match_212 ;

STE #(.fan_in(1)) vasim_68_ste_212 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_211 }),
                .match(vasim_68_w_match_212) ,
                .active_state(vasim_68_w_out_212));




/*wire vasim_68_w_out_213;
*/

wire vasim_68_lut_match_213;
wire vasim_68_w_match_213;

    
    
    

LUT_Match_vasim_68_213 #(8) lut_match_vasim_68_213(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_213));


assign vasim_68_w_match_213 = vasim_68_lut_match_213 ;

STE #(.fan_in(2)) vasim_68_ste_213 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_212 }),
                .match(vasim_68_w_match_213) ,
                .active_state(vasim_68_w_out_213));




/*wire vasim_68_w_out_214;
*/

wire vasim_68_lut_match_214;
wire vasim_68_w_match_214;

    
    
    

LUT_Match_vasim_68_214 #(8) lut_match_vasim_68_214(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_214));


assign vasim_68_w_match_214 = vasim_68_lut_match_214 ;

STE #(.fan_in(1)) vasim_68_ste_214 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_213 }),
                .match(vasim_68_w_match_214) ,
                .active_state(vasim_68_w_out_214));




/*wire vasim_68_w_out_215;
*/

wire vasim_68_lut_match_215;
wire vasim_68_w_match_215;

    
    
    

LUT_Match_vasim_68_215 #(8) lut_match_vasim_68_215(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_215));


assign vasim_68_w_match_215 = vasim_68_lut_match_215 ;

STE #(.fan_in(2)) vasim_68_ste_215 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_214 }),
                .match(vasim_68_w_match_215) ,
                .active_state(vasim_68_w_out_215));




/*wire vasim_68_w_out_216;
*/

wire vasim_68_lut_match_216;
wire vasim_68_w_match_216;

    
    
    

LUT_Match_vasim_68_216 #(8) lut_match_vasim_68_216(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_216));


assign vasim_68_w_match_216 = vasim_68_lut_match_216 ;

STE #(.fan_in(1)) vasim_68_ste_216 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_215 }),
                .match(vasim_68_w_match_216) ,
                .active_state(vasim_68_w_out_216));




/*wire vasim_68_w_out_217;
*/

wire vasim_68_lut_match_217;
wire vasim_68_w_match_217;

    
    
    

LUT_Match_vasim_68_217 #(8) lut_match_vasim_68_217(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_217));


assign vasim_68_w_match_217 = vasim_68_lut_match_217 ;

STE #(.fan_in(2)) vasim_68_ste_217 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_162, vasim_68_w_out_206 }),
                .match(vasim_68_w_match_217) ,
                .active_state(vasim_68_w_out_217));




/*wire vasim_68_w_out_218;
*/

wire vasim_68_lut_match_218;
wire vasim_68_w_match_218;

    
    
    

LUT_Match_vasim_68_218 #(8) lut_match_vasim_68_218(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_218));


assign vasim_68_w_match_218 = vasim_68_lut_match_218 ;

STE #(.fan_in(2)) vasim_68_ste_218 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_216, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_218) ,
                .active_state(vasim_68_w_out_218));




/*wire vasim_68_w_out_219;
*/

wire vasim_68_lut_match_219;
wire vasim_68_w_match_219;

    
    
    

LUT_Match_vasim_68_219 #(8) lut_match_vasim_68_219(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_219));


assign vasim_68_w_match_219 = vasim_68_lut_match_219 ;

STE #(.fan_in(1)) vasim_68_ste_219 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_218 }),
                .match(vasim_68_w_match_219) ,
                .active_state(vasim_68_w_out_219));




/*wire vasim_68_w_out_220;
*/

wire vasim_68_lut_match_220;
wire vasim_68_w_match_220;

    
    
    

LUT_Match_vasim_68_220 #(8) lut_match_vasim_68_220(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_220));


assign vasim_68_w_match_220 = vasim_68_lut_match_220 ;

STE #(.fan_in(2)) vasim_68_ste_220 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_219 }),
                .match(vasim_68_w_match_220) ,
                .active_state(vasim_68_w_out_220));




/*wire vasim_68_w_out_221;
*/

wire vasim_68_lut_match_221;
wire vasim_68_w_match_221;

    
    
    

LUT_Match_vasim_68_221 #(8) lut_match_vasim_68_221(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_221));


assign vasim_68_w_match_221 = vasim_68_lut_match_221 ;

STE #(.fan_in(1)) vasim_68_ste_221 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_220 }),
                .match(vasim_68_w_match_221) ,
                .active_state(vasim_68_w_out_221));




/*wire vasim_68_w_out_222;
*/

wire vasim_68_lut_match_222;
wire vasim_68_w_match_222;

    
    
    

LUT_Match_vasim_68_222 #(8) lut_match_vasim_68_222(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_222));


assign vasim_68_w_match_222 = vasim_68_lut_match_222 ;

STE #(.fan_in(2)) vasim_68_ste_222 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_221 }),
                .match(vasim_68_w_match_222) ,
                .active_state(vasim_68_w_out_222));




/*wire vasim_68_w_out_223;
*/

wire vasim_68_lut_match_223;
wire vasim_68_w_match_223;

    
    
    

LUT_Match_vasim_68_223 #(8) lut_match_vasim_68_223(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_223));


assign vasim_68_w_match_223 = vasim_68_lut_match_223 ;

STE #(.fan_in(1)) vasim_68_ste_223 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_222 }),
                .match(vasim_68_w_match_223) ,
                .active_state(vasim_68_w_out_223));




/*wire vasim_68_w_out_224;
*/

wire vasim_68_lut_match_224;
wire vasim_68_w_match_224;

    
    
    

LUT_Match_vasim_68_224 #(8) lut_match_vasim_68_224(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_224));


assign vasim_68_w_match_224 = vasim_68_lut_match_224 ;

STE #(.fan_in(2)) vasim_68_ste_224 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_223 }),
                .match(vasim_68_w_match_224) ,
                .active_state(vasim_68_w_out_224));




/*wire vasim_68_w_out_225;
*/

wire vasim_68_lut_match_225;
wire vasim_68_w_match_225;

    
    
    

LUT_Match_vasim_68_225 #(8) lut_match_vasim_68_225(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_225));


assign vasim_68_w_match_225 = vasim_68_lut_match_225 ;

STE #(.fan_in(1)) vasim_68_ste_225 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_224 }),
                .match(vasim_68_w_match_225) ,
                .active_state(vasim_68_w_out_225));




/*wire vasim_68_w_out_226;
*/

wire vasim_68_lut_match_226;
wire vasim_68_w_match_226;

    
    
    

LUT_Match_vasim_68_226 #(8) lut_match_vasim_68_226(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_226));


assign vasim_68_w_match_226 = vasim_68_lut_match_226 ;

STE #(.fan_in(2)) vasim_68_ste_226 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_225, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_226) ,
                .active_state(vasim_68_w_out_226));




/*wire vasim_68_w_out_227;
*/

wire vasim_68_lut_match_227;
wire vasim_68_w_match_227;

    
    
    

LUT_Match_vasim_68_227 #(8) lut_match_vasim_68_227(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_227));


assign vasim_68_w_match_227 = vasim_68_lut_match_227 ;

STE #(.fan_in(1)) vasim_68_ste_227 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_226 }),
                .match(vasim_68_w_match_227) ,
                .active_state(vasim_68_w_out_227));




/*wire vasim_68_w_out_228;
*/

wire vasim_68_lut_match_228;
wire vasim_68_w_match_228;

    
    
    

LUT_Match_vasim_68_228 #(8) lut_match_vasim_68_228(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_228));


assign vasim_68_w_match_228 = vasim_68_lut_match_228 ;

STE #(.fan_in(1)) vasim_68_ste_228 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_217 }),
                .match(vasim_68_w_match_228) ,
                .active_state(vasim_68_w_out_228));




/*wire vasim_68_w_out_229;
*/

wire vasim_68_lut_match_229;
wire vasim_68_w_match_229;

    
    
    

LUT_Match_vasim_68_229 #(8) lut_match_vasim_68_229(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_229));


assign vasim_68_w_match_229 = vasim_68_lut_match_229 ;

STE #(.fan_in(2)) vasim_68_ste_229 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_227 }),
                .match(vasim_68_w_match_229) ,
                .active_state(vasim_68_w_out_229));




/*wire vasim_68_w_out_230;
*/

wire vasim_68_lut_match_230;
wire vasim_68_w_match_230;

    
    
    

LUT_Match_vasim_68_230 #(8) lut_match_vasim_68_230(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_230));


assign vasim_68_w_match_230 = vasim_68_lut_match_230 ;

STE #(.fan_in(1)) vasim_68_ste_230 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_229 }),
                .match(vasim_68_w_match_230) ,
                .active_state(vasim_68_w_out_230));




/*wire vasim_68_w_out_231;
*/

wire vasim_68_lut_match_231;
wire vasim_68_w_match_231;

    
    
    

LUT_Match_vasim_68_231 #(8) lut_match_vasim_68_231(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_231));


assign vasim_68_w_match_231 = vasim_68_lut_match_231 ;

STE #(.fan_in(2)) vasim_68_ste_231 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_230 }),
                .match(vasim_68_w_match_231) ,
                .active_state(vasim_68_w_out_231));




/*wire vasim_68_w_out_232;
*/

wire vasim_68_lut_match_232;
wire vasim_68_w_match_232;

    
    
    

LUT_Match_vasim_68_232 #(8) lut_match_vasim_68_232(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_232));


assign vasim_68_w_match_232 = vasim_68_lut_match_232 ;

STE #(.fan_in(1)) vasim_68_ste_232 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_231 }),
                .match(vasim_68_w_match_232) ,
                .active_state(vasim_68_w_out_232));




/*wire vasim_68_w_out_233;
*/

wire vasim_68_lut_match_233;
wire vasim_68_w_match_233;

    
    
    

LUT_Match_vasim_68_233 #(8) lut_match_vasim_68_233(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_233));


assign vasim_68_w_match_233 = vasim_68_lut_match_233 ;

STE #(.fan_in(2)) vasim_68_ste_233 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_232, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_233) ,
                .active_state(vasim_68_w_out_233));




/*wire vasim_68_w_out_234;
*/

wire vasim_68_lut_match_234;
wire vasim_68_w_match_234;

    
    
    

LUT_Match_vasim_68_234 #(8) lut_match_vasim_68_234(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_234));


assign vasim_68_w_match_234 = vasim_68_lut_match_234 ;

STE #(.fan_in(1)) vasim_68_ste_234 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_233 }),
                .match(vasim_68_w_match_234) ,
                .active_state(vasim_68_w_out_234));




/*wire vasim_68_w_out_235;
*/

wire vasim_68_lut_match_235;
wire vasim_68_w_match_235;

    
    
    

LUT_Match_vasim_68_235 #(8) lut_match_vasim_68_235(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_235));


assign vasim_68_w_match_235 = vasim_68_lut_match_235 ;

STE #(.fan_in(2)) vasim_68_ste_235 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_234, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_235) ,
                .active_state(vasim_68_w_out_235));




/*wire vasim_68_w_out_236;
*/

wire vasim_68_lut_match_236;
wire vasim_68_w_match_236;

    
    
    

LUT_Match_vasim_68_236 #(8) lut_match_vasim_68_236(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_236));


assign vasim_68_w_match_236 = vasim_68_lut_match_236 ;

STE #(.fan_in(1)) vasim_68_ste_236 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_235 }),
                .match(vasim_68_w_match_236) ,
                .active_state(vasim_68_w_out_236));




/*wire vasim_68_w_out_237;
*/

wire vasim_68_lut_match_237;
wire vasim_68_w_match_237;

    
    
    

LUT_Match_vasim_68_237 #(8) lut_match_vasim_68_237(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_237));


assign vasim_68_w_match_237 = vasim_68_lut_match_237 ;

STE #(.fan_in(2)) vasim_68_ste_237 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_236 }),
                .match(vasim_68_w_match_237) ,
                .active_state(vasim_68_w_out_237));




/*wire vasim_68_w_out_238;
*/

wire vasim_68_lut_match_238;
wire vasim_68_w_match_238;

    
    
    

LUT_Match_vasim_68_238 #(8) lut_match_vasim_68_238(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_238));


assign vasim_68_w_match_238 = vasim_68_lut_match_238 ;

STE #(.fan_in(1)) vasim_68_ste_238 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_237 }),
                .match(vasim_68_w_match_238) ,
                .active_state(vasim_68_w_out_238));




/*wire vasim_68_w_out_239;
*/

wire vasim_68_lut_match_239;
wire vasim_68_w_match_239;

    
    
    

LUT_Match_vasim_68_239 #(8) lut_match_vasim_68_239(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_239));


assign vasim_68_w_match_239 = vasim_68_lut_match_239 ;

STE #(.fan_in(1)) vasim_68_ste_239 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_228 }),
                .match(vasim_68_w_match_239) ,
                .active_state(vasim_68_w_out_239));




/*wire vasim_68_w_out_240;
*/

wire vasim_68_lut_match_240;
wire vasim_68_w_match_240;

    
    
    

LUT_Match_vasim_68_240 #(8) lut_match_vasim_68_240(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_240));


assign vasim_68_w_match_240 = vasim_68_lut_match_240 ;

STE #(.fan_in(2)) vasim_68_ste_240 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_238 }),
                .match(vasim_68_w_match_240) ,
                .active_state(vasim_68_w_out_240));




/*wire vasim_68_w_out_241;
*/

wire vasim_68_lut_match_241;
wire vasim_68_w_match_241;

    
    
    

LUT_Match_vasim_68_241 #(8) lut_match_vasim_68_241(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_241));


assign vasim_68_w_match_241 = vasim_68_lut_match_241 ;

STE #(.fan_in(1)) vasim_68_ste_241 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_240 }),
                .match(vasim_68_w_match_241) ,
                .active_state(vasim_68_w_out_241));




/*wire vasim_68_w_out_242;
*/

wire vasim_68_lut_match_242;
wire vasim_68_w_match_242;

    
    
    

LUT_Match_vasim_68_242 #(8) lut_match_vasim_68_242(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_242));


assign vasim_68_w_match_242 = vasim_68_lut_match_242 ;

STE #(.fan_in(2)) vasim_68_ste_242 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_241, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_242) ,
                .active_state(vasim_68_w_out_242));




/*wire vasim_68_w_out_243;
*/

wire vasim_68_lut_match_243;
wire vasim_68_w_match_243;

    
    
    

LUT_Match_vasim_68_243 #(8) lut_match_vasim_68_243(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_243));


assign vasim_68_w_match_243 = vasim_68_lut_match_243 ;

STE #(.fan_in(1)) vasim_68_ste_243 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_242 }),
                .match(vasim_68_w_match_243) ,
                .active_state(vasim_68_w_out_243));




/*wire vasim_68_w_out_244;
*/

wire vasim_68_lut_match_244;
wire vasim_68_w_match_244;

    
    
    

LUT_Match_vasim_68_244 #(8) lut_match_vasim_68_244(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_244));


assign vasim_68_w_match_244 = vasim_68_lut_match_244 ;

STE #(.fan_in(2)) vasim_68_ste_244 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_243 }),
                .match(vasim_68_w_match_244) ,
                .active_state(vasim_68_w_out_244));




/*wire vasim_68_w_out_245;
*/

wire vasim_68_lut_match_245;
wire vasim_68_w_match_245;

    
    
    

LUT_Match_vasim_68_245 #(8) lut_match_vasim_68_245(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_245));


assign vasim_68_w_match_245 = vasim_68_lut_match_245 ;

STE #(.fan_in(1)) vasim_68_ste_245 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_244 }),
                .match(vasim_68_w_match_245) ,
                .active_state(vasim_68_w_out_245));




/*wire vasim_68_w_out_246;
*/

wire vasim_68_lut_match_246;
wire vasim_68_w_match_246;

    
    
    

LUT_Match_vasim_68_246 #(8) lut_match_vasim_68_246(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_246));


assign vasim_68_w_match_246 = vasim_68_lut_match_246 ;

STE #(.fan_in(2)) vasim_68_ste_246 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_245 }),
                .match(vasim_68_w_match_246) ,
                .active_state(vasim_68_w_out_246));




/*wire vasim_68_w_out_247;
*/

wire vasim_68_lut_match_247;
wire vasim_68_w_match_247;

    
    
    

LUT_Match_vasim_68_247 #(8) lut_match_vasim_68_247(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_247));


assign vasim_68_w_match_247 = vasim_68_lut_match_247 ;

STE #(.fan_in(1)) vasim_68_ste_247 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_246 }),
                .match(vasim_68_w_match_247) ,
                .active_state(vasim_68_w_out_247));




/*wire vasim_68_w_out_248;
*/

wire vasim_68_lut_match_248;
wire vasim_68_w_match_248;

    
    
    

LUT_Match_vasim_68_248 #(8) lut_match_vasim_68_248(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_248));


assign vasim_68_w_match_248 = vasim_68_lut_match_248 ;

STE #(.fan_in(2)) vasim_68_ste_248 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_247 }),
                .match(vasim_68_w_match_248) ,
                .active_state(vasim_68_w_out_248));




/*wire vasim_68_w_out_249;
*/

wire vasim_68_lut_match_249;
wire vasim_68_w_match_249;

    
    
    

LUT_Match_vasim_68_249 #(8) lut_match_vasim_68_249(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_249));


assign vasim_68_w_match_249 = vasim_68_lut_match_249 ;

STE #(.fan_in(1)) vasim_68_ste_249 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_248 }),
                .match(vasim_68_w_match_249) ,
                .active_state(vasim_68_w_out_249));




/*wire vasim_68_w_out_250;
*/

wire vasim_68_lut_match_250;
wire vasim_68_w_match_250;

    
    
    

LUT_Match_vasim_68_250 #(8) lut_match_vasim_68_250(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_250));


assign vasim_68_w_match_250 = vasim_68_lut_match_250 ;

STE #(.fan_in(1)) vasim_68_ste_250 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_239 }),
                .match(vasim_68_w_match_250) ,
                .active_state(vasim_68_w_out_250));




/*wire vasim_68_w_out_251;
*/

wire vasim_68_lut_match_251;
wire vasim_68_w_match_251;

    
    
    

LUT_Match_vasim_68_251 #(8) lut_match_vasim_68_251(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_251));


assign vasim_68_w_match_251 = vasim_68_lut_match_251 ;

STE #(.fan_in(2)) vasim_68_ste_251 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_249, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_251) ,
                .active_state(vasim_68_w_out_251));




/*wire vasim_68_w_out_252;
*/

wire vasim_68_lut_match_252;
wire vasim_68_w_match_252;

    
    
    

LUT_Match_vasim_68_252 #(8) lut_match_vasim_68_252(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_252));


assign vasim_68_w_match_252 = vasim_68_lut_match_252 ;

STE #(.fan_in(1)) vasim_68_ste_252 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_251 }),
                .match(vasim_68_w_match_252) ,
                .active_state(vasim_68_w_out_252));




/*wire vasim_68_w_out_253;
*/

wire vasim_68_lut_match_253;
wire vasim_68_w_match_253;

    
    
    

LUT_Match_vasim_68_253 #(8) lut_match_vasim_68_253(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_253));


assign vasim_68_w_match_253 = vasim_68_lut_match_253 ;

STE #(.fan_in(2)) vasim_68_ste_253 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_252 }),
                .match(vasim_68_w_match_253) ,
                .active_state(vasim_68_w_out_253));




/*wire vasim_68_w_out_254;
*/

wire vasim_68_lut_match_254;
wire vasim_68_w_match_254;

    
    
    

LUT_Match_vasim_68_254 #(8) lut_match_vasim_68_254(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_254));


assign vasim_68_w_match_254 = vasim_68_lut_match_254 ;

STE #(.fan_in(1)) vasim_68_ste_254 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_253 }),
                .match(vasim_68_w_match_254) ,
                .active_state(vasim_68_w_out_254));




/*wire vasim_68_w_out_255;
*/

wire vasim_68_lut_match_255;
wire vasim_68_w_match_255;

    
    
    

LUT_Match_vasim_68_255 #(8) lut_match_vasim_68_255(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_255));


assign vasim_68_w_match_255 = vasim_68_lut_match_255 ;

STE #(.fan_in(2)) vasim_68_ste_255 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_254 }),
                .match(vasim_68_w_match_255) ,
                .active_state(vasim_68_w_out_255));




/*wire vasim_68_w_out_256;
*/

wire vasim_68_lut_match_256;
wire vasim_68_w_match_256;

    
    
    

LUT_Match_vasim_68_256 #(8) lut_match_vasim_68_256(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_256));


assign vasim_68_w_match_256 = vasim_68_lut_match_256 ;

STE #(.fan_in(1)) vasim_68_ste_256 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_255 }),
                .match(vasim_68_w_match_256) ,
                .active_state(vasim_68_w_out_256));




/*wire vasim_68_w_out_257;
*/

wire vasim_68_lut_match_257;
wire vasim_68_w_match_257;

    
    
    

LUT_Match_vasim_68_257 #(8) lut_match_vasim_68_257(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_257));


assign vasim_68_w_match_257 = vasim_68_lut_match_257 ;

STE #(.fan_in(2)) vasim_68_ste_257 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_256, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_257) ,
                .active_state(vasim_68_w_out_257));




/*wire vasim_68_w_out_258;
*/

wire vasim_68_lut_match_258;
wire vasim_68_w_match_258;

    
    
    

LUT_Match_vasim_68_258 #(8) lut_match_vasim_68_258(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_258));


assign vasim_68_w_match_258 = vasim_68_lut_match_258 ;

STE #(.fan_in(1)) vasim_68_ste_258 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_257 }),
                .match(vasim_68_w_match_258) ,
                .active_state(vasim_68_w_out_258));




/*wire vasim_68_w_out_259;
*/

wire vasim_68_lut_match_259;
wire vasim_68_w_match_259;

    
    
    

LUT_Match_vasim_68_259 #(8) lut_match_vasim_68_259(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_259));


assign vasim_68_w_match_259 = vasim_68_lut_match_259 ;

STE #(.fan_in(2)) vasim_68_ste_259 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_258 }),
                .match(vasim_68_w_match_259) ,
                .active_state(vasim_68_w_out_259));




/*wire vasim_68_w_out_260;
*/

wire vasim_68_lut_match_260;
wire vasim_68_w_match_260;

    
    
    

LUT_Match_vasim_68_260 #(8) lut_match_vasim_68_260(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_260));


assign vasim_68_w_match_260 = vasim_68_lut_match_260 ;

STE #(.fan_in(1)) vasim_68_ste_260 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_259 }),
                .match(vasim_68_w_match_260) ,
                .active_state(vasim_68_w_out_260));




/*wire vasim_68_w_out_261;
*/

wire vasim_68_lut_match_261;
wire vasim_68_w_match_261;

    
    
    

LUT_Match_vasim_68_261 #(8) lut_match_vasim_68_261(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_261));


assign vasim_68_w_match_261 = vasim_68_lut_match_261 ;

STE #(.fan_in(1)) vasim_68_ste_261 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250 }),
                .match(vasim_68_w_match_261) ,
                .active_state(vasim_68_w_out_261));




/*wire vasim_68_w_out_262;
*/

wire vasim_68_lut_match_262;
wire vasim_68_w_match_262;

    
    
    

LUT_Match_vasim_68_262 #(8) lut_match_vasim_68_262(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_262));


assign vasim_68_w_match_262 = vasim_68_lut_match_262 ;

STE #(.fan_in(2)) vasim_68_ste_262 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_260 }),
                .match(vasim_68_w_match_262) ,
                .active_state(vasim_68_w_out_262));




/*wire vasim_68_w_out_263;
*/

wire vasim_68_lut_match_263;
wire vasim_68_w_match_263;

    
    
    

LUT_Match_vasim_68_263 #(8) lut_match_vasim_68_263(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_263));


assign vasim_68_w_match_263 = vasim_68_lut_match_263 ;

STE #(.fan_in(1)) vasim_68_ste_263 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_262 }),
                .match(vasim_68_w_match_263) ,
                .active_state(vasim_68_w_out_263));




/*wire vasim_68_w_out_264;
*/

wire vasim_68_lut_match_264;
wire vasim_68_w_match_264;

    
    
    

LUT_Match_vasim_68_264 #(8) lut_match_vasim_68_264(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_264));


assign vasim_68_w_match_264 = vasim_68_lut_match_264 ;

STE #(.fan_in(2)) vasim_68_ste_264 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_263 }),
                .match(vasim_68_w_match_264) ,
                .active_state(vasim_68_w_out_264));




/*wire vasim_68_w_out_265;
*/

wire vasim_68_lut_match_265;
wire vasim_68_w_match_265;

    
    
    

LUT_Match_vasim_68_265 #(8) lut_match_vasim_68_265(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_265));


assign vasim_68_w_match_265 = vasim_68_lut_match_265 ;

STE #(.fan_in(1)) vasim_68_ste_265 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_264 }),
                .match(vasim_68_w_match_265) ,
                .active_state(vasim_68_w_out_265));




/*wire vasim_68_w_out_266;
*/

wire vasim_68_lut_match_266;
wire vasim_68_w_match_266;

    
    
    

LUT_Match_vasim_68_266 #(8) lut_match_vasim_68_266(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_266));


assign vasim_68_w_match_266 = vasim_68_lut_match_266 ;

STE #(.fan_in(2)) vasim_68_ste_266 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_265, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_266) ,
                .active_state(vasim_68_w_out_266));




/*wire vasim_68_w_out_267;
*/

wire vasim_68_lut_match_267;
wire vasim_68_w_match_267;

    
    
    

LUT_Match_vasim_68_267 #(8) lut_match_vasim_68_267(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_267));


assign vasim_68_w_match_267 = vasim_68_lut_match_267 ;

STE #(.fan_in(1)) vasim_68_ste_267 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_266 }),
                .match(vasim_68_w_match_267) ,
                .active_state(vasim_68_w_out_267));




/*wire vasim_68_w_out_268;
*/

wire vasim_68_lut_match_268;
wire vasim_68_w_match_268;

    
    
    

LUT_Match_vasim_68_268 #(8) lut_match_vasim_68_268(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_268));


assign vasim_68_w_match_268 = vasim_68_lut_match_268 ;

STE #(.fan_in(2)) vasim_68_ste_268 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_267 }),
                .match(vasim_68_w_match_268) ,
                .active_state(vasim_68_w_out_268));




/*wire vasim_68_w_out_269;
*/

wire vasim_68_lut_match_269;
wire vasim_68_w_match_269;

    
    
    

LUT_Match_vasim_68_269 #(8) lut_match_vasim_68_269(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_269));


assign vasim_68_w_match_269 = vasim_68_lut_match_269 ;

STE #(.fan_in(1)) vasim_68_ste_269 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_268 }),
                .match(vasim_68_w_match_269) ,
                .active_state(vasim_68_w_out_269));




/*wire vasim_68_w_out_270;
*/

wire vasim_68_lut_match_270;
wire vasim_68_w_match_270;

    
    
    

LUT_Match_vasim_68_270 #(8) lut_match_vasim_68_270(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_270));


assign vasim_68_w_match_270 = vasim_68_lut_match_270 ;

STE #(.fan_in(2)) vasim_68_ste_270 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_269 }),
                .match(vasim_68_w_match_270) ,
                .active_state(vasim_68_w_out_270));




/*wire vasim_68_w_out_271;
*/

wire vasim_68_lut_match_271;
wire vasim_68_w_match_271;

    
    
    

LUT_Match_vasim_68_271 #(8) lut_match_vasim_68_271(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_271));


assign vasim_68_w_match_271 = vasim_68_lut_match_271 ;

STE #(.fan_in(1)) vasim_68_ste_271 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_270 }),
                .match(vasim_68_w_match_271) ,
                .active_state(vasim_68_w_out_271));




/*wire vasim_68_w_out_272;
*/

wire vasim_68_lut_match_272;
wire vasim_68_w_match_272;

    
    
    

LUT_Match_vasim_68_272 #(8) lut_match_vasim_68_272(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_272));


assign vasim_68_w_match_272 = vasim_68_lut_match_272 ;

STE #(.fan_in(1)) vasim_68_ste_272 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_261 }),
                .match(vasim_68_w_match_272) ,
                .active_state(vasim_68_w_out_272));




/*wire vasim_68_w_out_273;
*/

wire vasim_68_lut_match_273;
wire vasim_68_w_match_273;

    
    
    

LUT_Match_vasim_68_273 #(8) lut_match_vasim_68_273(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_273));


assign vasim_68_w_match_273 = vasim_68_lut_match_273 ;

STE #(.fan_in(2)) vasim_68_ste_273 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_271 }),
                .match(vasim_68_w_match_273) ,
                .active_state(vasim_68_w_out_273));




/*wire vasim_68_w_out_274;
*/

wire vasim_68_lut_match_274;
wire vasim_68_w_match_274;

    
    
    

LUT_Match_vasim_68_274 #(8) lut_match_vasim_68_274(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_274));


assign vasim_68_w_match_274 = vasim_68_lut_match_274 ;

STE #(.fan_in(1)) vasim_68_ste_274 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_273 }),
                .match(vasim_68_w_match_274) ,
                .active_state(vasim_68_w_out_274));




/*wire vasim_68_w_out_275;
*/

wire vasim_68_lut_match_275;
wire vasim_68_w_match_275;

    
    
    

LUT_Match_vasim_68_275 #(8) lut_match_vasim_68_275(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_275));


assign vasim_68_w_match_275 = vasim_68_lut_match_275 ;

STE #(.fan_in(2)) vasim_68_ste_275 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_274 }),
                .match(vasim_68_w_match_275) ,
                .active_state(vasim_68_w_out_275));




/*wire vasim_68_w_out_276;
*/

wire vasim_68_lut_match_276;
wire vasim_68_w_match_276;

    
    
    

LUT_Match_vasim_68_276 #(8) lut_match_vasim_68_276(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_276));


assign vasim_68_w_match_276 = vasim_68_lut_match_276 ;

STE #(.fan_in(1)) vasim_68_ste_276 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_275 }),
                .match(vasim_68_w_match_276) ,
                .active_state(vasim_68_w_out_276));




/*wire vasim_68_w_out_277;
*/

wire vasim_68_lut_match_277;
wire vasim_68_w_match_277;

    
    
    

LUT_Match_vasim_68_277 #(8) lut_match_vasim_68_277(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_277));


assign vasim_68_w_match_277 = vasim_68_lut_match_277 ;

STE #(.fan_in(2)) vasim_68_ste_277 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_276 }),
                .match(vasim_68_w_match_277) ,
                .active_state(vasim_68_w_out_277));




/*wire vasim_68_w_out_278;
*/

wire vasim_68_lut_match_278;
wire vasim_68_w_match_278;

    
    
    

LUT_Match_vasim_68_278 #(8) lut_match_vasim_68_278(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_278));


assign vasim_68_w_match_278 = vasim_68_lut_match_278 ;

STE #(.fan_in(1)) vasim_68_ste_278 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_277 }),
                .match(vasim_68_w_match_278) ,
                .active_state(vasim_68_w_out_278));




/*wire vasim_68_w_out_279;
*/

wire vasim_68_lut_match_279;
wire vasim_68_w_match_279;

    
    
    

LUT_Match_vasim_68_279 #(8) lut_match_vasim_68_279(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_279));


assign vasim_68_w_match_279 = vasim_68_lut_match_279 ;

STE #(.fan_in(2)) vasim_68_ste_279 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_278 }),
                .match(vasim_68_w_match_279) ,
                .active_state(vasim_68_w_out_279));




/*wire vasim_68_w_out_280;
*/

wire vasim_68_lut_match_280;
wire vasim_68_w_match_280;

    
    
    

LUT_Match_vasim_68_280 #(8) lut_match_vasim_68_280(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_280));


assign vasim_68_w_match_280 = vasim_68_lut_match_280 ;

STE #(.fan_in(1)) vasim_68_ste_280 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_279 }),
                .match(vasim_68_w_match_280) ,
                .active_state(vasim_68_w_out_280));




/*wire vasim_68_w_out_281;
*/

wire vasim_68_lut_match_281;
wire vasim_68_w_match_281;

    
    
    

LUT_Match_vasim_68_281 #(8) lut_match_vasim_68_281(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_281));


assign vasim_68_w_match_281 = vasim_68_lut_match_281 ;

STE #(.fan_in(2)) vasim_68_ste_281 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_280, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_281) ,
                .active_state(vasim_68_w_out_281));




/*wire vasim_68_w_out_282;
*/

wire vasim_68_lut_match_282;
wire vasim_68_w_match_282;

    
    
    

LUT_Match_vasim_68_282 #(8) lut_match_vasim_68_282(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_282));


assign vasim_68_w_match_282 = vasim_68_lut_match_282 ;

STE #(.fan_in(1)) vasim_68_ste_282 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_281 }),
                .match(vasim_68_w_match_282) ,
                .active_state(vasim_68_w_out_282));




/*wire vasim_68_w_out_283;
*/

wire vasim_68_lut_match_283;
wire vasim_68_w_match_283;

    
    
    

LUT_Match_vasim_68_283 #(8) lut_match_vasim_68_283(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_283));


assign vasim_68_w_match_283 = vasim_68_lut_match_283 ;

STE #(.fan_in(2)) vasim_68_ste_283 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_272, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_283) ,
                .active_state(vasim_68_w_out_283));




/*wire vasim_68_w_out_284;
*/

wire vasim_68_lut_match_284;
wire vasim_68_w_match_284;

    
    
    

LUT_Match_vasim_68_284 #(8) lut_match_vasim_68_284(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_284));


assign vasim_68_w_match_284 = vasim_68_lut_match_284 ;

STE #(.fan_in(2)) vasim_68_ste_284 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_282 }),
                .match(vasim_68_w_match_284) ,
                .active_state(vasim_68_w_out_284));




/*wire vasim_68_w_out_285;
*/

wire vasim_68_lut_match_285;
wire vasim_68_w_match_285;

    
    
    

LUT_Match_vasim_68_285 #(8) lut_match_vasim_68_285(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_285));


assign vasim_68_w_match_285 = vasim_68_lut_match_285 ;

STE #(.fan_in(1)) vasim_68_ste_285 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_284 }),
                .match(vasim_68_w_match_285) ,
                .active_state(vasim_68_w_out_285));




/*wire vasim_68_w_out_286;
*/

wire vasim_68_lut_match_286;
wire vasim_68_w_match_286;

    
    
    

LUT_Match_vasim_68_286 #(8) lut_match_vasim_68_286(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_286));


assign vasim_68_w_match_286 = vasim_68_lut_match_286 ;

STE #(.fan_in(2)) vasim_68_ste_286 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_285 }),
                .match(vasim_68_w_match_286) ,
                .active_state(vasim_68_w_out_286));




/*wire vasim_68_w_out_287;
*/

wire vasim_68_lut_match_287;
wire vasim_68_w_match_287;

    
    
    

LUT_Match_vasim_68_287 #(8) lut_match_vasim_68_287(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_287));


assign vasim_68_w_match_287 = vasim_68_lut_match_287 ;

STE #(.fan_in(1)) vasim_68_ste_287 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_286 }),
                .match(vasim_68_w_match_287) ,
                .active_state(vasim_68_w_out_287));




/*wire vasim_68_w_out_288;
*/

wire vasim_68_lut_match_288;
wire vasim_68_w_match_288;

    
    
    

LUT_Match_vasim_68_288 #(8) lut_match_vasim_68_288(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_288));


assign vasim_68_w_match_288 = vasim_68_lut_match_288 ;

STE #(.fan_in(2)) vasim_68_ste_288 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_287 }),
                .match(vasim_68_w_match_288) ,
                .active_state(vasim_68_w_out_288));




/*wire vasim_68_w_out_289;
*/

wire vasim_68_lut_match_289;
wire vasim_68_w_match_289;

    
    
    

LUT_Match_vasim_68_289 #(8) lut_match_vasim_68_289(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_289));


assign vasim_68_w_match_289 = vasim_68_lut_match_289 ;

STE #(.fan_in(1)) vasim_68_ste_289 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_288 }),
                .match(vasim_68_w_match_289) ,
                .active_state(vasim_68_w_out_289));




/*wire vasim_68_w_out_290;
*/

wire vasim_68_lut_match_290;
wire vasim_68_w_match_290;

    
    
    

LUT_Match_vasim_68_290 #(8) lut_match_vasim_68_290(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_290));


assign vasim_68_w_match_290 = vasim_68_lut_match_290 ;

STE #(.fan_in(2)) vasim_68_ste_290 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_289, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_290) ,
                .active_state(vasim_68_w_out_290));




/*wire vasim_68_w_out_291;
*/

wire vasim_68_lut_match_291;
wire vasim_68_w_match_291;

    
    
    

LUT_Match_vasim_68_291 #(8) lut_match_vasim_68_291(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_291));


assign vasim_68_w_match_291 = vasim_68_lut_match_291 ;

STE #(.fan_in(1)) vasim_68_ste_291 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_290 }),
                .match(vasim_68_w_match_291) ,
                .active_state(vasim_68_w_out_291));




/*wire vasim_68_w_out_292;
*/

wire vasim_68_lut_match_292;
wire vasim_68_w_match_292;

    
    
    

LUT_Match_vasim_68_292 #(8) lut_match_vasim_68_292(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_292));


assign vasim_68_w_match_292 = vasim_68_lut_match_292 ;

STE #(.fan_in(2)) vasim_68_ste_292 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_291 }),
                .match(vasim_68_w_match_292) ,
                .active_state(vasim_68_w_out_292));




/*wire vasim_68_w_out_293;
*/

wire vasim_68_lut_match_293;
wire vasim_68_w_match_293;

    
    
    

LUT_Match_vasim_68_293 #(8) lut_match_vasim_68_293(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_293));


assign vasim_68_w_match_293 = vasim_68_lut_match_293 ;

STE #(.fan_in(1)) vasim_68_ste_293 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_292 }),
                .match(vasim_68_w_match_293) ,
                .active_state(vasim_68_w_out_293));




/*wire vasim_68_w_out_294;
*/

wire vasim_68_lut_match_294;
wire vasim_68_w_match_294;

    
    
    

LUT_Match_vasim_68_294 #(8) lut_match_vasim_68_294(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_294));


assign vasim_68_w_match_294 = vasim_68_lut_match_294 ;

STE #(.fan_in(1)) vasim_68_ste_294 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_283 }),
                .match(vasim_68_w_match_294) ,
                .active_state(vasim_68_w_out_294));




/*wire vasim_68_w_out_295;
*/

wire vasim_68_lut_match_295;
wire vasim_68_w_match_295;

    
    
    

LUT_Match_vasim_68_295 #(8) lut_match_vasim_68_295(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_295));


assign vasim_68_w_match_295 = vasim_68_lut_match_295 ;

STE #(.fan_in(2)) vasim_68_ste_295 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_293 }),
                .match(vasim_68_w_match_295) ,
                .active_state(vasim_68_w_out_295));




/*wire vasim_68_w_out_296;
*/

wire vasim_68_lut_match_296;
wire vasim_68_w_match_296;

    
    
    

LUT_Match_vasim_68_296 #(8) lut_match_vasim_68_296(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_296));


assign vasim_68_w_match_296 = vasim_68_lut_match_296 ;

STE #(.fan_in(1)) vasim_68_ste_296 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_295 }),
                .match(vasim_68_w_match_296) ,
                .active_state(vasim_68_w_out_296));




/*wire vasim_68_w_out_297;
*/

wire vasim_68_lut_match_297;
wire vasim_68_w_match_297;

    
    
    

LUT_Match_vasim_68_297 #(8) lut_match_vasim_68_297(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_297));


assign vasim_68_w_match_297 = vasim_68_lut_match_297 ;

STE #(.fan_in(2)) vasim_68_ste_297 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_296, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_297) ,
                .active_state(vasim_68_w_out_297));




/*wire vasim_68_w_out_298;
*/

wire vasim_68_lut_match_298;
wire vasim_68_w_match_298;

    
    
    

LUT_Match_vasim_68_298 #(8) lut_match_vasim_68_298(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_298));


assign vasim_68_w_match_298 = vasim_68_lut_match_298 ;

STE #(.fan_in(1)) vasim_68_ste_298 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_297 }),
                .match(vasim_68_w_match_298) ,
                .active_state(vasim_68_w_out_298));




/*wire vasim_68_w_out_299;
*/

wire vasim_68_lut_match_299;
wire vasim_68_w_match_299;

    
    
    

LUT_Match_vasim_68_299 #(8) lut_match_vasim_68_299(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_299));


assign vasim_68_w_match_299 = vasim_68_lut_match_299 ;

STE #(.fan_in(2)) vasim_68_ste_299 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_298 }),
                .match(vasim_68_w_match_299) ,
                .active_state(vasim_68_w_out_299));




/*wire vasim_68_w_out_300;
*/

wire vasim_68_lut_match_300;
wire vasim_68_w_match_300;

    
    
    

LUT_Match_vasim_68_300 #(8) lut_match_vasim_68_300(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_300));


assign vasim_68_w_match_300 = vasim_68_lut_match_300 ;

STE #(.fan_in(1)) vasim_68_ste_300 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_299 }),
                .match(vasim_68_w_match_300) ,
                .active_state(vasim_68_w_out_300));




/*wire vasim_68_w_out_301;
*/

wire vasim_68_lut_match_301;
wire vasim_68_w_match_301;

    
    
    

LUT_Match_vasim_68_301 #(8) lut_match_vasim_68_301(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_301));


assign vasim_68_w_match_301 = vasim_68_lut_match_301 ;

STE #(.fan_in(2)) vasim_68_ste_301 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_300 }),
                .match(vasim_68_w_match_301) ,
                .active_state(vasim_68_w_out_301));




/*wire vasim_68_w_out_302;
*/

wire vasim_68_lut_match_302;
wire vasim_68_w_match_302;

    
    
    

LUT_Match_vasim_68_302 #(8) lut_match_vasim_68_302(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_302));


assign vasim_68_w_match_302 = vasim_68_lut_match_302 ;

STE #(.fan_in(1)) vasim_68_ste_302 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_301 }),
                .match(vasim_68_w_match_302) ,
                .active_state(vasim_68_w_out_302));




/*wire vasim_68_w_out_303;
*/

wire vasim_68_lut_match_303;
wire vasim_68_w_match_303;

    
    
    

LUT_Match_vasim_68_303 #(8) lut_match_vasim_68_303(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_303));


assign vasim_68_w_match_303 = vasim_68_lut_match_303 ;

STE #(.fan_in(2)) vasim_68_ste_303 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_302 }),
                .match(vasim_68_w_match_303) ,
                .active_state(vasim_68_w_out_303));




/*wire vasim_68_w_out_304;
*/

wire vasim_68_lut_match_304;
wire vasim_68_w_match_304;

    
    
    

LUT_Match_vasim_68_304 #(8) lut_match_vasim_68_304(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_304));


assign vasim_68_w_match_304 = vasim_68_lut_match_304 ;

STE #(.fan_in(1)) vasim_68_ste_304 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_303 }),
                .match(vasim_68_w_match_304) ,
                .active_state(vasim_68_w_out_304));




/*wire vasim_68_w_out_305;
*/

wire vasim_68_lut_match_305;
wire vasim_68_w_match_305;

    
    
    

LUT_Match_vasim_68_305 #(8) lut_match_vasim_68_305(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_305));


assign vasim_68_w_match_305 = vasim_68_lut_match_305 ;

STE #(.fan_in(2)) vasim_68_ste_305 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_294 }),
                .match(vasim_68_w_match_305) ,
                .active_state(vasim_68_w_out_305));




/*wire vasim_68_w_out_306;
*/

wire vasim_68_lut_match_306;
wire vasim_68_w_match_306;

    
    
    

LUT_Match_vasim_68_306 #(8) lut_match_vasim_68_306(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_306));


assign vasim_68_w_match_306 = vasim_68_lut_match_306 ;

STE #(.fan_in(2)) vasim_68_ste_306 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_304, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_306) ,
                .active_state(vasim_68_w_out_306));




/*wire vasim_68_w_out_307;
*/

wire vasim_68_lut_match_307;
wire vasim_68_w_match_307;

    
    
    

LUT_Match_vasim_68_307 #(8) lut_match_vasim_68_307(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_307));


assign vasim_68_w_match_307 = vasim_68_lut_match_307 ;

STE #(.fan_in(1)) vasim_68_ste_307 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_306 }),
                .match(vasim_68_w_match_307) ,
                .active_state(vasim_68_w_out_307));




/*wire vasim_68_w_out_308;
*/

wire vasim_68_lut_match_308;
wire vasim_68_w_match_308;

    
    
    

LUT_Match_vasim_68_308 #(8) lut_match_vasim_68_308(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_308));


assign vasim_68_w_match_308 = vasim_68_lut_match_308 ;

STE #(.fan_in(2)) vasim_68_ste_308 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_307 }),
                .match(vasim_68_w_match_308) ,
                .active_state(vasim_68_w_out_308));




/*wire vasim_68_w_out_309;
*/

wire vasim_68_lut_match_309;
wire vasim_68_w_match_309;

    
    
    

LUT_Match_vasim_68_309 #(8) lut_match_vasim_68_309(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_309));


assign vasim_68_w_match_309 = vasim_68_lut_match_309 ;

STE #(.fan_in(1)) vasim_68_ste_309 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_308 }),
                .match(vasim_68_w_match_309) ,
                .active_state(vasim_68_w_out_309));




/*wire vasim_68_w_out_310;
*/

wire vasim_68_lut_match_310;
wire vasim_68_w_match_310;

    
    
    

LUT_Match_vasim_68_310 #(8) lut_match_vasim_68_310(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_310));


assign vasim_68_w_match_310 = vasim_68_lut_match_310 ;

STE #(.fan_in(2)) vasim_68_ste_310 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_309 }),
                .match(vasim_68_w_match_310) ,
                .active_state(vasim_68_w_out_310));




/*wire vasim_68_w_out_311;
*/

wire vasim_68_lut_match_311;
wire vasim_68_w_match_311;

    
    
    

LUT_Match_vasim_68_311 #(8) lut_match_vasim_68_311(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_311));


assign vasim_68_w_match_311 = vasim_68_lut_match_311 ;

STE #(.fan_in(1)) vasim_68_ste_311 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_310 }),
                .match(vasim_68_w_match_311) ,
                .active_state(vasim_68_w_out_311));




/*wire vasim_68_w_out_312;
*/

wire vasim_68_lut_match_312;
wire vasim_68_w_match_312;

    
    
    

LUT_Match_vasim_68_312 #(8) lut_match_vasim_68_312(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_312));


assign vasim_68_w_match_312 = vasim_68_lut_match_312 ;

STE #(.fan_in(2)) vasim_68_ste_312 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_311 }),
                .match(vasim_68_w_match_312) ,
                .active_state(vasim_68_w_out_312));




/*wire vasim_68_w_out_313;
*/

wire vasim_68_lut_match_313;
wire vasim_68_w_match_313;

    
    
    

LUT_Match_vasim_68_313 #(8) lut_match_vasim_68_313(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_313));


assign vasim_68_w_match_313 = vasim_68_lut_match_313 ;

STE #(.fan_in(1)) vasim_68_ste_313 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_312 }),
                .match(vasim_68_w_match_313) ,
                .active_state(vasim_68_w_out_313));




/*wire vasim_68_w_out_314;
*/

wire vasim_68_lut_match_314;
wire vasim_68_w_match_314;

    
    
    

LUT_Match_vasim_68_314 #(8) lut_match_vasim_68_314(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_314));


assign vasim_68_w_match_314 = vasim_68_lut_match_314 ;

STE #(.fan_in(2)) vasim_68_ste_314 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_313, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_314) ,
                .active_state(vasim_68_w_out_314));




/*wire vasim_68_w_out_315;
*/

wire vasim_68_lut_match_315;
wire vasim_68_w_match_315;

    
    
    

LUT_Match_vasim_68_315 #(8) lut_match_vasim_68_315(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_315));


assign vasim_68_w_match_315 = vasim_68_lut_match_315 ;

STE #(.fan_in(1)) vasim_68_ste_315 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_314 }),
                .match(vasim_68_w_match_315) ,
                .active_state(vasim_68_w_out_315));




/*wire vasim_68_w_out_316;
*/

wire vasim_68_lut_match_316;
wire vasim_68_w_match_316;

    
    
    

LUT_Match_vasim_68_316 #(8) lut_match_vasim_68_316(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_316));


assign vasim_68_w_match_316 = vasim_68_lut_match_316 ;

STE #(.fan_in(1)) vasim_68_ste_316 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_305 }),
                .match(vasim_68_w_match_316) ,
                .active_state(vasim_68_w_out_316));




/*wire vasim_68_w_out_317;
*/

wire vasim_68_lut_match_317;
wire vasim_68_w_match_317;

    
    
    

LUT_Match_vasim_68_317 #(8) lut_match_vasim_68_317(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_317));


assign vasim_68_w_match_317 = vasim_68_lut_match_317 ;

STE #(.fan_in(2)) vasim_68_ste_317 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_315 }),
                .match(vasim_68_w_match_317) ,
                .active_state(vasim_68_w_out_317));




/*wire vasim_68_w_out_318;
*/

wire vasim_68_lut_match_318;
wire vasim_68_w_match_318;

    
    
    

LUT_Match_vasim_68_318 #(8) lut_match_vasim_68_318(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_318));


assign vasim_68_w_match_318 = vasim_68_lut_match_318 ;

STE #(.fan_in(1)) vasim_68_ste_318 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_317 }),
                .match(vasim_68_w_match_318) ,
                .active_state(vasim_68_w_out_318));




/*wire vasim_68_w_out_319;
*/

wire vasim_68_lut_match_319;
wire vasim_68_w_match_319;

    
    
    

LUT_Match_vasim_68_319 #(8) lut_match_vasim_68_319(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_319));


assign vasim_68_w_match_319 = vasim_68_lut_match_319 ;

STE #(.fan_in(2)) vasim_68_ste_319 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_318 }),
                .match(vasim_68_w_match_319) ,
                .active_state(vasim_68_w_out_319));




/*wire vasim_68_w_out_320;
*/

wire vasim_68_lut_match_320;
wire vasim_68_w_match_320;

    
    
    

LUT_Match_vasim_68_320 #(8) lut_match_vasim_68_320(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_320));


assign vasim_68_w_match_320 = vasim_68_lut_match_320 ;

STE #(.fan_in(1)) vasim_68_ste_320 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_319 }),
                .match(vasim_68_w_match_320) ,
                .active_state(vasim_68_w_out_320));




/*wire vasim_68_w_out_321;
*/

wire vasim_68_lut_match_321;
wire vasim_68_w_match_321;

    
    
    

LUT_Match_vasim_68_321 #(8) lut_match_vasim_68_321(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_321));


assign vasim_68_w_match_321 = vasim_68_lut_match_321 ;

STE #(.fan_in(2)) vasim_68_ste_321 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_320, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_321) ,
                .active_state(vasim_68_w_out_321));




/*wire vasim_68_w_out_322;
*/

wire vasim_68_lut_match_322;
wire vasim_68_w_match_322;

    
    
    

LUT_Match_vasim_68_322 #(8) lut_match_vasim_68_322(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_322));


assign vasim_68_w_match_322 = vasim_68_lut_match_322 ;

STE #(.fan_in(1)) vasim_68_ste_322 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_321 }),
                .match(vasim_68_w_match_322) ,
                .active_state(vasim_68_w_out_322));




/*wire vasim_68_w_out_323;
*/

wire vasim_68_lut_match_323;
wire vasim_68_w_match_323;

    
    
    

LUT_Match_vasim_68_323 #(8) lut_match_vasim_68_323(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_323));


assign vasim_68_w_match_323 = vasim_68_lut_match_323 ;

STE #(.fan_in(2)) vasim_68_ste_323 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_322 }),
                .match(vasim_68_w_match_323) ,
                .active_state(vasim_68_w_out_323));




/*wire vasim_68_w_out_324;
*/

wire vasim_68_lut_match_324;
wire vasim_68_w_match_324;

    
    
    

LUT_Match_vasim_68_324 #(8) lut_match_vasim_68_324(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_324));


assign vasim_68_w_match_324 = vasim_68_lut_match_324 ;

STE #(.fan_in(1)) vasim_68_ste_324 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_323 }),
                .match(vasim_68_w_match_324) ,
                .active_state(vasim_68_w_out_324));




/*wire vasim_68_w_out_325;
*/

wire vasim_68_lut_match_325;
wire vasim_68_w_match_325;

    
    
    

LUT_Match_vasim_68_325 #(8) lut_match_vasim_68_325(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_325));


assign vasim_68_w_match_325 = vasim_68_lut_match_325 ;

STE #(.fan_in(2)) vasim_68_ste_325 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_324 }),
                .match(vasim_68_w_match_325) ,
                .active_state(vasim_68_w_out_325));




/*wire vasim_68_w_out_326;
*/

wire vasim_68_lut_match_326;
wire vasim_68_w_match_326;

    
    
    

LUT_Match_vasim_68_326 #(8) lut_match_vasim_68_326(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_326));


assign vasim_68_w_match_326 = vasim_68_lut_match_326 ;

STE #(.fan_in(1)) vasim_68_ste_326 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_325 }),
                .match(vasim_68_w_match_326) ,
                .active_state(vasim_68_w_out_326));




/*wire vasim_68_w_out_327;
*/

wire vasim_68_lut_match_327;
wire vasim_68_w_match_327;

    
    
    

LUT_Match_vasim_68_327 #(8) lut_match_vasim_68_327(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_327));


assign vasim_68_w_match_327 = vasim_68_lut_match_327 ;

STE #(.fan_in(2)) vasim_68_ste_327 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_316 }),
                .match(vasim_68_w_match_327) ,
                .active_state(vasim_68_w_out_327));




/*wire vasim_68_w_out_328;
*/

wire vasim_68_lut_match_328;
wire vasim_68_w_match_328;

    
    
    

LUT_Match_vasim_68_328 #(8) lut_match_vasim_68_328(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_328));


assign vasim_68_w_match_328 = vasim_68_lut_match_328 ;

STE #(.fan_in(2)) vasim_68_ste_328 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_326 }),
                .match(vasim_68_w_match_328) ,
                .active_state(vasim_68_w_out_328));




/*wire vasim_68_w_out_329;
*/

wire vasim_68_lut_match_329;
wire vasim_68_w_match_329;

    
    
    

LUT_Match_vasim_68_329 #(8) lut_match_vasim_68_329(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_329));


assign vasim_68_w_match_329 = vasim_68_lut_match_329 ;

STE #(.fan_in(1)) vasim_68_ste_329 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_328 }),
                .match(vasim_68_w_match_329) ,
                .active_state(vasim_68_w_out_329));




/*wire vasim_68_w_out_330;
*/

wire vasim_68_lut_match_330;
wire vasim_68_w_match_330;

    
    
    

LUT_Match_vasim_68_330 #(8) lut_match_vasim_68_330(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_330));


assign vasim_68_w_match_330 = vasim_68_lut_match_330 ;

STE #(.fan_in(2)) vasim_68_ste_330 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_329, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_330) ,
                .active_state(vasim_68_w_out_330));




/*wire vasim_68_w_out_331;
*/

wire vasim_68_lut_match_331;
wire vasim_68_w_match_331;

    
    
    

LUT_Match_vasim_68_331 #(8) lut_match_vasim_68_331(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_331));


assign vasim_68_w_match_331 = vasim_68_lut_match_331 ;

STE #(.fan_in(1)) vasim_68_ste_331 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_330 }),
                .match(vasim_68_w_match_331) ,
                .active_state(vasim_68_w_out_331));




/*wire vasim_68_w_out_332;
*/

wire vasim_68_lut_match_332;
wire vasim_68_w_match_332;

    
    
    

LUT_Match_vasim_68_332 #(8) lut_match_vasim_68_332(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_332));


assign vasim_68_w_match_332 = vasim_68_lut_match_332 ;

STE #(.fan_in(2)) vasim_68_ste_332 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_331 }),
                .match(vasim_68_w_match_332) ,
                .active_state(vasim_68_w_out_332));




/*wire vasim_68_w_out_333;
*/

wire vasim_68_lut_match_333;
wire vasim_68_w_match_333;

    
    
    

LUT_Match_vasim_68_333 #(8) lut_match_vasim_68_333(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_333));


assign vasim_68_w_match_333 = vasim_68_lut_match_333 ;

STE #(.fan_in(1)) vasim_68_ste_333 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_332 }),
                .match(vasim_68_w_match_333) ,
                .active_state(vasim_68_w_out_333));




/*wire vasim_68_w_out_334;
*/

wire vasim_68_lut_match_334;
wire vasim_68_w_match_334;

    
    
    

LUT_Match_vasim_68_334 #(8) lut_match_vasim_68_334(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_334));


assign vasim_68_w_match_334 = vasim_68_lut_match_334 ;

STE #(.fan_in(2)) vasim_68_ste_334 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_333 }),
                .match(vasim_68_w_match_334) ,
                .active_state(vasim_68_w_out_334));




/*wire vasim_68_w_out_335;
*/

wire vasim_68_lut_match_335;
wire vasim_68_w_match_335;

    
    
    

LUT_Match_vasim_68_335 #(8) lut_match_vasim_68_335(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_335));


assign vasim_68_w_match_335 = vasim_68_lut_match_335 ;

STE #(.fan_in(1)) vasim_68_ste_335 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_334 }),
                .match(vasim_68_w_match_335) ,
                .active_state(vasim_68_w_out_335));




/*wire vasim_68_w_out_336;
*/

wire vasim_68_lut_match_336;
wire vasim_68_w_match_336;

    
    
    

LUT_Match_vasim_68_336 #(8) lut_match_vasim_68_336(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_336));


assign vasim_68_w_match_336 = vasim_68_lut_match_336 ;

STE #(.fan_in(2)) vasim_68_ste_336 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_335 }),
                .match(vasim_68_w_match_336) ,
                .active_state(vasim_68_w_out_336));




/*wire vasim_68_w_out_337;
*/

wire vasim_68_lut_match_337;
wire vasim_68_w_match_337;

    
    
    

LUT_Match_vasim_68_337 #(8) lut_match_vasim_68_337(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_337));


assign vasim_68_w_match_337 = vasim_68_lut_match_337 ;

STE #(.fan_in(1)) vasim_68_ste_337 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_336 }),
                .match(vasim_68_w_match_337) ,
                .active_state(vasim_68_w_out_337));




/*wire vasim_68_w_out_338;
*/

wire vasim_68_lut_match_338;
wire vasim_68_w_match_338;

    
    
    

LUT_Match_vasim_68_338 #(8) lut_match_vasim_68_338(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_338));


assign vasim_68_w_match_338 = vasim_68_lut_match_338 ;

STE #(.fan_in(1)) vasim_68_ste_338 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_327 }),
                .match(vasim_68_w_match_338) ,
                .active_state(vasim_68_w_out_338));




/*wire vasim_68_w_out_339;
*/

wire vasim_68_lut_match_339;
wire vasim_68_w_match_339;

    
    
    

LUT_Match_vasim_68_339 #(8) lut_match_vasim_68_339(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_339));


assign vasim_68_w_match_339 = vasim_68_lut_match_339 ;

STE #(.fan_in(2)) vasim_68_ste_339 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_337, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_339) ,
                .active_state(vasim_68_w_out_339));




/*wire vasim_68_w_out_340;
*/

wire vasim_68_lut_match_340;
wire vasim_68_w_match_340;

    
    
    

LUT_Match_vasim_68_340 #(8) lut_match_vasim_68_340(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_340));


assign vasim_68_w_match_340 = vasim_68_lut_match_340 ;

STE #(.fan_in(1)) vasim_68_ste_340 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_339 }),
                .match(vasim_68_w_match_340) ,
                .active_state(vasim_68_w_out_340));




/*wire vasim_68_w_out_341;
*/

wire vasim_68_lut_match_341;
wire vasim_68_w_match_341;

    
    
    

LUT_Match_vasim_68_341 #(8) lut_match_vasim_68_341(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_341));


assign vasim_68_w_match_341 = vasim_68_lut_match_341 ;

STE #(.fan_in(2)) vasim_68_ste_341 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_340 }),
                .match(vasim_68_w_match_341) ,
                .active_state(vasim_68_w_out_341));




/*wire vasim_68_w_out_342;
*/

wire vasim_68_lut_match_342;
wire vasim_68_w_match_342;

    
    
    

LUT_Match_vasim_68_342 #(8) lut_match_vasim_68_342(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_342));


assign vasim_68_w_match_342 = vasim_68_lut_match_342 ;

STE #(.fan_in(1)) vasim_68_ste_342 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_341 }),
                .match(vasim_68_w_match_342) ,
                .active_state(vasim_68_w_out_342));




/*wire vasim_68_w_out_343;
*/

wire vasim_68_lut_match_343;
wire vasim_68_w_match_343;

    
    
    

LUT_Match_vasim_68_343 #(8) lut_match_vasim_68_343(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_343));


assign vasim_68_w_match_343 = vasim_68_lut_match_343 ;

STE #(.fan_in(2)) vasim_68_ste_343 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_342 }),
                .match(vasim_68_w_match_343) ,
                .active_state(vasim_68_w_out_343));




/*wire vasim_68_w_out_344;
*/

wire vasim_68_lut_match_344;
wire vasim_68_w_match_344;

    
    
    

LUT_Match_vasim_68_344 #(8) lut_match_vasim_68_344(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_344));


assign vasim_68_w_match_344 = vasim_68_lut_match_344 ;

STE #(.fan_in(1)) vasim_68_ste_344 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_343 }),
                .match(vasim_68_w_match_344) ,
                .active_state(vasim_68_w_out_344));




/*wire vasim_68_w_out_345;
*/

wire vasim_68_lut_match_345;
wire vasim_68_w_match_345;

    
    
    

LUT_Match_vasim_68_345 #(8) lut_match_vasim_68_345(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_345));


assign vasim_68_w_match_345 = vasim_68_lut_match_345 ;

STE #(.fan_in(2)) vasim_68_ste_345 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_344, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_345) ,
                .active_state(vasim_68_w_out_345));




/*wire vasim_68_w_out_346;
*/

wire vasim_68_lut_match_346;
wire vasim_68_w_match_346;

    
    
    

LUT_Match_vasim_68_346 #(8) lut_match_vasim_68_346(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_346));


assign vasim_68_w_match_346 = vasim_68_lut_match_346 ;

STE #(.fan_in(1)) vasim_68_ste_346 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_345 }),
                .match(vasim_68_w_match_346) ,
                .active_state(vasim_68_w_out_346));




/*wire vasim_68_w_out_347;
*/

wire vasim_68_lut_match_347;
wire vasim_68_w_match_347;

    
    
    

LUT_Match_vasim_68_347 #(8) lut_match_vasim_68_347(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_347));


assign vasim_68_w_match_347 = vasim_68_lut_match_347 ;

STE #(.fan_in(2)) vasim_68_ste_347 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_346 }),
                .match(vasim_68_w_match_347) ,
                .active_state(vasim_68_w_out_347));




/*wire vasim_68_w_out_348;
*/

wire vasim_68_lut_match_348;
wire vasim_68_w_match_348;

    
    
    

LUT_Match_vasim_68_348 #(8) lut_match_vasim_68_348(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_348));


assign vasim_68_w_match_348 = vasim_68_lut_match_348 ;

STE #(.fan_in(1)) vasim_68_ste_348 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_347 }),
                .match(vasim_68_w_match_348) ,
                .active_state(vasim_68_w_out_348));




/*wire vasim_68_w_out_349;
*/

wire vasim_68_lut_match_349;
wire vasim_68_w_match_349;

    
    
    

LUT_Match_vasim_68_349 #(8) lut_match_vasim_68_349(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_349));


assign vasim_68_w_match_349 = vasim_68_lut_match_349 ;

STE #(.fan_in(2)) vasim_68_ste_349 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_338 }),
                .match(vasim_68_w_match_349) ,
                .active_state(vasim_68_w_out_349));




/*wire vasim_68_w_out_350;
*/

wire vasim_68_lut_match_350;
wire vasim_68_w_match_350;

    
    
    

LUT_Match_vasim_68_350 #(8) lut_match_vasim_68_350(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_350));


assign vasim_68_w_match_350 = vasim_68_lut_match_350 ;

STE #(.fan_in(2)) vasim_68_ste_350 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_348 }),
                .match(vasim_68_w_match_350) ,
                .active_state(vasim_68_w_out_350));




/*wire vasim_68_w_out_351;
*/

wire vasim_68_lut_match_351;
wire vasim_68_w_match_351;

    
    
    

LUT_Match_vasim_68_351 #(8) lut_match_vasim_68_351(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_351));


assign vasim_68_w_match_351 = vasim_68_lut_match_351 ;

STE #(.fan_in(1)) vasim_68_ste_351 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_350 }),
                .match(vasim_68_w_match_351) ,
                .active_state(vasim_68_w_out_351));




/*wire vasim_68_w_out_352;
*/

wire vasim_68_lut_match_352;
wire vasim_68_w_match_352;

    
    
    

LUT_Match_vasim_68_352 #(8) lut_match_vasim_68_352(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_352));


assign vasim_68_w_match_352 = vasim_68_lut_match_352 ;

STE #(.fan_in(2)) vasim_68_ste_352 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_351 }),
                .match(vasim_68_w_match_352) ,
                .active_state(vasim_68_w_out_352));




/*wire vasim_68_w_out_353;
*/

wire vasim_68_lut_match_353;
wire vasim_68_w_match_353;

    
    
    

LUT_Match_vasim_68_353 #(8) lut_match_vasim_68_353(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_353));


assign vasim_68_w_match_353 = vasim_68_lut_match_353 ;

STE #(.fan_in(1)) vasim_68_ste_353 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_352 }),
                .match(vasim_68_w_match_353) ,
                .active_state(vasim_68_w_out_353));




/*wire vasim_68_w_out_354;
*/

wire vasim_68_lut_match_354;
wire vasim_68_w_match_354;

    
    
    

LUT_Match_vasim_68_354 #(8) lut_match_vasim_68_354(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_354));


assign vasim_68_w_match_354 = vasim_68_lut_match_354 ;

STE #(.fan_in(2)) vasim_68_ste_354 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_353, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_354) ,
                .active_state(vasim_68_w_out_354));




/*wire vasim_68_w_out_355;
*/

wire vasim_68_lut_match_355;
wire vasim_68_w_match_355;

    
    
    

LUT_Match_vasim_68_355 #(8) lut_match_vasim_68_355(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_355));


assign vasim_68_w_match_355 = vasim_68_lut_match_355 ;

STE #(.fan_in(1)) vasim_68_ste_355 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_354 }),
                .match(vasim_68_w_match_355) ,
                .active_state(vasim_68_w_out_355));




/*wire vasim_68_w_out_356;
*/

wire vasim_68_lut_match_356;
wire vasim_68_w_match_356;

    
    
    

LUT_Match_vasim_68_356 #(8) lut_match_vasim_68_356(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_356));


assign vasim_68_w_match_356 = vasim_68_lut_match_356 ;

STE #(.fan_in(2)) vasim_68_ste_356 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_355 }),
                .match(vasim_68_w_match_356) ,
                .active_state(vasim_68_w_out_356));




/*wire vasim_68_w_out_357;
*/

wire vasim_68_lut_match_357;
wire vasim_68_w_match_357;

    
    
    

LUT_Match_vasim_68_357 #(8) lut_match_vasim_68_357(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_357));


assign vasim_68_w_match_357 = vasim_68_lut_match_357 ;

STE #(.fan_in(1)) vasim_68_ste_357 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_356 }),
                .match(vasim_68_w_match_357) ,
                .active_state(vasim_68_w_out_357));




/*wire vasim_68_w_out_358;
*/

wire vasim_68_lut_match_358;
wire vasim_68_w_match_358;

    
    
    

LUT_Match_vasim_68_358 #(8) lut_match_vasim_68_358(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_358));


assign vasim_68_w_match_358 = vasim_68_lut_match_358 ;

STE #(.fan_in(2)) vasim_68_ste_358 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_357 }),
                .match(vasim_68_w_match_358) ,
                .active_state(vasim_68_w_out_358));




/*wire vasim_68_w_out_359;
*/

wire vasim_68_lut_match_359;
wire vasim_68_w_match_359;

    
    
    

LUT_Match_vasim_68_359 #(8) lut_match_vasim_68_359(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_359));


assign vasim_68_w_match_359 = vasim_68_lut_match_359 ;

STE #(.fan_in(1)) vasim_68_ste_359 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_358 }),
                .match(vasim_68_w_match_359) ,
                .active_state(vasim_68_w_out_359));




/*wire vasim_68_w_out_360;
*/

wire vasim_68_lut_match_360;
wire vasim_68_w_match_360;

    
    
    

LUT_Match_vasim_68_360 #(8) lut_match_vasim_68_360(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_360));


assign vasim_68_w_match_360 = vasim_68_lut_match_360 ;

STE #(.fan_in(1)) vasim_68_ste_360 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_349 }),
                .match(vasim_68_w_match_360) ,
                .active_state(vasim_68_w_out_360));




/*wire vasim_68_w_out_361;
*/

wire vasim_68_lut_match_361;
wire vasim_68_w_match_361;

    
    
    

LUT_Match_vasim_68_361 #(8) lut_match_vasim_68_361(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_361));


assign vasim_68_w_match_361 = vasim_68_lut_match_361 ;

STE #(.fan_in(2)) vasim_68_ste_361 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_359 }),
                .match(vasim_68_w_match_361) ,
                .active_state(vasim_68_w_out_361));




/*wire vasim_68_w_out_362;
*/

wire vasim_68_lut_match_362;
wire vasim_68_w_match_362;

    
    
    

LUT_Match_vasim_68_362 #(8) lut_match_vasim_68_362(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_362));


assign vasim_68_w_match_362 = vasim_68_lut_match_362 ;

STE #(.fan_in(1)) vasim_68_ste_362 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_361 }),
                .match(vasim_68_w_match_362) ,
                .active_state(vasim_68_w_out_362));




/*wire vasim_68_w_out_363;
*/

wire vasim_68_lut_match_363;
wire vasim_68_w_match_363;

    
    
    

LUT_Match_vasim_68_363 #(8) lut_match_vasim_68_363(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_363));


assign vasim_68_w_match_363 = vasim_68_lut_match_363 ;

STE #(.fan_in(2)) vasim_68_ste_363 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_362 }),
                .match(vasim_68_w_match_363) ,
                .active_state(vasim_68_w_out_363));




/*wire vasim_68_w_out_364;
*/

wire vasim_68_lut_match_364;
wire vasim_68_w_match_364;

    
    
    

LUT_Match_vasim_68_364 #(8) lut_match_vasim_68_364(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_364));


assign vasim_68_w_match_364 = vasim_68_lut_match_364 ;

STE #(.fan_in(1)) vasim_68_ste_364 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_363 }),
                .match(vasim_68_w_match_364) ,
                .active_state(vasim_68_w_out_364));




/*wire vasim_68_w_out_365;
*/

wire vasim_68_lut_match_365;
wire vasim_68_w_match_365;

    
    
    

LUT_Match_vasim_68_365 #(8) lut_match_vasim_68_365(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_365));


assign vasim_68_w_match_365 = vasim_68_lut_match_365 ;

STE #(.fan_in(2)) vasim_68_ste_365 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_364 }),
                .match(vasim_68_w_match_365) ,
                .active_state(vasim_68_w_out_365));




/*wire vasim_68_w_out_366;
*/

wire vasim_68_lut_match_366;
wire vasim_68_w_match_366;

    
    
    

LUT_Match_vasim_68_366 #(8) lut_match_vasim_68_366(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_366));


assign vasim_68_w_match_366 = vasim_68_lut_match_366 ;

STE #(.fan_in(1)) vasim_68_ste_366 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_365 }),
                .match(vasim_68_w_match_366) ,
                .active_state(vasim_68_w_out_366));




/*wire vasim_68_w_out_367;
*/

wire vasim_68_lut_match_367;
wire vasim_68_w_match_367;

    
    
    

LUT_Match_vasim_68_367 #(8) lut_match_vasim_68_367(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_367));


assign vasim_68_w_match_367 = vasim_68_lut_match_367 ;

STE #(.fan_in(2)) vasim_68_ste_367 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_366 }),
                .match(vasim_68_w_match_367) ,
                .active_state(vasim_68_w_out_367));




/*wire vasim_68_w_out_368;
*/

wire vasim_68_lut_match_368;
wire vasim_68_w_match_368;

    
    
    

LUT_Match_vasim_68_368 #(8) lut_match_vasim_68_368(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_368));


assign vasim_68_w_match_368 = vasim_68_lut_match_368 ;

STE #(.fan_in(1)) vasim_68_ste_368 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_367 }),
                .match(vasim_68_w_match_368) ,
                .active_state(vasim_68_w_out_368));




/*wire vasim_68_w_out_369;
*/

wire vasim_68_lut_match_369;
wire vasim_68_w_match_369;

    
    
    

LUT_Match_vasim_68_369 #(8) lut_match_vasim_68_369(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_369));


assign vasim_68_w_match_369 = vasim_68_lut_match_369 ;

STE #(.fan_in(2)) vasim_68_ste_369 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_368, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_369) ,
                .active_state(vasim_68_w_out_369));




/*wire vasim_68_w_out_370;
*/

wire vasim_68_lut_match_370;
wire vasim_68_w_match_370;

    
    
    

LUT_Match_vasim_68_370 #(8) lut_match_vasim_68_370(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_370));


assign vasim_68_w_match_370 = vasim_68_lut_match_370 ;

STE #(.fan_in(1)) vasim_68_ste_370 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_369 }),
                .match(vasim_68_w_match_370) ,
                .active_state(vasim_68_w_out_370));




/*wire vasim_68_w_out_371;
*/

wire vasim_68_lut_match_371;
wire vasim_68_w_match_371;

    
    
    

LUT_Match_vasim_68_371 #(8) lut_match_vasim_68_371(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_371));


assign vasim_68_w_match_371 = vasim_68_lut_match_371 ;

STE #(.fan_in(2)) vasim_68_ste_371 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_360, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_371) ,
                .active_state(vasim_68_w_out_371));




/*wire vasim_68_w_out_372;
*/

wire vasim_68_lut_match_372;
wire vasim_68_w_match_372;

    
    
    

LUT_Match_vasim_68_372 #(8) lut_match_vasim_68_372(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_372));


assign vasim_68_w_match_372 = vasim_68_lut_match_372 ;

STE #(.fan_in(2)) vasim_68_ste_372 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_370 }),
                .match(vasim_68_w_match_372) ,
                .active_state(vasim_68_w_out_372));




/*wire vasim_68_w_out_373;
*/

wire vasim_68_lut_match_373;
wire vasim_68_w_match_373;

    
    
    

LUT_Match_vasim_68_373 #(8) lut_match_vasim_68_373(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_373));


assign vasim_68_w_match_373 = vasim_68_lut_match_373 ;

STE #(.fan_in(1)) vasim_68_ste_373 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_372 }),
                .match(vasim_68_w_match_373) ,
                .active_state(vasim_68_w_out_373));




/*wire vasim_68_w_out_374;
*/

wire vasim_68_lut_match_374;
wire vasim_68_w_match_374;

    
    
    

LUT_Match_vasim_68_374 #(8) lut_match_vasim_68_374(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_374));


assign vasim_68_w_match_374 = vasim_68_lut_match_374 ;

STE #(.fan_in(2)) vasim_68_ste_374 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_373 }),
                .match(vasim_68_w_match_374) ,
                .active_state(vasim_68_w_out_374));




/*wire vasim_68_w_out_375;
*/

wire vasim_68_lut_match_375;
wire vasim_68_w_match_375;

    
    
    

LUT_Match_vasim_68_375 #(8) lut_match_vasim_68_375(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_375));


assign vasim_68_w_match_375 = vasim_68_lut_match_375 ;

STE #(.fan_in(1)) vasim_68_ste_375 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_374 }),
                .match(vasim_68_w_match_375) ,
                .active_state(vasim_68_w_out_375));




/*wire vasim_68_w_out_376;
*/

wire vasim_68_lut_match_376;
wire vasim_68_w_match_376;

    
    
    

LUT_Match_vasim_68_376 #(8) lut_match_vasim_68_376(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_376));


assign vasim_68_w_match_376 = vasim_68_lut_match_376 ;

STE #(.fan_in(2)) vasim_68_ste_376 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_375 }),
                .match(vasim_68_w_match_376) ,
                .active_state(vasim_68_w_out_376));




/*wire vasim_68_w_out_377;
*/

wire vasim_68_lut_match_377;
wire vasim_68_w_match_377;

    
    
    

LUT_Match_vasim_68_377 #(8) lut_match_vasim_68_377(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_377));


assign vasim_68_w_match_377 = vasim_68_lut_match_377 ;

STE #(.fan_in(1)) vasim_68_ste_377 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_376 }),
                .match(vasim_68_w_match_377) ,
                .active_state(vasim_68_w_out_377));




/*wire vasim_68_w_out_378;
*/

wire vasim_68_lut_match_378;
wire vasim_68_w_match_378;

    
    
    

LUT_Match_vasim_68_378 #(8) lut_match_vasim_68_378(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_378));


assign vasim_68_w_match_378 = vasim_68_lut_match_378 ;

STE #(.fan_in(2)) vasim_68_ste_378 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_377, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_378) ,
                .active_state(vasim_68_w_out_378));




/*wire vasim_68_w_out_379;
*/

wire vasim_68_lut_match_379;
wire vasim_68_w_match_379;

    
    
    

LUT_Match_vasim_68_379 #(8) lut_match_vasim_68_379(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_379));


assign vasim_68_w_match_379 = vasim_68_lut_match_379 ;

STE #(.fan_in(1)) vasim_68_ste_379 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_378 }),
                .match(vasim_68_w_match_379) ,
                .active_state(vasim_68_w_out_379));




/*wire vasim_68_w_out_380;
*/

wire vasim_68_lut_match_380;
wire vasim_68_w_match_380;

    
    
    

LUT_Match_vasim_68_380 #(8) lut_match_vasim_68_380(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_380));


assign vasim_68_w_match_380 = vasim_68_lut_match_380 ;

STE #(.fan_in(2)) vasim_68_ste_380 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_379 }),
                .match(vasim_68_w_match_380) ,
                .active_state(vasim_68_w_out_380));




/*wire vasim_68_w_out_381;
*/

wire vasim_68_lut_match_381;
wire vasim_68_w_match_381;

    
    
    

LUT_Match_vasim_68_381 #(8) lut_match_vasim_68_381(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_381));


assign vasim_68_w_match_381 = vasim_68_lut_match_381 ;

STE #(.fan_in(1)) vasim_68_ste_381 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_380 }),
                .match(vasim_68_w_match_381) ,
                .active_state(vasim_68_w_out_381));




/*wire vasim_68_w_out_382;
*/

wire vasim_68_lut_match_382;
wire vasim_68_w_match_382;

    
    
    

LUT_Match_vasim_68_382 #(8) lut_match_vasim_68_382(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_382));


assign vasim_68_w_match_382 = vasim_68_lut_match_382 ;

STE #(.fan_in(1)) vasim_68_ste_382 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_371 }),
                .match(vasim_68_w_match_382) ,
                .active_state(vasim_68_w_out_382));




/*wire vasim_68_w_out_383;
*/

wire vasim_68_lut_match_383;
wire vasim_68_w_match_383;

    
    
    

LUT_Match_vasim_68_383 #(8) lut_match_vasim_68_383(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_383));


assign vasim_68_w_match_383 = vasim_68_lut_match_383 ;

STE #(.fan_in(2)) vasim_68_ste_383 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_381 }),
                .match(vasim_68_w_match_383) ,
                .active_state(vasim_68_w_out_383));




/*wire vasim_68_w_out_384;
*/

wire vasim_68_lut_match_384;
wire vasim_68_w_match_384;

    
    
    

LUT_Match_vasim_68_384 #(8) lut_match_vasim_68_384(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_384));


assign vasim_68_w_match_384 = vasim_68_lut_match_384 ;

STE #(.fan_in(1)) vasim_68_ste_384 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_383 }),
                .match(vasim_68_w_match_384) ,
                .active_state(vasim_68_w_out_384));




/*wire vasim_68_w_out_385;
*/

wire vasim_68_lut_match_385;
wire vasim_68_w_match_385;

    
    
    

LUT_Match_vasim_68_385 #(8) lut_match_vasim_68_385(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_385));


assign vasim_68_w_match_385 = vasim_68_lut_match_385 ;

STE #(.fan_in(2)) vasim_68_ste_385 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_384, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_385) ,
                .active_state(vasim_68_w_out_385));




/*wire vasim_68_w_out_386;
*/

wire vasim_68_lut_match_386;
wire vasim_68_w_match_386;

    
    
    

LUT_Match_vasim_68_386 #(8) lut_match_vasim_68_386(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_386));


assign vasim_68_w_match_386 = vasim_68_lut_match_386 ;

STE #(.fan_in(1)) vasim_68_ste_386 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_385 }),
                .match(vasim_68_w_match_386) ,
                .active_state(vasim_68_w_out_386));




/*wire vasim_68_w_out_387;
*/

wire vasim_68_lut_match_387;
wire vasim_68_w_match_387;

    
    
    

LUT_Match_vasim_68_387 #(8) lut_match_vasim_68_387(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_387));


assign vasim_68_w_match_387 = vasim_68_lut_match_387 ;

STE #(.fan_in(2)) vasim_68_ste_387 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_386 }),
                .match(vasim_68_w_match_387) ,
                .active_state(vasim_68_w_out_387));




/*wire vasim_68_w_out_388;
*/

wire vasim_68_lut_match_388;
wire vasim_68_w_match_388;

    
    
    

LUT_Match_vasim_68_388 #(8) lut_match_vasim_68_388(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_388));


assign vasim_68_w_match_388 = vasim_68_lut_match_388 ;

STE #(.fan_in(1)) vasim_68_ste_388 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_387 }),
                .match(vasim_68_w_match_388) ,
                .active_state(vasim_68_w_out_388));




/*wire vasim_68_w_out_389;
*/

wire vasim_68_lut_match_389;
wire vasim_68_w_match_389;

    
    
    

LUT_Match_vasim_68_389 #(8) lut_match_vasim_68_389(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_389));


assign vasim_68_w_match_389 = vasim_68_lut_match_389 ;

STE #(.fan_in(2)) vasim_68_ste_389 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_388 }),
                .match(vasim_68_w_match_389) ,
                .active_state(vasim_68_w_out_389));




/*wire vasim_68_w_out_390;
*/

wire vasim_68_lut_match_390;
wire vasim_68_w_match_390;

    
    
    

LUT_Match_vasim_68_390 #(8) lut_match_vasim_68_390(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_390));


assign vasim_68_w_match_390 = vasim_68_lut_match_390 ;

STE #(.fan_in(1)) vasim_68_ste_390 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_389 }),
                .match(vasim_68_w_match_390) ,
                .active_state(vasim_68_w_out_390));




/*wire vasim_68_w_out_391;
*/

wire vasim_68_lut_match_391;
wire vasim_68_w_match_391;

    
    
    

LUT_Match_vasim_68_391 #(8) lut_match_vasim_68_391(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_391));


assign vasim_68_w_match_391 = vasim_68_lut_match_391 ;

STE #(.fan_in(2)) vasim_68_ste_391 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_390 }),
                .match(vasim_68_w_match_391) ,
                .active_state(vasim_68_w_out_391));




/*wire vasim_68_w_out_392;
*/

wire vasim_68_lut_match_392;
wire vasim_68_w_match_392;

    
    
    

LUT_Match_vasim_68_392 #(8) lut_match_vasim_68_392(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_392));


assign vasim_68_w_match_392 = vasim_68_lut_match_392 ;

STE #(.fan_in(1)) vasim_68_ste_392 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_391 }),
                .match(vasim_68_w_match_392) ,
                .active_state(vasim_68_w_out_392));




/*wire vasim_68_w_out_393;
*/

wire vasim_68_lut_match_393;
wire vasim_68_w_match_393;

    
    
    

LUT_Match_vasim_68_393 #(8) lut_match_vasim_68_393(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_393));


assign vasim_68_w_match_393 = vasim_68_lut_match_393 ;

STE #(.fan_in(2)) vasim_68_ste_393 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_382 }),
                .match(vasim_68_w_match_393) ,
                .active_state(vasim_68_w_out_393));




/*wire vasim_68_w_out_394;
*/

wire vasim_68_lut_match_394;
wire vasim_68_w_match_394;

    
    
    

LUT_Match_vasim_68_394 #(8) lut_match_vasim_68_394(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_394));


assign vasim_68_w_match_394 = vasim_68_lut_match_394 ;

STE #(.fan_in(2)) vasim_68_ste_394 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_392, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_394) ,
                .active_state(vasim_68_w_out_394));




/*wire vasim_68_w_out_395;
*/

wire vasim_68_lut_match_395;
wire vasim_68_w_match_395;

    
    
    

LUT_Match_vasim_68_395 #(8) lut_match_vasim_68_395(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_395));


assign vasim_68_w_match_395 = vasim_68_lut_match_395 ;

STE #(.fan_in(1)) vasim_68_ste_395 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_394 }),
                .match(vasim_68_w_match_395) ,
                .active_state(vasim_68_w_out_395));




/*wire vasim_68_w_out_396;
*/

wire vasim_68_lut_match_396;
wire vasim_68_w_match_396;

    
    
    

LUT_Match_vasim_68_396 #(8) lut_match_vasim_68_396(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_396));


assign vasim_68_w_match_396 = vasim_68_lut_match_396 ;

STE #(.fan_in(2)) vasim_68_ste_396 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_395 }),
                .match(vasim_68_w_match_396) ,
                .active_state(vasim_68_w_out_396));




/*wire vasim_68_w_out_397;
*/

wire vasim_68_lut_match_397;
wire vasim_68_w_match_397;

    
    
    

LUT_Match_vasim_68_397 #(8) lut_match_vasim_68_397(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_397));


assign vasim_68_w_match_397 = vasim_68_lut_match_397 ;

STE #(.fan_in(1)) vasim_68_ste_397 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_396 }),
                .match(vasim_68_w_match_397) ,
                .active_state(vasim_68_w_out_397));




/*wire vasim_68_w_out_398;
*/

wire vasim_68_lut_match_398;
wire vasim_68_w_match_398;

    
    
    

LUT_Match_vasim_68_398 #(8) lut_match_vasim_68_398(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_398));


assign vasim_68_w_match_398 = vasim_68_lut_match_398 ;

STE #(.fan_in(2)) vasim_68_ste_398 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_397 }),
                .match(vasim_68_w_match_398) ,
                .active_state(vasim_68_w_out_398));




/*wire vasim_68_w_out_399;
*/

wire vasim_68_lut_match_399;
wire vasim_68_w_match_399;

    
    
    

LUT_Match_vasim_68_399 #(8) lut_match_vasim_68_399(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_399));


assign vasim_68_w_match_399 = vasim_68_lut_match_399 ;

STE #(.fan_in(1)) vasim_68_ste_399 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_398 }),
                .match(vasim_68_w_match_399) ,
                .active_state(vasim_68_w_out_399));




/*wire vasim_68_w_out_400;
*/

wire vasim_68_lut_match_400;
wire vasim_68_w_match_400;

    
    
    

LUT_Match_vasim_68_400 #(8) lut_match_vasim_68_400(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_400));


assign vasim_68_w_match_400 = vasim_68_lut_match_400 ;

STE #(.fan_in(2)) vasim_68_ste_400 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_399 }),
                .match(vasim_68_w_match_400) ,
                .active_state(vasim_68_w_out_400));




/*wire vasim_68_w_out_401;
*/

wire vasim_68_lut_match_401;
wire vasim_68_w_match_401;

    
    
    

LUT_Match_vasim_68_401 #(8) lut_match_vasim_68_401(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_401));


assign vasim_68_w_match_401 = vasim_68_lut_match_401 ;

STE #(.fan_in(1)) vasim_68_ste_401 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_400 }),
                .match(vasim_68_w_match_401) ,
                .active_state(vasim_68_w_out_401));




/*wire vasim_68_w_out_402;
*/

wire vasim_68_lut_match_402;
wire vasim_68_w_match_402;

    
    
    

LUT_Match_vasim_68_402 #(8) lut_match_vasim_68_402(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_402));


assign vasim_68_w_match_402 = vasim_68_lut_match_402 ;

STE #(.fan_in(2)) vasim_68_ste_402 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_401, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_402) ,
                .active_state(vasim_68_w_out_402));




/*wire vasim_68_w_out_403;
*/

wire vasim_68_lut_match_403;
wire vasim_68_w_match_403;

    
    
    

LUT_Match_vasim_68_403 #(8) lut_match_vasim_68_403(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_403));


assign vasim_68_w_match_403 = vasim_68_lut_match_403 ;

STE #(.fan_in(1)) vasim_68_ste_403 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_402 }),
                .match(vasim_68_w_match_403) ,
                .active_state(vasim_68_w_out_403));




/*wire vasim_68_w_out_404;
*/

wire vasim_68_lut_match_404;
wire vasim_68_w_match_404;

    
    
    

LUT_Match_vasim_68_404 #(8) lut_match_vasim_68_404(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_404));


assign vasim_68_w_match_404 = vasim_68_lut_match_404 ;

STE #(.fan_in(1)) vasim_68_ste_404 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_393 }),
                .match(vasim_68_w_match_404) ,
                .active_state(vasim_68_w_out_404));




/*wire vasim_68_w_out_405;
*/

wire vasim_68_lut_match_405;
wire vasim_68_w_match_405;

    
    
    

LUT_Match_vasim_68_405 #(8) lut_match_vasim_68_405(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_405));


assign vasim_68_w_match_405 = vasim_68_lut_match_405 ;

STE #(.fan_in(2)) vasim_68_ste_405 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_403 }),
                .match(vasim_68_w_match_405) ,
                .active_state(vasim_68_w_out_405));




/*wire vasim_68_w_out_406;
*/

wire vasim_68_lut_match_406;
wire vasim_68_w_match_406;

    
    
    

LUT_Match_vasim_68_406 #(8) lut_match_vasim_68_406(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_406));


assign vasim_68_w_match_406 = vasim_68_lut_match_406 ;

STE #(.fan_in(1)) vasim_68_ste_406 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_405 }),
                .match(vasim_68_w_match_406) ,
                .active_state(vasim_68_w_out_406));




/*wire vasim_68_w_out_407;
*/

wire vasim_68_lut_match_407;
wire vasim_68_w_match_407;

    
    
    

LUT_Match_vasim_68_407 #(8) lut_match_vasim_68_407(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_407));


assign vasim_68_w_match_407 = vasim_68_lut_match_407 ;

STE #(.fan_in(2)) vasim_68_ste_407 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_406 }),
                .match(vasim_68_w_match_407) ,
                .active_state(vasim_68_w_out_407));




/*wire vasim_68_w_out_408;
*/

wire vasim_68_lut_match_408;
wire vasim_68_w_match_408;

    
    
    

LUT_Match_vasim_68_408 #(8) lut_match_vasim_68_408(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_408));


assign vasim_68_w_match_408 = vasim_68_lut_match_408 ;

STE #(.fan_in(1)) vasim_68_ste_408 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_407 }),
                .match(vasim_68_w_match_408) ,
                .active_state(vasim_68_w_out_408));




/*wire vasim_68_w_out_409;
*/

wire vasim_68_lut_match_409;
wire vasim_68_w_match_409;

    
    
    

LUT_Match_vasim_68_409 #(8) lut_match_vasim_68_409(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_409));


assign vasim_68_w_match_409 = vasim_68_lut_match_409 ;

STE #(.fan_in(2)) vasim_68_ste_409 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_408, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_409) ,
                .active_state(vasim_68_w_out_409));




/*wire vasim_68_w_out_410;
*/

wire vasim_68_lut_match_410;
wire vasim_68_w_match_410;

    
    
    

LUT_Match_vasim_68_410 #(8) lut_match_vasim_68_410(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_410));


assign vasim_68_w_match_410 = vasim_68_lut_match_410 ;

STE #(.fan_in(1)) vasim_68_ste_410 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_409 }),
                .match(vasim_68_w_match_410) ,
                .active_state(vasim_68_w_out_410));




/*wire vasim_68_w_out_411;
*/

wire vasim_68_lut_match_411;
wire vasim_68_w_match_411;

    
    
    

LUT_Match_vasim_68_411 #(8) lut_match_vasim_68_411(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_411));


assign vasim_68_w_match_411 = vasim_68_lut_match_411 ;

STE #(.fan_in(2)) vasim_68_ste_411 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_410 }),
                .match(vasim_68_w_match_411) ,
                .active_state(vasim_68_w_out_411));




/*wire vasim_68_w_out_412;
*/

wire vasim_68_lut_match_412;
wire vasim_68_w_match_412;

    
    
    

LUT_Match_vasim_68_412 #(8) lut_match_vasim_68_412(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_412));


assign vasim_68_w_match_412 = vasim_68_lut_match_412 ;

STE #(.fan_in(1)) vasim_68_ste_412 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_411 }),
                .match(vasim_68_w_match_412) ,
                .active_state(vasim_68_w_out_412));




/*wire vasim_68_w_out_413;
*/

wire vasim_68_lut_match_413;
wire vasim_68_w_match_413;

    
    
    

LUT_Match_vasim_68_413 #(8) lut_match_vasim_68_413(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_413));


assign vasim_68_w_match_413 = vasim_68_lut_match_413 ;

STE #(.fan_in(2)) vasim_68_ste_413 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_412 }),
                .match(vasim_68_w_match_413) ,
                .active_state(vasim_68_w_out_413));




/*wire vasim_68_w_out_414;
*/

wire vasim_68_lut_match_414;
wire vasim_68_w_match_414;

    
    
    

LUT_Match_vasim_68_414 #(8) lut_match_vasim_68_414(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_414));


assign vasim_68_w_match_414 = vasim_68_lut_match_414 ;

STE #(.fan_in(1)) vasim_68_ste_414 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_413 }),
                .match(vasim_68_w_match_414) ,
                .active_state(vasim_68_w_out_414));




/*wire vasim_68_w_out_415;
*/

wire vasim_68_lut_match_415;
wire vasim_68_w_match_415;

    
    
    
            

LUT_Match_vasim_68_415 #(8) lut_match_vasim_68_415(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_415));


assign vasim_68_w_match_415 = vasim_68_lut_match_415 ;

STE #(.fan_in(1),.START_TYPE(2)) vasim_68_ste_415 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ all_input }),
                .match(vasim_68_w_match_415) ,
                .active_state(vasim_68_w_out_415));




/*wire vasim_68_w_out_416;
*/

wire vasim_68_lut_match_416;
wire vasim_68_w_match_416;

    
    
    

LUT_Match_vasim_68_416 #(8) lut_match_vasim_68_416(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_416));


assign vasim_68_w_match_416 = vasim_68_lut_match_416 ;

STE #(.fan_in(2)) vasim_68_ste_416 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_404 }),
                .match(vasim_68_w_match_416) ,
                .active_state(vasim_68_w_out_416));




/*wire vasim_68_w_out_417;
*/

wire vasim_68_lut_match_417;
wire vasim_68_w_match_417;

    
    
    

LUT_Match_vasim_68_417 #(8) lut_match_vasim_68_417(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_417));


assign vasim_68_w_match_417 = vasim_68_lut_match_417 ;

STE #(.fan_in(2)) vasim_68_ste_417 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_414 }),
                .match(vasim_68_w_match_417) ,
                .active_state(vasim_68_w_out_417));




/*wire vasim_68_w_out_418;
*/

wire vasim_68_lut_match_418;
wire vasim_68_w_match_418;

    
    
    

LUT_Match_vasim_68_418 #(8) lut_match_vasim_68_418(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_418));


assign vasim_68_w_match_418 = vasim_68_lut_match_418 ;

STE #(.fan_in(1)) vasim_68_ste_418 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_417 }),
                .match(vasim_68_w_match_418) ,
                .active_state(vasim_68_w_out_418));




/*wire vasim_68_w_out_419;
*/

wire vasim_68_lut_match_419;
wire vasim_68_w_match_419;

    
    
    

LUT_Match_vasim_68_419 #(8) lut_match_vasim_68_419(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_419));


assign vasim_68_w_match_419 = vasim_68_lut_match_419 ;

STE #(.fan_in(2)) vasim_68_ste_419 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_418 }),
                .match(vasim_68_w_match_419) ,
                .active_state(vasim_68_w_out_419));




/*wire vasim_68_w_out_420;
*/

wire vasim_68_lut_match_420;
wire vasim_68_w_match_420;

    
    
    

LUT_Match_vasim_68_420 #(8) lut_match_vasim_68_420(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_420));


assign vasim_68_w_match_420 = vasim_68_lut_match_420 ;

STE #(.fan_in(1)) vasim_68_ste_420 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_419 }),
                .match(vasim_68_w_match_420) ,
                .active_state(vasim_68_w_out_420));




/*wire vasim_68_w_out_421;
*/

wire vasim_68_lut_match_421;
wire vasim_68_w_match_421;

    
    
    

LUT_Match_vasim_68_421 #(8) lut_match_vasim_68_421(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_421));


assign vasim_68_w_match_421 = vasim_68_lut_match_421 ;

STE #(.fan_in(2)) vasim_68_ste_421 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_420 }),
                .match(vasim_68_w_match_421) ,
                .active_state(vasim_68_w_out_421));




/*wire vasim_68_w_out_422;
*/

wire vasim_68_lut_match_422;
wire vasim_68_w_match_422;

    
    
    

LUT_Match_vasim_68_422 #(8) lut_match_vasim_68_422(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_422));


assign vasim_68_w_match_422 = vasim_68_lut_match_422 ;

STE #(.fan_in(1)) vasim_68_ste_422 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_421 }),
                .match(vasim_68_w_match_422) ,
                .active_state(vasim_68_w_out_422));




/*wire vasim_68_w_out_423;
*/

wire vasim_68_lut_match_423;
wire vasim_68_w_match_423;

    
    
    

LUT_Match_vasim_68_423 #(8) lut_match_vasim_68_423(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_423));


assign vasim_68_w_match_423 = vasim_68_lut_match_423 ;

STE #(.fan_in(2)) vasim_68_ste_423 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_422 }),
                .match(vasim_68_w_match_423) ,
                .active_state(vasim_68_w_out_423));




/*wire vasim_68_w_out_424;
*/

wire vasim_68_lut_match_424;
wire vasim_68_w_match_424;

    
    
    

LUT_Match_vasim_68_424 #(8) lut_match_vasim_68_424(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_424));


assign vasim_68_w_match_424 = vasim_68_lut_match_424 ;

STE #(.fan_in(1)) vasim_68_ste_424 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_423 }),
                .match(vasim_68_w_match_424) ,
                .active_state(vasim_68_w_out_424));




/*wire vasim_68_w_out_425;
*/

wire vasim_68_lut_match_425;
wire vasim_68_w_match_425;

    
    
    

LUT_Match_vasim_68_425 #(8) lut_match_vasim_68_425(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_425));


assign vasim_68_w_match_425 = vasim_68_lut_match_425 ;

STE #(.fan_in(2)) vasim_68_ste_425 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_424, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_425) ,
                .active_state(vasim_68_w_out_425));




/*wire vasim_68_w_out_426;
*/

wire vasim_68_lut_match_426;
wire vasim_68_w_match_426;

    
    
    

LUT_Match_vasim_68_426 #(8) lut_match_vasim_68_426(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_426));


assign vasim_68_w_match_426 = vasim_68_lut_match_426 ;

STE #(.fan_in(1)) vasim_68_ste_426 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_425 }),
                .match(vasim_68_w_match_426) ,
                .active_state(vasim_68_w_out_426));




/*wire vasim_68_w_out_427;
*/

wire vasim_68_lut_match_427;
wire vasim_68_w_match_427;

    
    
    

LUT_Match_vasim_68_427 #(8) lut_match_vasim_68_427(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_427));


assign vasim_68_w_match_427 = vasim_68_lut_match_427 ;

STE #(.fan_in(1)) vasim_68_ste_427 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_416 }),
                .match(vasim_68_w_match_427) ,
                .active_state(vasim_68_w_out_427));




/*wire vasim_68_w_out_428;
*/

wire vasim_68_lut_match_428;
wire vasim_68_w_match_428;

    
    
    

LUT_Match_vasim_68_428 #(8) lut_match_vasim_68_428(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_428));


assign vasim_68_w_match_428 = vasim_68_lut_match_428 ;

STE #(.fan_in(2)) vasim_68_ste_428 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_426 }),
                .match(vasim_68_w_match_428) ,
                .active_state(vasim_68_w_out_428));




/*wire vasim_68_w_out_429;
*/

wire vasim_68_lut_match_429;
wire vasim_68_w_match_429;

    
    
    

LUT_Match_vasim_68_429 #(8) lut_match_vasim_68_429(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_429));


assign vasim_68_w_match_429 = vasim_68_lut_match_429 ;

STE #(.fan_in(1)) vasim_68_ste_429 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_428 }),
                .match(vasim_68_w_match_429) ,
                .active_state(vasim_68_w_out_429));




/*wire vasim_68_w_out_430;
*/

wire vasim_68_lut_match_430;
wire vasim_68_w_match_430;

    
    
    

LUT_Match_vasim_68_430 #(8) lut_match_vasim_68_430(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_430));


assign vasim_68_w_match_430 = vasim_68_lut_match_430 ;

STE #(.fan_in(2)) vasim_68_ste_430 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_429 }),
                .match(vasim_68_w_match_430) ,
                .active_state(vasim_68_w_out_430));




/*wire vasim_68_w_out_431;
*/

wire vasim_68_lut_match_431;
wire vasim_68_w_match_431;

    
    
    

LUT_Match_vasim_68_431 #(8) lut_match_vasim_68_431(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_431));


assign vasim_68_w_match_431 = vasim_68_lut_match_431 ;

STE #(.fan_in(1)) vasim_68_ste_431 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_430 }),
                .match(vasim_68_w_match_431) ,
                .active_state(vasim_68_w_out_431));




/*wire vasim_68_w_out_432;
*/

wire vasim_68_lut_match_432;
wire vasim_68_w_match_432;

    
    
    

LUT_Match_vasim_68_432 #(8) lut_match_vasim_68_432(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_432));


assign vasim_68_w_match_432 = vasim_68_lut_match_432 ;

STE #(.fan_in(2)) vasim_68_ste_432 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_431 }),
                .match(vasim_68_w_match_432) ,
                .active_state(vasim_68_w_out_432));




/*wire vasim_68_w_out_433;
*/

wire vasim_68_lut_match_433;
wire vasim_68_w_match_433;

    
    
    

LUT_Match_vasim_68_433 #(8) lut_match_vasim_68_433(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_433));


assign vasim_68_w_match_433 = vasim_68_lut_match_433 ;

STE #(.fan_in(1)) vasim_68_ste_433 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_432 }),
                .match(vasim_68_w_match_433) ,
                .active_state(vasim_68_w_out_433));




/*wire vasim_68_w_out_434;
*/

wire vasim_68_lut_match_434;
wire vasim_68_w_match_434;

    
    
    

LUT_Match_vasim_68_434 #(8) lut_match_vasim_68_434(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_434));


assign vasim_68_w_match_434 = vasim_68_lut_match_434 ;

STE #(.fan_in(2)) vasim_68_ste_434 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_433, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_434) ,
                .active_state(vasim_68_w_out_434));




/*wire vasim_68_w_out_435;
*/

wire vasim_68_lut_match_435;
wire vasim_68_w_match_435;

    
    
    

LUT_Match_vasim_68_435 #(8) lut_match_vasim_68_435(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_435));


assign vasim_68_w_match_435 = vasim_68_lut_match_435 ;

STE #(.fan_in(1)) vasim_68_ste_435 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_434 }),
                .match(vasim_68_w_match_435) ,
                .active_state(vasim_68_w_out_435));




/*wire vasim_68_w_out_436;
*/

wire vasim_68_lut_match_436;
wire vasim_68_w_match_436;

    
    
    

LUT_Match_vasim_68_436 #(8) lut_match_vasim_68_436(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_436));


assign vasim_68_w_match_436 = vasim_68_lut_match_436 ;

STE #(.fan_in(2)) vasim_68_ste_436 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_435 }),
                .match(vasim_68_w_match_436) ,
                .active_state(vasim_68_w_out_436));




/*wire vasim_68_w_out_437;
*/

wire vasim_68_lut_match_437;
wire vasim_68_w_match_437;

    
    
    

LUT_Match_vasim_68_437 #(8) lut_match_vasim_68_437(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_437));


assign vasim_68_w_match_437 = vasim_68_lut_match_437 ;

STE #(.fan_in(1)) vasim_68_ste_437 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_436 }),
                .match(vasim_68_w_match_437) ,
                .active_state(vasim_68_w_out_437));




/*wire vasim_68_w_out_438;
*/

wire vasim_68_lut_match_438;
wire vasim_68_w_match_438;

    
    
    

LUT_Match_vasim_68_438 #(8) lut_match_vasim_68_438(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_438));


assign vasim_68_w_match_438 = vasim_68_lut_match_438 ;

STE #(.fan_in(2)) vasim_68_ste_438 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_427 }),
                .match(vasim_68_w_match_438) ,
                .active_state(vasim_68_w_out_438));




/*wire vasim_68_w_out_439;
*/

wire vasim_68_lut_match_439;
wire vasim_68_w_match_439;

    
    
    

LUT_Match_vasim_68_439 #(8) lut_match_vasim_68_439(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_439));


assign vasim_68_w_match_439 = vasim_68_lut_match_439 ;

STE #(.fan_in(2)) vasim_68_ste_439 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_437 }),
                .match(vasim_68_w_match_439) ,
                .active_state(vasim_68_w_out_439));




/*wire vasim_68_w_out_440;
*/

wire vasim_68_lut_match_440;
wire vasim_68_w_match_440;

    
    
    

LUT_Match_vasim_68_440 #(8) lut_match_vasim_68_440(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_440));


assign vasim_68_w_match_440 = vasim_68_lut_match_440 ;

STE #(.fan_in(1)) vasim_68_ste_440 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_439 }),
                .match(vasim_68_w_match_440) ,
                .active_state(vasim_68_w_out_440));




/*wire vasim_68_w_out_441;
*/

wire vasim_68_lut_match_441;
wire vasim_68_w_match_441;

    
    
    

LUT_Match_vasim_68_441 #(8) lut_match_vasim_68_441(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_441));


assign vasim_68_w_match_441 = vasim_68_lut_match_441 ;

STE #(.fan_in(2)) vasim_68_ste_441 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_440, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_441) ,
                .active_state(vasim_68_w_out_441));




/*wire vasim_68_w_out_442;
*/

wire vasim_68_lut_match_442;
wire vasim_68_w_match_442;

    
    
    

LUT_Match_vasim_68_442 #(8) lut_match_vasim_68_442(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_442));


assign vasim_68_w_match_442 = vasim_68_lut_match_442 ;

STE #(.fan_in(1)) vasim_68_ste_442 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_441 }),
                .match(vasim_68_w_match_442) ,
                .active_state(vasim_68_w_out_442));




/*wire vasim_68_w_out_443;
*/

wire vasim_68_lut_match_443;
wire vasim_68_w_match_443;

    
    
    

LUT_Match_vasim_68_443 #(8) lut_match_vasim_68_443(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_443));


assign vasim_68_w_match_443 = vasim_68_lut_match_443 ;

STE #(.fan_in(2)) vasim_68_ste_443 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_442 }),
                .match(vasim_68_w_match_443) ,
                .active_state(vasim_68_w_out_443));




/*wire vasim_68_w_out_444;
*/

wire vasim_68_lut_match_444;
wire vasim_68_w_match_444;

    
    
    

LUT_Match_vasim_68_444 #(8) lut_match_vasim_68_444(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_444));


assign vasim_68_w_match_444 = vasim_68_lut_match_444 ;

STE #(.fan_in(1)) vasim_68_ste_444 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_443 }),
                .match(vasim_68_w_match_444) ,
                .active_state(vasim_68_w_out_444));




/*wire vasim_68_w_out_445;
*/

wire vasim_68_lut_match_445;
wire vasim_68_w_match_445;

    
    
    

LUT_Match_vasim_68_445 #(8) lut_match_vasim_68_445(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_445));


assign vasim_68_w_match_445 = vasim_68_lut_match_445 ;

STE #(.fan_in(2)) vasim_68_ste_445 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_444 }),
                .match(vasim_68_w_match_445) ,
                .active_state(vasim_68_w_out_445));




/*wire vasim_68_w_out_446;
*/

wire vasim_68_lut_match_446;
wire vasim_68_w_match_446;

    
    
    

LUT_Match_vasim_68_446 #(8) lut_match_vasim_68_446(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_446));


assign vasim_68_w_match_446 = vasim_68_lut_match_446 ;

STE #(.fan_in(1)) vasim_68_ste_446 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_445 }),
                .match(vasim_68_w_match_446) ,
                .active_state(vasim_68_w_out_446));




/*wire vasim_68_w_out_447;
*/

wire vasim_68_lut_match_447;
wire vasim_68_w_match_447;

    
    
    

LUT_Match_vasim_68_447 #(8) lut_match_vasim_68_447(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_447));


assign vasim_68_w_match_447 = vasim_68_lut_match_447 ;

STE #(.fan_in(2)) vasim_68_ste_447 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_446 }),
                .match(vasim_68_w_match_447) ,
                .active_state(vasim_68_w_out_447));




/*wire vasim_68_w_out_448;
*/

wire vasim_68_lut_match_448;
wire vasim_68_w_match_448;

    
    
    

LUT_Match_vasim_68_448 #(8) lut_match_vasim_68_448(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_448));


assign vasim_68_w_match_448 = vasim_68_lut_match_448 ;

STE #(.fan_in(1)) vasim_68_ste_448 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_447 }),
                .match(vasim_68_w_match_448) ,
                .active_state(vasim_68_w_out_448));




/*wire vasim_68_w_out_449;
*/

wire vasim_68_lut_match_449;
wire vasim_68_w_match_449;

    
    
    

LUT_Match_vasim_68_449 #(8) lut_match_vasim_68_449(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_449));


assign vasim_68_w_match_449 = vasim_68_lut_match_449 ;

STE #(.fan_in(1)) vasim_68_ste_449 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_438 }),
                .match(vasim_68_w_match_449) ,
                .active_state(vasim_68_w_out_449));




/*wire vasim_68_w_out_450;
*/

wire vasim_68_lut_match_450;
wire vasim_68_w_match_450;

    
    
    

LUT_Match_vasim_68_450 #(8) lut_match_vasim_68_450(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_450));


assign vasim_68_w_match_450 = vasim_68_lut_match_450 ;

STE #(.fan_in(2)) vasim_68_ste_450 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_448, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_450) ,
                .active_state(vasim_68_w_out_450));




/*wire vasim_68_w_out_451;
*/

wire vasim_68_lut_match_451;
wire vasim_68_w_match_451;

    
    
    

LUT_Match_vasim_68_451 #(8) lut_match_vasim_68_451(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_451));


assign vasim_68_w_match_451 = vasim_68_lut_match_451 ;

STE #(.fan_in(1)) vasim_68_ste_451 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_450 }),
                .match(vasim_68_w_match_451) ,
                .active_state(vasim_68_w_out_451));




/*wire vasim_68_w_out_452;
*/

wire vasim_68_lut_match_452;
wire vasim_68_w_match_452;

    
    
    

LUT_Match_vasim_68_452 #(8) lut_match_vasim_68_452(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_452));


assign vasim_68_w_match_452 = vasim_68_lut_match_452 ;

STE #(.fan_in(2)) vasim_68_ste_452 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_451 }),
                .match(vasim_68_w_match_452) ,
                .active_state(vasim_68_w_out_452));




/*wire vasim_68_w_out_453;
*/

wire vasim_68_lut_match_453;
wire vasim_68_w_match_453;

    
    
    

LUT_Match_vasim_68_453 #(8) lut_match_vasim_68_453(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_453));


assign vasim_68_w_match_453 = vasim_68_lut_match_453 ;

STE #(.fan_in(1)) vasim_68_ste_453 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_452 }),
                .match(vasim_68_w_match_453) ,
                .active_state(vasim_68_w_out_453));




/*wire vasim_68_w_out_454;
*/

wire vasim_68_lut_match_454;
wire vasim_68_w_match_454;

    
    
    

LUT_Match_vasim_68_454 #(8) lut_match_vasim_68_454(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_454));


assign vasim_68_w_match_454 = vasim_68_lut_match_454 ;

STE #(.fan_in(2)) vasim_68_ste_454 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_453 }),
                .match(vasim_68_w_match_454) ,
                .active_state(vasim_68_w_out_454));




/*wire vasim_68_w_out_455;
*/

wire vasim_68_lut_match_455;
wire vasim_68_w_match_455;

    
    
    

LUT_Match_vasim_68_455 #(8) lut_match_vasim_68_455(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_455));


assign vasim_68_w_match_455 = vasim_68_lut_match_455 ;

STE #(.fan_in(1)) vasim_68_ste_455 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_454 }),
                .match(vasim_68_w_match_455) ,
                .active_state(vasim_68_w_out_455));




/*wire vasim_68_w_out_456;
*/

wire vasim_68_lut_match_456;
wire vasim_68_w_match_456;

    
    
    

LUT_Match_vasim_68_456 #(8) lut_match_vasim_68_456(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_456));


assign vasim_68_w_match_456 = vasim_68_lut_match_456 ;

STE #(.fan_in(2)) vasim_68_ste_456 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_455 }),
                .match(vasim_68_w_match_456) ,
                .active_state(vasim_68_w_out_456));




/*wire vasim_68_w_out_457;
*/

wire vasim_68_lut_match_457;
wire vasim_68_w_match_457;

    
    
    

LUT_Match_vasim_68_457 #(8) lut_match_vasim_68_457(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_457));


assign vasim_68_w_match_457 = vasim_68_lut_match_457 ;

STE #(.fan_in(1)) vasim_68_ste_457 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_456 }),
                .match(vasim_68_w_match_457) ,
                .active_state(vasim_68_w_out_457));




/*wire vasim_68_w_out_458;
*/

wire vasim_68_lut_match_458;
wire vasim_68_w_match_458;

    
    
    

LUT_Match_vasim_68_458 #(8) lut_match_vasim_68_458(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_458));


assign vasim_68_w_match_458 = vasim_68_lut_match_458 ;

STE #(.fan_in(2)) vasim_68_ste_458 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_457, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_458) ,
                .active_state(vasim_68_w_out_458));




/*wire vasim_68_w_out_459;
*/

wire vasim_68_lut_match_459;
wire vasim_68_w_match_459;

    
    
    

LUT_Match_vasim_68_459 #(8) lut_match_vasim_68_459(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_459));


assign vasim_68_w_match_459 = vasim_68_lut_match_459 ;

STE #(.fan_in(1)) vasim_68_ste_459 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_458 }),
                .match(vasim_68_w_match_459) ,
                .active_state(vasim_68_w_out_459));




/*wire vasim_68_w_out_460;
*/

wire vasim_68_lut_match_460;
wire vasim_68_w_match_460;

    
    
    

LUT_Match_vasim_68_460 #(8) lut_match_vasim_68_460(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_460));


assign vasim_68_w_match_460 = vasim_68_lut_match_460 ;

STE #(.fan_in(2)) vasim_68_ste_460 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_449, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_460) ,
                .active_state(vasim_68_w_out_460));




/*wire vasim_68_w_out_461;
*/

wire vasim_68_lut_match_461;
wire vasim_68_w_match_461;

    
    
    

LUT_Match_vasim_68_461 #(8) lut_match_vasim_68_461(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_461));


assign vasim_68_w_match_461 = vasim_68_lut_match_461 ;

STE #(.fan_in(2)) vasim_68_ste_461 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_459 }),
                .match(vasim_68_w_match_461) ,
                .active_state(vasim_68_w_out_461));




/*wire vasim_68_w_out_462;
*/

wire vasim_68_lut_match_462;
wire vasim_68_w_match_462;

    
    
    

LUT_Match_vasim_68_462 #(8) lut_match_vasim_68_462(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_462));


assign vasim_68_w_match_462 = vasim_68_lut_match_462 ;

STE #(.fan_in(1)) vasim_68_ste_462 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_461 }),
                .match(vasim_68_w_match_462) ,
                .active_state(vasim_68_w_out_462));




/*wire vasim_68_w_out_463;
*/

wire vasim_68_lut_match_463;
wire vasim_68_w_match_463;

    
    
    

LUT_Match_vasim_68_463 #(8) lut_match_vasim_68_463(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_463));


assign vasim_68_w_match_463 = vasim_68_lut_match_463 ;

STE #(.fan_in(2)) vasim_68_ste_463 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_462 }),
                .match(vasim_68_w_match_463) ,
                .active_state(vasim_68_w_out_463));




/*wire vasim_68_w_out_464;
*/

wire vasim_68_lut_match_464;
wire vasim_68_w_match_464;

    
    
    

LUT_Match_vasim_68_464 #(8) lut_match_vasim_68_464(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_464));


assign vasim_68_w_match_464 = vasim_68_lut_match_464 ;

STE #(.fan_in(1)) vasim_68_ste_464 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_463 }),
                .match(vasim_68_w_match_464) ,
                .active_state(vasim_68_w_out_464));




/*wire vasim_68_w_out_465;
*/

wire vasim_68_lut_match_465;
wire vasim_68_w_match_465;

    
    
    

LUT_Match_vasim_68_465 #(8) lut_match_vasim_68_465(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_465));


assign vasim_68_w_match_465 = vasim_68_lut_match_465 ;

STE #(.fan_in(2)) vasim_68_ste_465 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_464, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_465) ,
                .active_state(vasim_68_w_out_465));




/*wire vasim_68_w_out_466;
*/

wire vasim_68_lut_match_466;
wire vasim_68_w_match_466;

    
    
    

LUT_Match_vasim_68_466 #(8) lut_match_vasim_68_466(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_466));


assign vasim_68_w_match_466 = vasim_68_lut_match_466 ;

STE #(.fan_in(1)) vasim_68_ste_466 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_465 }),
                .match(vasim_68_w_match_466) ,
                .active_state(vasim_68_w_out_466));




/*wire vasim_68_w_out_467;
*/

wire vasim_68_lut_match_467;
wire vasim_68_w_match_467;

    
    
    

LUT_Match_vasim_68_467 #(8) lut_match_vasim_68_467(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_467));


assign vasim_68_w_match_467 = vasim_68_lut_match_467 ;

STE #(.fan_in(2)) vasim_68_ste_467 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_466 }),
                .match(vasim_68_w_match_467) ,
                .active_state(vasim_68_w_out_467));




/*wire vasim_68_w_out_468;
*/

wire vasim_68_lut_match_468;
wire vasim_68_w_match_468;

    
    
    

LUT_Match_vasim_68_468 #(8) lut_match_vasim_68_468(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_468));


assign vasim_68_w_match_468 = vasim_68_lut_match_468 ;

STE #(.fan_in(1)) vasim_68_ste_468 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_467 }),
                .match(vasim_68_w_match_468) ,
                .active_state(vasim_68_w_out_468));




/*wire vasim_68_w_out_469;
*/

wire vasim_68_lut_match_469;
wire vasim_68_w_match_469;

    
    
    

LUT_Match_vasim_68_469 #(8) lut_match_vasim_68_469(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_469));


assign vasim_68_w_match_469 = vasim_68_lut_match_469 ;

STE #(.fan_in(2)) vasim_68_ste_469 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_468 }),
                .match(vasim_68_w_match_469) ,
                .active_state(vasim_68_w_out_469));




/*wire vasim_68_w_out_470;
*/

wire vasim_68_lut_match_470;
wire vasim_68_w_match_470;

    
    
    

LUT_Match_vasim_68_470 #(8) lut_match_vasim_68_470(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_470));


assign vasim_68_w_match_470 = vasim_68_lut_match_470 ;

STE #(.fan_in(1)) vasim_68_ste_470 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_469 }),
                .match(vasim_68_w_match_470) ,
                .active_state(vasim_68_w_out_470));




/*wire vasim_68_w_out_471;
*/

wire vasim_68_lut_match_471;
wire vasim_68_w_match_471;

    
    
    

LUT_Match_vasim_68_471 #(8) lut_match_vasim_68_471(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_471));


assign vasim_68_w_match_471 = vasim_68_lut_match_471 ;

STE #(.fan_in(1)) vasim_68_ste_471 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_460 }),
                .match(vasim_68_w_match_471) ,
                .active_state(vasim_68_w_out_471));




/*wire vasim_68_w_out_472;
*/

wire vasim_68_lut_match_472;
wire vasim_68_w_match_472;

    
    
    

LUT_Match_vasim_68_472 #(8) lut_match_vasim_68_472(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_472));


assign vasim_68_w_match_472 = vasim_68_lut_match_472 ;

STE #(.fan_in(2)) vasim_68_ste_472 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_470 }),
                .match(vasim_68_w_match_472) ,
                .active_state(vasim_68_w_out_472));




/*wire vasim_68_w_out_473;
*/

wire vasim_68_lut_match_473;
wire vasim_68_w_match_473;

    
    
    

LUT_Match_vasim_68_473 #(8) lut_match_vasim_68_473(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_473));


assign vasim_68_w_match_473 = vasim_68_lut_match_473 ;

STE #(.fan_in(1)) vasim_68_ste_473 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_472 }),
                .match(vasim_68_w_match_473) ,
                .active_state(vasim_68_w_out_473));




/*wire vasim_68_w_out_474;
*/

wire vasim_68_lut_match_474;
wire vasim_68_w_match_474;

    
    
    

LUT_Match_vasim_68_474 #(8) lut_match_vasim_68_474(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_474));


assign vasim_68_w_match_474 = vasim_68_lut_match_474 ;

STE #(.fan_in(2)) vasim_68_ste_474 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_473, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_474) ,
                .active_state(vasim_68_w_out_474));




/*wire vasim_68_w_out_475;
*/

wire vasim_68_lut_match_475;
wire vasim_68_w_match_475;

    
    
    

LUT_Match_vasim_68_475 #(8) lut_match_vasim_68_475(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_475));


assign vasim_68_w_match_475 = vasim_68_lut_match_475 ;

STE #(.fan_in(1)) vasim_68_ste_475 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_474 }),
                .match(vasim_68_w_match_475) ,
                .active_state(vasim_68_w_out_475));




/*wire vasim_68_w_out_476;
*/

wire vasim_68_lut_match_476;
wire vasim_68_w_match_476;

    
    
    

LUT_Match_vasim_68_476 #(8) lut_match_vasim_68_476(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_476));


assign vasim_68_w_match_476 = vasim_68_lut_match_476 ;

STE #(.fan_in(2)) vasim_68_ste_476 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_475 }),
                .match(vasim_68_w_match_476) ,
                .active_state(vasim_68_w_out_476));




/*wire vasim_68_w_out_477;
*/

wire vasim_68_lut_match_477;
wire vasim_68_w_match_477;

    
    
    

LUT_Match_vasim_68_477 #(8) lut_match_vasim_68_477(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_477));


assign vasim_68_w_match_477 = vasim_68_lut_match_477 ;

STE #(.fan_in(1)) vasim_68_ste_477 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_476 }),
                .match(vasim_68_w_match_477) ,
                .active_state(vasim_68_w_out_477));




/*wire vasim_68_w_out_478;
*/

wire vasim_68_lut_match_478;
wire vasim_68_w_match_478;

    
    
    

LUT_Match_vasim_68_478 #(8) lut_match_vasim_68_478(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_478));


assign vasim_68_w_match_478 = vasim_68_lut_match_478 ;

STE #(.fan_in(2)) vasim_68_ste_478 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_477 }),
                .match(vasim_68_w_match_478) ,
                .active_state(vasim_68_w_out_478));




/*wire vasim_68_w_out_479;
*/

wire vasim_68_lut_match_479;
wire vasim_68_w_match_479;

    
    
    

LUT_Match_vasim_68_479 #(8) lut_match_vasim_68_479(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_479));


assign vasim_68_w_match_479 = vasim_68_lut_match_479 ;

STE #(.fan_in(1)) vasim_68_ste_479 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_478 }),
                .match(vasim_68_w_match_479) ,
                .active_state(vasim_68_w_out_479));




/*wire vasim_68_w_out_480;
*/

wire vasim_68_lut_match_480;
wire vasim_68_w_match_480;

    
    
    

LUT_Match_vasim_68_480 #(8) lut_match_vasim_68_480(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_480));


assign vasim_68_w_match_480 = vasim_68_lut_match_480 ;

STE #(.fan_in(2)) vasim_68_ste_480 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_479 }),
                .match(vasim_68_w_match_480) ,
                .active_state(vasim_68_w_out_480));




/*wire vasim_68_w_out_481;
*/

wire vasim_68_lut_match_481;
wire vasim_68_w_match_481;

    
    
    

LUT_Match_vasim_68_481 #(8) lut_match_vasim_68_481(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_481));


assign vasim_68_w_match_481 = vasim_68_lut_match_481 ;

STE #(.fan_in(1)) vasim_68_ste_481 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_480 }),
                .match(vasim_68_w_match_481) ,
                .active_state(vasim_68_w_out_481));




/*wire vasim_68_w_out_482;
*/

wire vasim_68_lut_match_482;
wire vasim_68_w_match_482;

    
    
    

LUT_Match_vasim_68_482 #(8) lut_match_vasim_68_482(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_482));


assign vasim_68_w_match_482 = vasim_68_lut_match_482 ;

STE #(.fan_in(2)) vasim_68_ste_482 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_471 }),
                .match(vasim_68_w_match_482) ,
                .active_state(vasim_68_w_out_482));




/*wire vasim_68_w_out_483;
*/

wire vasim_68_lut_match_483;
wire vasim_68_w_match_483;

    
    
    

LUT_Match_vasim_68_483 #(8) lut_match_vasim_68_483(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_483));


assign vasim_68_w_match_483 = vasim_68_lut_match_483 ;

STE #(.fan_in(2)) vasim_68_ste_483 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_481, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_483) ,
                .active_state(vasim_68_w_out_483));




/*wire vasim_68_w_out_484;
*/

wire vasim_68_lut_match_484;
wire vasim_68_w_match_484;

    
    
    

LUT_Match_vasim_68_484 #(8) lut_match_vasim_68_484(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_484));


assign vasim_68_w_match_484 = vasim_68_lut_match_484 ;

STE #(.fan_in(1)) vasim_68_ste_484 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_483 }),
                .match(vasim_68_w_match_484) ,
                .active_state(vasim_68_w_out_484));




/*wire vasim_68_w_out_485;
*/

wire vasim_68_lut_match_485;
wire vasim_68_w_match_485;

    
    
    

LUT_Match_vasim_68_485 #(8) lut_match_vasim_68_485(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_485));


assign vasim_68_w_match_485 = vasim_68_lut_match_485 ;

STE #(.fan_in(2)) vasim_68_ste_485 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_484 }),
                .match(vasim_68_w_match_485) ,
                .active_state(vasim_68_w_out_485));




/*wire vasim_68_w_out_486;
*/

wire vasim_68_lut_match_486;
wire vasim_68_w_match_486;

    
    
    

LUT_Match_vasim_68_486 #(8) lut_match_vasim_68_486(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_486));


assign vasim_68_w_match_486 = vasim_68_lut_match_486 ;

STE #(.fan_in(1)) vasim_68_ste_486 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_485 }),
                .match(vasim_68_w_match_486) ,
                .active_state(vasim_68_w_out_486));




/*wire vasim_68_w_out_487;
*/

wire vasim_68_lut_match_487;
wire vasim_68_w_match_487;

    
    
    

LUT_Match_vasim_68_487 #(8) lut_match_vasim_68_487(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_487));


assign vasim_68_w_match_487 = vasim_68_lut_match_487 ;

STE #(.fan_in(2)) vasim_68_ste_487 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_486 }),
                .match(vasim_68_w_match_487) ,
                .active_state(vasim_68_w_out_487));




/*wire vasim_68_w_out_488;
*/

wire vasim_68_lut_match_488;
wire vasim_68_w_match_488;

    
    
    

LUT_Match_vasim_68_488 #(8) lut_match_vasim_68_488(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_488));


assign vasim_68_w_match_488 = vasim_68_lut_match_488 ;

STE #(.fan_in(1)) vasim_68_ste_488 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_487 }),
                .match(vasim_68_w_match_488) ,
                .active_state(vasim_68_w_out_488));




/*wire vasim_68_w_out_489;
*/

wire vasim_68_lut_match_489;
wire vasim_68_w_match_489;

    
    
    

LUT_Match_vasim_68_489 #(8) lut_match_vasim_68_489(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_489));


assign vasim_68_w_match_489 = vasim_68_lut_match_489 ;

STE #(.fan_in(2)) vasim_68_ste_489 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_488, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_489) ,
                .active_state(vasim_68_w_out_489));




/*wire vasim_68_w_out_490;
*/

wire vasim_68_lut_match_490;
wire vasim_68_w_match_490;

    
    
    

LUT_Match_vasim_68_490 #(8) lut_match_vasim_68_490(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_490));


assign vasim_68_w_match_490 = vasim_68_lut_match_490 ;

STE #(.fan_in(1)) vasim_68_ste_490 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_489 }),
                .match(vasim_68_w_match_490) ,
                .active_state(vasim_68_w_out_490));




/*wire vasim_68_w_out_491;
*/

wire vasim_68_lut_match_491;
wire vasim_68_w_match_491;

    
    
    

LUT_Match_vasim_68_491 #(8) lut_match_vasim_68_491(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_491));


assign vasim_68_w_match_491 = vasim_68_lut_match_491 ;

STE #(.fan_in(2)) vasim_68_ste_491 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_490 }),
                .match(vasim_68_w_match_491) ,
                .active_state(vasim_68_w_out_491));




/*wire vasim_68_w_out_492;
*/

wire vasim_68_lut_match_492;
wire vasim_68_w_match_492;

    
    
    

LUT_Match_vasim_68_492 #(8) lut_match_vasim_68_492(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_492));


assign vasim_68_w_match_492 = vasim_68_lut_match_492 ;

STE #(.fan_in(1)) vasim_68_ste_492 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_491 }),
                .match(vasim_68_w_match_492) ,
                .active_state(vasim_68_w_out_492));




/*wire vasim_68_w_out_493;
*/

wire vasim_68_lut_match_493;
wire vasim_68_w_match_493;

    
    
    

LUT_Match_vasim_68_493 #(8) lut_match_vasim_68_493(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_493));


assign vasim_68_w_match_493 = vasim_68_lut_match_493 ;

STE #(.fan_in(1)) vasim_68_ste_493 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_482 }),
                .match(vasim_68_w_match_493) ,
                .active_state(vasim_68_w_out_493));




/*wire vasim_68_w_out_494;
*/

wire vasim_68_lut_match_494;
wire vasim_68_w_match_494;

    
    
    

LUT_Match_vasim_68_494 #(8) lut_match_vasim_68_494(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_494));


assign vasim_68_w_match_494 = vasim_68_lut_match_494 ;

STE #(.fan_in(2)) vasim_68_ste_494 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_492 }),
                .match(vasim_68_w_match_494) ,
                .active_state(vasim_68_w_out_494));




/*wire vasim_68_w_out_495;
*/

wire vasim_68_lut_match_495;
wire vasim_68_w_match_495;

    
    
    

LUT_Match_vasim_68_495 #(8) lut_match_vasim_68_495(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_495));


assign vasim_68_w_match_495 = vasim_68_lut_match_495 ;

STE #(.fan_in(1)) vasim_68_ste_495 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_494 }),
                .match(vasim_68_w_match_495) ,
                .active_state(vasim_68_w_out_495));




/*wire vasim_68_w_out_496;
*/

wire vasim_68_lut_match_496;
wire vasim_68_w_match_496;

    
    
    

LUT_Match_vasim_68_496 #(8) lut_match_vasim_68_496(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_496));


assign vasim_68_w_match_496 = vasim_68_lut_match_496 ;

STE #(.fan_in(2)) vasim_68_ste_496 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_495 }),
                .match(vasim_68_w_match_496) ,
                .active_state(vasim_68_w_out_496));




/*wire vasim_68_w_out_497;
*/

wire vasim_68_lut_match_497;
wire vasim_68_w_match_497;

    
    
    

LUT_Match_vasim_68_497 #(8) lut_match_vasim_68_497(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_497));


assign vasim_68_w_match_497 = vasim_68_lut_match_497 ;

STE #(.fan_in(1)) vasim_68_ste_497 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_496 }),
                .match(vasim_68_w_match_497) ,
                .active_state(vasim_68_w_out_497));




/*wire vasim_68_w_out_498;
*/

wire vasim_68_lut_match_498;
wire vasim_68_w_match_498;

    
    
    

LUT_Match_vasim_68_498 #(8) lut_match_vasim_68_498(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_498));


assign vasim_68_w_match_498 = vasim_68_lut_match_498 ;

STE #(.fan_in(2)) vasim_68_ste_498 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_497, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_498) ,
                .active_state(vasim_68_w_out_498));




/*wire vasim_68_w_out_499;
*/

wire vasim_68_lut_match_499;
wire vasim_68_w_match_499;

    
    
    

LUT_Match_vasim_68_499 #(8) lut_match_vasim_68_499(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_499));


assign vasim_68_w_match_499 = vasim_68_lut_match_499 ;

STE #(.fan_in(1)) vasim_68_ste_499 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_498 }),
                .match(vasim_68_w_match_499) ,
                .active_state(vasim_68_w_out_499));




/*wire vasim_68_w_out_500;
*/

wire vasim_68_lut_match_500;
wire vasim_68_w_match_500;

    
    
    

LUT_Match_vasim_68_500 #(8) lut_match_vasim_68_500(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_500));


assign vasim_68_w_match_500 = vasim_68_lut_match_500 ;

STE #(.fan_in(2)) vasim_68_ste_500 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_499 }),
                .match(vasim_68_w_match_500) ,
                .active_state(vasim_68_w_out_500));




/*wire vasim_68_w_out_501;
*/

wire vasim_68_lut_match_501;
wire vasim_68_w_match_501;

    
    
    

LUT_Match_vasim_68_501 #(8) lut_match_vasim_68_501(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_501));


assign vasim_68_w_match_501 = vasim_68_lut_match_501 ;

STE #(.fan_in(1)) vasim_68_ste_501 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_500 }),
                .match(vasim_68_w_match_501) ,
                .active_state(vasim_68_w_out_501));




/*wire vasim_68_w_out_502;
*/

wire vasim_68_lut_match_502;
wire vasim_68_w_match_502;

    
    
    

LUT_Match_vasim_68_502 #(8) lut_match_vasim_68_502(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_502));


assign vasim_68_w_match_502 = vasim_68_lut_match_502 ;

STE #(.fan_in(2)) vasim_68_ste_502 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_501 }),
                .match(vasim_68_w_match_502) ,
                .active_state(vasim_68_w_out_502));




/*wire vasim_68_w_out_503;
*/

wire vasim_68_lut_match_503;
wire vasim_68_w_match_503;

    
    
    

LUT_Match_vasim_68_503 #(8) lut_match_vasim_68_503(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_503));


assign vasim_68_w_match_503 = vasim_68_lut_match_503 ;

STE #(.fan_in(1)) vasim_68_ste_503 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_502 }),
                .match(vasim_68_w_match_503) ,
                .active_state(vasim_68_w_out_503));




/*wire vasim_68_w_out_504;
*/

wire vasim_68_lut_match_504;
wire vasim_68_w_match_504;

    
    
    

LUT_Match_vasim_68_504 #(8) lut_match_vasim_68_504(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_504));


assign vasim_68_w_match_504 = vasim_68_lut_match_504 ;

STE #(.fan_in(2)) vasim_68_ste_504 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_493 }),
                .match(vasim_68_w_match_504) ,
                .active_state(vasim_68_w_out_504));




/*wire vasim_68_w_out_505;
*/

wire vasim_68_lut_match_505;
wire vasim_68_w_match_505;

    
    
    

LUT_Match_vasim_68_505 #(8) lut_match_vasim_68_505(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_505));


assign vasim_68_w_match_505 = vasim_68_lut_match_505 ;

STE #(.fan_in(2)) vasim_68_ste_505 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_503 }),
                .match(vasim_68_w_match_505) ,
                .active_state(vasim_68_w_out_505));




/*wire vasim_68_w_out_506;
*/

wire vasim_68_lut_match_506;
wire vasim_68_w_match_506;

    
    
    

LUT_Match_vasim_68_506 #(8) lut_match_vasim_68_506(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_506));


assign vasim_68_w_match_506 = vasim_68_lut_match_506 ;

STE #(.fan_in(1)) vasim_68_ste_506 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_505 }),
                .match(vasim_68_w_match_506) ,
                .active_state(vasim_68_w_out_506));




/*wire vasim_68_w_out_507;
*/

wire vasim_68_lut_match_507;
wire vasim_68_w_match_507;

    
    
    

LUT_Match_vasim_68_507 #(8) lut_match_vasim_68_507(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_507));


assign vasim_68_w_match_507 = vasim_68_lut_match_507 ;

STE #(.fan_in(2)) vasim_68_ste_507 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_506 }),
                .match(vasim_68_w_match_507) ,
                .active_state(vasim_68_w_out_507));




/*wire vasim_68_w_out_508;
*/

wire vasim_68_lut_match_508;
wire vasim_68_w_match_508;

    
    
    

LUT_Match_vasim_68_508 #(8) lut_match_vasim_68_508(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_508));


assign vasim_68_w_match_508 = vasim_68_lut_match_508 ;

STE #(.fan_in(1)) vasim_68_ste_508 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_507 }),
                .match(vasim_68_w_match_508) ,
                .active_state(vasim_68_w_out_508));




/*wire vasim_68_w_out_509;
*/

wire vasim_68_lut_match_509;
wire vasim_68_w_match_509;

    
    
    

LUT_Match_vasim_68_509 #(8) lut_match_vasim_68_509(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_509));


assign vasim_68_w_match_509 = vasim_68_lut_match_509 ;

STE #(.fan_in(2)) vasim_68_ste_509 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_508 }),
                .match(vasim_68_w_match_509) ,
                .active_state(vasim_68_w_out_509));




/*wire vasim_68_w_out_510;
*/

wire vasim_68_lut_match_510;
wire vasim_68_w_match_510;

    
    
    

LUT_Match_vasim_68_510 #(8) lut_match_vasim_68_510(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_510));


assign vasim_68_w_match_510 = vasim_68_lut_match_510 ;

STE #(.fan_in(1)) vasim_68_ste_510 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_509 }),
                .match(vasim_68_w_match_510) ,
                .active_state(vasim_68_w_out_510));




/*wire vasim_68_w_out_511;
*/

wire vasim_68_lut_match_511;
wire vasim_68_w_match_511;

    
    
    

LUT_Match_vasim_68_511 #(8) lut_match_vasim_68_511(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_511));


assign vasim_68_w_match_511 = vasim_68_lut_match_511 ;

STE #(.fan_in(2)) vasim_68_ste_511 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_510 }),
                .match(vasim_68_w_match_511) ,
                .active_state(vasim_68_w_out_511));




/*wire vasim_68_w_out_512;
*/

wire vasim_68_lut_match_512;
wire vasim_68_w_match_512;

    
    
    

LUT_Match_vasim_68_512 #(8) lut_match_vasim_68_512(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_512));


assign vasim_68_w_match_512 = vasim_68_lut_match_512 ;

STE #(.fan_in(1)) vasim_68_ste_512 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_511 }),
                .match(vasim_68_w_match_512) ,
                .active_state(vasim_68_w_out_512));




/*wire vasim_68_w_out_513;
*/

wire vasim_68_lut_match_513;
wire vasim_68_w_match_513;

    
    
    

LUT_Match_vasim_68_513 #(8) lut_match_vasim_68_513(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_513));


assign vasim_68_w_match_513 = vasim_68_lut_match_513 ;

STE #(.fan_in(2)) vasim_68_ste_513 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_512, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_513) ,
                .active_state(vasim_68_w_out_513));




/*wire vasim_68_w_out_514;
*/

wire vasim_68_lut_match_514;
wire vasim_68_w_match_514;

    
    
    

LUT_Match_vasim_68_514 #(8) lut_match_vasim_68_514(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_514));


assign vasim_68_w_match_514 = vasim_68_lut_match_514 ;

STE #(.fan_in(1)) vasim_68_ste_514 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_513 }),
                .match(vasim_68_w_match_514) ,
                .active_state(vasim_68_w_out_514));




/*wire vasim_68_w_out_515;
*/

wire vasim_68_lut_match_515;
wire vasim_68_w_match_515;

    
    
    

LUT_Match_vasim_68_515 #(8) lut_match_vasim_68_515(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_515));


assign vasim_68_w_match_515 = vasim_68_lut_match_515 ;

STE #(.fan_in(1)) vasim_68_ste_515 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_504 }),
                .match(vasim_68_w_match_515) ,
                .active_state(vasim_68_w_out_515));




/*wire vasim_68_w_out_516;
*/

wire vasim_68_lut_match_516;
wire vasim_68_w_match_516;

    
    
    

LUT_Match_vasim_68_516 #(8) lut_match_vasim_68_516(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_516));


assign vasim_68_w_match_516 = vasim_68_lut_match_516 ;

STE #(.fan_in(2)) vasim_68_ste_516 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_514 }),
                .match(vasim_68_w_match_516) ,
                .active_state(vasim_68_w_out_516));




/*wire vasim_68_w_out_517;
*/

wire vasim_68_lut_match_517;
wire vasim_68_w_match_517;

    
    
    

LUT_Match_vasim_68_517 #(8) lut_match_vasim_68_517(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_517));


assign vasim_68_w_match_517 = vasim_68_lut_match_517 ;

STE #(.fan_in(1)) vasim_68_ste_517 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_516 }),
                .match(vasim_68_w_match_517) ,
                .active_state(vasim_68_w_out_517));




/*wire vasim_68_w_out_518;
*/

wire vasim_68_lut_match_518;
wire vasim_68_w_match_518;

    
    
    

LUT_Match_vasim_68_518 #(8) lut_match_vasim_68_518(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_518));


assign vasim_68_w_match_518 = vasim_68_lut_match_518 ;

STE #(.fan_in(2)) vasim_68_ste_518 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_517 }),
                .match(vasim_68_w_match_518) ,
                .active_state(vasim_68_w_out_518));




/*wire vasim_68_w_out_519;
*/

wire vasim_68_lut_match_519;
wire vasim_68_w_match_519;

    
    
    

LUT_Match_vasim_68_519 #(8) lut_match_vasim_68_519(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_519));


assign vasim_68_w_match_519 = vasim_68_lut_match_519 ;

STE #(.fan_in(1)) vasim_68_ste_519 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_518 }),
                .match(vasim_68_w_match_519) ,
                .active_state(vasim_68_w_out_519));




/*wire vasim_68_w_out_520;
*/

wire vasim_68_lut_match_520;
wire vasim_68_w_match_520;

    
    
    

LUT_Match_vasim_68_520 #(8) lut_match_vasim_68_520(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_520));


assign vasim_68_w_match_520 = vasim_68_lut_match_520 ;

STE #(.fan_in(2)) vasim_68_ste_520 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_519 }),
                .match(vasim_68_w_match_520) ,
                .active_state(vasim_68_w_out_520));




/*wire vasim_68_w_out_521;
*/

wire vasim_68_lut_match_521;
wire vasim_68_w_match_521;

    
    
    

LUT_Match_vasim_68_521 #(8) lut_match_vasim_68_521(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_521));


assign vasim_68_w_match_521 = vasim_68_lut_match_521 ;

STE #(.fan_in(1)) vasim_68_ste_521 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_520 }),
                .match(vasim_68_w_match_521) ,
                .active_state(vasim_68_w_out_521));




/*wire vasim_68_w_out_522;
*/

wire vasim_68_lut_match_522;
wire vasim_68_w_match_522;

    
    
    

LUT_Match_vasim_68_522 #(8) lut_match_vasim_68_522(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_522));


assign vasim_68_w_match_522 = vasim_68_lut_match_522 ;

STE #(.fan_in(2)) vasim_68_ste_522 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_521, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_522) ,
                .active_state(vasim_68_w_out_522));




/*wire vasim_68_w_out_523;
*/

wire vasim_68_lut_match_523;
wire vasim_68_w_match_523;

    
    
    

LUT_Match_vasim_68_523 #(8) lut_match_vasim_68_523(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_523));


assign vasim_68_w_match_523 = vasim_68_lut_match_523 ;

STE #(.fan_in(1)) vasim_68_ste_523 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_522 }),
                .match(vasim_68_w_match_523) ,
                .active_state(vasim_68_w_out_523));




/*wire vasim_68_w_out_524;
*/

wire vasim_68_lut_match_524;
wire vasim_68_w_match_524;

    
    
    

LUT_Match_vasim_68_524 #(8) lut_match_vasim_68_524(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_524));


assign vasim_68_w_match_524 = vasim_68_lut_match_524 ;

STE #(.fan_in(2)) vasim_68_ste_524 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_523 }),
                .match(vasim_68_w_match_524) ,
                .active_state(vasim_68_w_out_524));




/*wire vasim_68_w_out_525;
*/

wire vasim_68_lut_match_525;
wire vasim_68_w_match_525;

    
    
    

LUT_Match_vasim_68_525 #(8) lut_match_vasim_68_525(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_525));


assign vasim_68_w_match_525 = vasim_68_lut_match_525 ;

STE #(.fan_in(1)) vasim_68_ste_525 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_524 }),
                .match(vasim_68_w_match_525) ,
                .active_state(vasim_68_w_out_525));




/*wire vasim_68_w_out_526;
*/

wire vasim_68_lut_match_526;
wire vasim_68_w_match_526;

    
    
    

LUT_Match_vasim_68_526 #(8) lut_match_vasim_68_526(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_526));


assign vasim_68_w_match_526 = vasim_68_lut_match_526 ;

STE #(.fan_in(1)) vasim_68_ste_526 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_415 }),
                .match(vasim_68_w_match_526) ,
                .active_state(vasim_68_w_out_526));




/*wire vasim_68_w_out_527;
*/

wire vasim_68_lut_match_527;
wire vasim_68_w_match_527;

    
    
    

LUT_Match_vasim_68_527 #(8) lut_match_vasim_68_527(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_527));


assign vasim_68_w_match_527 = vasim_68_lut_match_527 ;

STE #(.fan_in(2)) vasim_68_ste_527 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_515 }),
                .match(vasim_68_w_match_527) ,
                .active_state(vasim_68_w_out_527));




/*wire vasim_68_w_out_528;
*/

wire vasim_68_lut_match_528;
wire vasim_68_w_match_528;

    
    
    

LUT_Match_vasim_68_528 #(8) lut_match_vasim_68_528(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_528));


assign vasim_68_w_match_528 = vasim_68_lut_match_528 ;

STE #(.fan_in(2)) vasim_68_ste_528 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_525 }),
                .match(vasim_68_w_match_528) ,
                .active_state(vasim_68_w_out_528));




/*wire vasim_68_w_out_529;
*/

wire vasim_68_lut_match_529;
wire vasim_68_w_match_529;

    
    
    

LUT_Match_vasim_68_529 #(8) lut_match_vasim_68_529(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_529));


assign vasim_68_w_match_529 = vasim_68_lut_match_529 ;

STE #(.fan_in(1)) vasim_68_ste_529 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_528 }),
                .match(vasim_68_w_match_529) ,
                .active_state(vasim_68_w_out_529));




/*wire vasim_68_w_out_530;
*/

wire vasim_68_lut_match_530;
wire vasim_68_w_match_530;

    
    
    

LUT_Match_vasim_68_530 #(8) lut_match_vasim_68_530(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_530));


assign vasim_68_w_match_530 = vasim_68_lut_match_530 ;

STE #(.fan_in(2)) vasim_68_ste_530 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_529, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_530) ,
                .active_state(vasim_68_w_out_530));




/*wire vasim_68_w_out_531;
*/

wire vasim_68_lut_match_531;
wire vasim_68_w_match_531;

    
    
    

LUT_Match_vasim_68_531 #(8) lut_match_vasim_68_531(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_531));


assign vasim_68_w_match_531 = vasim_68_lut_match_531 ;

STE #(.fan_in(1)) vasim_68_ste_531 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_530 }),
                .match(vasim_68_w_match_531) ,
                .active_state(vasim_68_w_out_531));




/*wire vasim_68_w_out_532;
*/

wire vasim_68_lut_match_532;
wire vasim_68_w_match_532;

    
    
    

LUT_Match_vasim_68_532 #(8) lut_match_vasim_68_532(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_532));


assign vasim_68_w_match_532 = vasim_68_lut_match_532 ;

STE #(.fan_in(2)) vasim_68_ste_532 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_531 }),
                .match(vasim_68_w_match_532) ,
                .active_state(vasim_68_w_out_532));




/*wire vasim_68_w_out_533;
*/

wire vasim_68_lut_match_533;
wire vasim_68_w_match_533;

    
    
    

LUT_Match_vasim_68_533 #(8) lut_match_vasim_68_533(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_533));


assign vasim_68_w_match_533 = vasim_68_lut_match_533 ;

STE #(.fan_in(1)) vasim_68_ste_533 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_532 }),
                .match(vasim_68_w_match_533) ,
                .active_state(vasim_68_w_out_533));




/*wire vasim_68_w_out_534;
*/

wire vasim_68_lut_match_534;
wire vasim_68_w_match_534;

    
    
    

LUT_Match_vasim_68_534 #(8) lut_match_vasim_68_534(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_534));


assign vasim_68_w_match_534 = vasim_68_lut_match_534 ;

STE #(.fan_in(2)) vasim_68_ste_534 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_533 }),
                .match(vasim_68_w_match_534) ,
                .active_state(vasim_68_w_out_534));




/*wire vasim_68_w_out_535;
*/

wire vasim_68_lut_match_535;
wire vasim_68_w_match_535;

    
    
    

LUT_Match_vasim_68_535 #(8) lut_match_vasim_68_535(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_535));


assign vasim_68_w_match_535 = vasim_68_lut_match_535 ;

STE #(.fan_in(1)) vasim_68_ste_535 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_534 }),
                .match(vasim_68_w_match_535) ,
                .active_state(vasim_68_w_out_535));




/*wire vasim_68_w_out_536;
*/

wire vasim_68_lut_match_536;
wire vasim_68_w_match_536;

    
    
    

LUT_Match_vasim_68_536 #(8) lut_match_vasim_68_536(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_536));


assign vasim_68_w_match_536 = vasim_68_lut_match_536 ;

STE #(.fan_in(2)) vasim_68_ste_536 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_535 }),
                .match(vasim_68_w_match_536) ,
                .active_state(vasim_68_w_out_536));




/*wire vasim_68_w_out_537;
*/

wire vasim_68_lut_match_537;
wire vasim_68_w_match_537;

    
    
    

LUT_Match_vasim_68_537 #(8) lut_match_vasim_68_537(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_537));


assign vasim_68_w_match_537 = vasim_68_lut_match_537 ;

STE #(.fan_in(1)) vasim_68_ste_537 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_536 }),
                .match(vasim_68_w_match_537) ,
                .active_state(vasim_68_w_out_537));




/*wire vasim_68_w_out_538;
*/

wire vasim_68_lut_match_538;
wire vasim_68_w_match_538;

    
    
    

LUT_Match_vasim_68_538 #(8) lut_match_vasim_68_538(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_538));


assign vasim_68_w_match_538 = vasim_68_lut_match_538 ;

STE #(.fan_in(1)) vasim_68_ste_538 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_527 }),
                .match(vasim_68_w_match_538) ,
                .active_state(vasim_68_w_out_538));




/*wire vasim_68_w_out_539;
*/

wire vasim_68_lut_match_539;
wire vasim_68_w_match_539;

    
    
    

LUT_Match_vasim_68_539 #(8) lut_match_vasim_68_539(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_539));


assign vasim_68_w_match_539 = vasim_68_lut_match_539 ;

STE #(.fan_in(2)) vasim_68_ste_539 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_537, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_539) ,
                .active_state(vasim_68_w_out_539));




/*wire vasim_68_w_out_540;
*/

wire vasim_68_lut_match_540;
wire vasim_68_w_match_540;

    
    
    

LUT_Match_vasim_68_540 #(8) lut_match_vasim_68_540(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_540));


assign vasim_68_w_match_540 = vasim_68_lut_match_540 ;

STE #(.fan_in(1)) vasim_68_ste_540 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_539 }),
                .match(vasim_68_w_match_540) ,
                .active_state(vasim_68_w_out_540));




/*wire vasim_68_w_out_541;
*/

wire vasim_68_lut_match_541;
wire vasim_68_w_match_541;

    
    
    

LUT_Match_vasim_68_541 #(8) lut_match_vasim_68_541(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_541));


assign vasim_68_w_match_541 = vasim_68_lut_match_541 ;

STE #(.fan_in(2)) vasim_68_ste_541 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_540 }),
                .match(vasim_68_w_match_541) ,
                .active_state(vasim_68_w_out_541));




/*wire vasim_68_w_out_542;
*/

wire vasim_68_lut_match_542;
wire vasim_68_w_match_542;

    
    
    

LUT_Match_vasim_68_542 #(8) lut_match_vasim_68_542(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_542));


assign vasim_68_w_match_542 = vasim_68_lut_match_542 ;

STE #(.fan_in(1)) vasim_68_ste_542 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_541 }),
                .match(vasim_68_w_match_542) ,
                .active_state(vasim_68_w_out_542));




/*wire vasim_68_w_out_543;
*/

wire vasim_68_lut_match_543;
wire vasim_68_w_match_543;

    
    
    

LUT_Match_vasim_68_543 #(8) lut_match_vasim_68_543(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_543));


assign vasim_68_w_match_543 = vasim_68_lut_match_543 ;

STE #(.fan_in(2)) vasim_68_ste_543 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_542 }),
                .match(vasim_68_w_match_543) ,
                .active_state(vasim_68_w_out_543));




/*wire vasim_68_w_out_544;
*/

wire vasim_68_lut_match_544;
wire vasim_68_w_match_544;

    
    
    

LUT_Match_vasim_68_544 #(8) lut_match_vasim_68_544(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_544));


assign vasim_68_w_match_544 = vasim_68_lut_match_544 ;

STE #(.fan_in(1)) vasim_68_ste_544 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_543 }),
                .match(vasim_68_w_match_544) ,
                .active_state(vasim_68_w_out_544));




/*wire vasim_68_w_out_545;
*/

wire vasim_68_lut_match_545;
wire vasim_68_w_match_545;

    
    
    

LUT_Match_vasim_68_545 #(8) lut_match_vasim_68_545(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_545));


assign vasim_68_w_match_545 = vasim_68_lut_match_545 ;

STE #(.fan_in(2)) vasim_68_ste_545 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_544, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_545) ,
                .active_state(vasim_68_w_out_545));




/*wire vasim_68_w_out_546;
*/

wire vasim_68_lut_match_546;
wire vasim_68_w_match_546;

    
    
    

LUT_Match_vasim_68_546 #(8) lut_match_vasim_68_546(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_546));


assign vasim_68_w_match_546 = vasim_68_lut_match_546 ;

STE #(.fan_in(1)) vasim_68_ste_546 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_545 }),
                .match(vasim_68_w_match_546) ,
                .active_state(vasim_68_w_out_546));




/*wire vasim_68_w_out_547;
*/

wire vasim_68_lut_match_547;
wire vasim_68_w_match_547;

    
    
    

LUT_Match_vasim_68_547 #(8) lut_match_vasim_68_547(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_547));


assign vasim_68_w_match_547 = vasim_68_lut_match_547 ;

STE #(.fan_in(2)) vasim_68_ste_547 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_546 }),
                .match(vasim_68_w_match_547) ,
                .active_state(vasim_68_w_out_547));




/*wire vasim_68_w_out_548;
*/

wire vasim_68_lut_match_548;
wire vasim_68_w_match_548;

    
    
    

LUT_Match_vasim_68_548 #(8) lut_match_vasim_68_548(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_548));


assign vasim_68_w_match_548 = vasim_68_lut_match_548 ;

STE #(.fan_in(1)) vasim_68_ste_548 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_547 }),
                .match(vasim_68_w_match_548) ,
                .active_state(vasim_68_w_out_548));




/*wire vasim_68_w_out_549;
*/

wire vasim_68_lut_match_549;
wire vasim_68_w_match_549;

    
    
    

LUT_Match_vasim_68_549 #(8) lut_match_vasim_68_549(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_549));


assign vasim_68_w_match_549 = vasim_68_lut_match_549 ;

STE #(.fan_in(2)) vasim_68_ste_549 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_538 }),
                .match(vasim_68_w_match_549) ,
                .active_state(vasim_68_w_out_549));




/*wire vasim_68_w_out_550;
*/

wire vasim_68_lut_match_550;
wire vasim_68_w_match_550;

    
    
    

LUT_Match_vasim_68_550 #(8) lut_match_vasim_68_550(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_550));


assign vasim_68_w_match_550 = vasim_68_lut_match_550 ;

STE #(.fan_in(2)) vasim_68_ste_550 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_548 }),
                .match(vasim_68_w_match_550) ,
                .active_state(vasim_68_w_out_550));




/*wire vasim_68_w_out_551;
*/

wire vasim_68_lut_match_551;
wire vasim_68_w_match_551;

    
    
    

LUT_Match_vasim_68_551 #(8) lut_match_vasim_68_551(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_551));


assign vasim_68_w_match_551 = vasim_68_lut_match_551 ;

STE #(.fan_in(1)) vasim_68_ste_551 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_550 }),
                .match(vasim_68_w_match_551) ,
                .active_state(vasim_68_w_out_551));




/*wire vasim_68_w_out_552;
*/

wire vasim_68_lut_match_552;
wire vasim_68_w_match_552;

    
    
    

LUT_Match_vasim_68_552 #(8) lut_match_vasim_68_552(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_552));


assign vasim_68_w_match_552 = vasim_68_lut_match_552 ;

STE #(.fan_in(2)) vasim_68_ste_552 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_551 }),
                .match(vasim_68_w_match_552) ,
                .active_state(vasim_68_w_out_552));




/*wire vasim_68_w_out_553;
*/

wire vasim_68_lut_match_553;
wire vasim_68_w_match_553;

    
    
    

LUT_Match_vasim_68_553 #(8) lut_match_vasim_68_553(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_553));


assign vasim_68_w_match_553 = vasim_68_lut_match_553 ;

STE #(.fan_in(1)) vasim_68_ste_553 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_552 }),
                .match(vasim_68_w_match_553) ,
                .active_state(vasim_68_w_out_553));




/*wire vasim_68_w_out_554;
*/

wire vasim_68_lut_match_554;
wire vasim_68_w_match_554;

    
    
    

LUT_Match_vasim_68_554 #(8) lut_match_vasim_68_554(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_554));


assign vasim_68_w_match_554 = vasim_68_lut_match_554 ;

STE #(.fan_in(2)) vasim_68_ste_554 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_553, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_554) ,
                .active_state(vasim_68_w_out_554));




/*wire vasim_68_w_out_555;
*/

wire vasim_68_lut_match_555;
wire vasim_68_w_match_555;

    
    
    

LUT_Match_vasim_68_555 #(8) lut_match_vasim_68_555(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_555));


assign vasim_68_w_match_555 = vasim_68_lut_match_555 ;

STE #(.fan_in(1)) vasim_68_ste_555 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_554 }),
                .match(vasim_68_w_match_555) ,
                .active_state(vasim_68_w_out_555));




/*wire vasim_68_w_out_556;
*/

wire vasim_68_lut_match_556;
wire vasim_68_w_match_556;

    
    
    

LUT_Match_vasim_68_556 #(8) lut_match_vasim_68_556(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_556));


assign vasim_68_w_match_556 = vasim_68_lut_match_556 ;

STE #(.fan_in(2)) vasim_68_ste_556 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_555 }),
                .match(vasim_68_w_match_556) ,
                .active_state(vasim_68_w_out_556));




/*wire vasim_68_w_out_557;
*/

wire vasim_68_lut_match_557;
wire vasim_68_w_match_557;

    
    
    

LUT_Match_vasim_68_557 #(8) lut_match_vasim_68_557(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_557));


assign vasim_68_w_match_557 = vasim_68_lut_match_557 ;

STE #(.fan_in(1)) vasim_68_ste_557 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_556 }),
                .match(vasim_68_w_match_557) ,
                .active_state(vasim_68_w_out_557));




/*wire vasim_68_w_out_558;
*/

wire vasim_68_lut_match_558;
wire vasim_68_w_match_558;

    
    
    

LUT_Match_vasim_68_558 #(8) lut_match_vasim_68_558(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_558));


assign vasim_68_w_match_558 = vasim_68_lut_match_558 ;

STE #(.fan_in(2)) vasim_68_ste_558 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_557 }),
                .match(vasim_68_w_match_558) ,
                .active_state(vasim_68_w_out_558));




/*wire vasim_68_w_out_559;
*/

wire vasim_68_lut_match_559;
wire vasim_68_w_match_559;

    
    
    

LUT_Match_vasim_68_559 #(8) lut_match_vasim_68_559(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_559));


assign vasim_68_w_match_559 = vasim_68_lut_match_559 ;

STE #(.fan_in(1)) vasim_68_ste_559 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_558 }),
                .match(vasim_68_w_match_559) ,
                .active_state(vasim_68_w_out_559));




/*wire vasim_68_w_out_560;
*/

wire vasim_68_lut_match_560;
wire vasim_68_w_match_560;

    
    
    

LUT_Match_vasim_68_560 #(8) lut_match_vasim_68_560(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_560));


assign vasim_68_w_match_560 = vasim_68_lut_match_560 ;

STE #(.fan_in(1)) vasim_68_ste_560 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_549 }),
                .match(vasim_68_w_match_560) ,
                .active_state(vasim_68_w_out_560));




/*wire vasim_68_w_out_561;
*/

wire vasim_68_lut_match_561;
wire vasim_68_w_match_561;

    
    
    

LUT_Match_vasim_68_561 #(8) lut_match_vasim_68_561(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_561));


assign vasim_68_w_match_561 = vasim_68_lut_match_561 ;

STE #(.fan_in(2)) vasim_68_ste_561 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_559 }),
                .match(vasim_68_w_match_561) ,
                .active_state(vasim_68_w_out_561));




/*wire vasim_68_w_out_562;
*/

wire vasim_68_lut_match_562;
wire vasim_68_w_match_562;

    
    
    

LUT_Match_vasim_68_562 #(8) lut_match_vasim_68_562(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_562));


assign vasim_68_w_match_562 = vasim_68_lut_match_562 ;

STE #(.fan_in(1)) vasim_68_ste_562 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_561 }),
                .match(vasim_68_w_match_562) ,
                .active_state(vasim_68_w_out_562));




/*wire vasim_68_w_out_563;
*/

wire vasim_68_lut_match_563;
wire vasim_68_w_match_563;

    
    
    

LUT_Match_vasim_68_563 #(8) lut_match_vasim_68_563(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_563));


assign vasim_68_w_match_563 = vasim_68_lut_match_563 ;

STE #(.fan_in(2)) vasim_68_ste_563 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_562 }),
                .match(vasim_68_w_match_563) ,
                .active_state(vasim_68_w_out_563));




/*wire vasim_68_w_out_564;
*/

wire vasim_68_lut_match_564;
wire vasim_68_w_match_564;

    
    
    

LUT_Match_vasim_68_564 #(8) lut_match_vasim_68_564(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_564));


assign vasim_68_w_match_564 = vasim_68_lut_match_564 ;

STE #(.fan_in(1)) vasim_68_ste_564 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_563 }),
                .match(vasim_68_w_match_564) ,
                .active_state(vasim_68_w_out_564));




/*wire vasim_68_w_out_565;
*/

wire vasim_68_lut_match_565;
wire vasim_68_w_match_565;

    
    
    

LUT_Match_vasim_68_565 #(8) lut_match_vasim_68_565(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_565));


assign vasim_68_w_match_565 = vasim_68_lut_match_565 ;

STE #(.fan_in(2)) vasim_68_ste_565 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_564 }),
                .match(vasim_68_w_match_565) ,
                .active_state(vasim_68_w_out_565));




/*wire vasim_68_w_out_566;
*/

wire vasim_68_lut_match_566;
wire vasim_68_w_match_566;

    
    
    

LUT_Match_vasim_68_566 #(8) lut_match_vasim_68_566(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_566));


assign vasim_68_w_match_566 = vasim_68_lut_match_566 ;

STE #(.fan_in(1)) vasim_68_ste_566 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_565 }),
                .match(vasim_68_w_match_566) ,
                .active_state(vasim_68_w_out_566));




/*wire vasim_68_w_out_567;
*/

wire vasim_68_lut_match_567;
wire vasim_68_w_match_567;

    
    
    

LUT_Match_vasim_68_567 #(8) lut_match_vasim_68_567(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_567));


assign vasim_68_w_match_567 = vasim_68_lut_match_567 ;

STE #(.fan_in(1)) vasim_68_ste_567 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_566 }),
                .match(vasim_68_w_match_567) ,
                .active_state(vasim_68_w_out_567));




/*wire vasim_68_w_out_568;
*/

wire vasim_68_lut_match_568;
wire vasim_68_w_match_568;

    
    
    

LUT_Match_vasim_68_568 #(8) lut_match_vasim_68_568(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_568));


assign vasim_68_w_match_568 = vasim_68_lut_match_568 ;

STE #(.fan_in(1)) vasim_68_ste_568 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_567 }),
                .match(vasim_68_w_match_568) ,
                .active_state(vasim_68_w_out_568));




/*wire vasim_68_w_out_569;
*/

wire vasim_68_lut_match_569;
wire vasim_68_w_match_569;

    
    
    

LUT_Match_vasim_68_569 #(8) lut_match_vasim_68_569(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_569));


assign vasim_68_w_match_569 = vasim_68_lut_match_569 ;

STE #(.fan_in(2)) vasim_68_ste_569 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_568, vasim_68_w_out_566 }),
                .match(vasim_68_w_match_569) ,
                .active_state(vasim_68_w_out_569));




/*wire vasim_68_w_out_570;
*/

wire vasim_68_lut_match_570;
wire vasim_68_w_match_570;

    
    
    

LUT_Match_vasim_68_570 #(8) lut_match_vasim_68_570(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_570));


assign vasim_68_w_match_570 = vasim_68_lut_match_570 ;

STE #(.fan_in(1)) vasim_68_ste_570 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_569 }),
                .match(vasim_68_w_match_570) ,
                .active_state(vasim_68_w_out_570));




/*wire vasim_68_w_out_571;
*/

wire vasim_68_lut_match_571;
wire vasim_68_w_match_571;

    
    
    

LUT_Match_vasim_68_571 #(8) lut_match_vasim_68_571(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_571));


assign vasim_68_w_match_571 = vasim_68_lut_match_571 ;

STE #(.fan_in(2)) vasim_68_ste_571 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_560, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_571) ,
                .active_state(vasim_68_w_out_571));




/*wire vasim_68_w_out_572;
*/

wire vasim_68_lut_match_572;
wire vasim_68_w_match_572;

    
    
    

LUT_Match_vasim_68_572 #(8) lut_match_vasim_68_572(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_572));


assign vasim_68_w_match_572 = vasim_68_lut_match_572 ;

STE #(.fan_in(2)) vasim_68_ste_572 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_570, vasim_68_w_out_566 }),
                .match(vasim_68_w_match_572) ,
                .active_state(vasim_68_w_out_572));




/*wire vasim_68_w_out_573;
*/

wire vasim_68_lut_match_573;
wire vasim_68_w_match_573;

    
    
    

LUT_Match_vasim_68_573 #(8) lut_match_vasim_68_573(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_573));


assign vasim_68_w_match_573 = vasim_68_lut_match_573 ;

STE #(.fan_in(1)) vasim_68_ste_573 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_572 }),
                .match(vasim_68_w_match_573) ,
                .active_state(vasim_68_w_out_573));




/*wire vasim_68_w_out_574;
*/

wire vasim_68_lut_match_574;
wire vasim_68_w_match_574;

    
    
    

LUT_Match_vasim_68_574 #(8) lut_match_vasim_68_574(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_574));


assign vasim_68_w_match_574 = vasim_68_lut_match_574 ;

STE #(.fan_in(1)) vasim_68_ste_574 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_573 }),
                .match(vasim_68_w_match_574) ,
                .active_state(vasim_68_w_out_574));




/*wire vasim_68_w_out_575;
*/

wire vasim_68_lut_match_575;
wire vasim_68_w_match_575;

    
    
    

LUT_Match_vasim_68_575 #(8) lut_match_vasim_68_575(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_575));


assign vasim_68_w_match_575 = vasim_68_lut_match_575 ;

STE #(.fan_in(1)) vasim_68_ste_575 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_574 }),
                .match(vasim_68_w_match_575) ,
                .active_state(vasim_68_w_out_575));




/*wire vasim_68_w_out_576;
*/

wire vasim_68_lut_match_576;
wire vasim_68_w_match_576;

    
    
    

LUT_Match_vasim_68_576 #(8) lut_match_vasim_68_576(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_576));


assign vasim_68_w_match_576 = vasim_68_lut_match_576 ;

STE #(.fan_in(2)) vasim_68_ste_576 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_573, vasim_68_w_out_575 }),
                .match(vasim_68_w_match_576) ,
                .active_state(vasim_68_w_out_576));




/*wire vasim_68_w_out_577;
*/

wire vasim_68_lut_match_577;
wire vasim_68_w_match_577;

    
    
    

LUT_Match_vasim_68_577 #(8) lut_match_vasim_68_577(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_577));


assign vasim_68_w_match_577 = vasim_68_lut_match_577 ;

STE #(.fan_in(1)) vasim_68_ste_577 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_576 }),
                .match(vasim_68_w_match_577) ,
                .active_state(vasim_68_w_out_577));




/*wire vasim_68_w_out_578;
*/

wire vasim_68_lut_match_578;
wire vasim_68_w_match_578;

    
    
    

LUT_Match_vasim_68_578 #(8) lut_match_vasim_68_578(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_578));


assign vasim_68_w_match_578 = vasim_68_lut_match_578 ;

STE #(.fan_in(2)) vasim_68_ste_578 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_577, vasim_68_w_out_573 }),
                .match(vasim_68_w_match_578) ,
                .active_state(vasim_68_w_out_578));




/*wire vasim_68_w_out_579;
*/

wire vasim_68_lut_match_579;
wire vasim_68_w_match_579;

    
    
    

LUT_Match_vasim_68_579 #(8) lut_match_vasim_68_579(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_579));


assign vasim_68_w_match_579 = vasim_68_lut_match_579 ;

STE #(.fan_in(1)) vasim_68_ste_579 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_578 }),
                .match(vasim_68_w_match_579) ,
                .active_state(vasim_68_w_out_579));




/*wire vasim_68_w_out_580;
*/

wire vasim_68_lut_match_580;
wire vasim_68_w_match_580;

    
    
    

LUT_Match_vasim_68_580 #(8) lut_match_vasim_68_580(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_580));


assign vasim_68_w_match_580 = vasim_68_lut_match_580 ;

STE #(.fan_in(2)) vasim_68_ste_580 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_579, vasim_68_w_out_573 }),
                .match(vasim_68_w_match_580) ,
                .active_state(vasim_68_w_out_580));




/*wire vasim_68_w_out_581;
*/

wire vasim_68_lut_match_581;
wire vasim_68_w_match_581;

    
    
    

LUT_Match_vasim_68_581 #(8) lut_match_vasim_68_581(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_581));


assign vasim_68_w_match_581 = vasim_68_lut_match_581 ;

STE #(.fan_in(1)) vasim_68_ste_581 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_580 }),
                .match(vasim_68_w_match_581) ,
                .active_state(vasim_68_w_out_581));




/*wire vasim_68_w_out_582;
*/

wire vasim_68_lut_match_582;
wire vasim_68_w_match_582;

    
    
    

LUT_Match_vasim_68_582 #(8) lut_match_vasim_68_582(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_582));


assign vasim_68_w_match_582 = vasim_68_lut_match_582 ;

STE #(.fan_in(1)) vasim_68_ste_582 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_571 }),
                .match(vasim_68_w_match_582) ,
                .active_state(vasim_68_w_out_582));




/*wire vasim_68_w_out_583;
*/

wire vasim_68_lut_match_583;
wire vasim_68_w_match_583;

    
    
    

LUT_Match_vasim_68_583 #(8) lut_match_vasim_68_583(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_583));


assign vasim_68_w_match_583 = vasim_68_lut_match_583 ;

STE #(.fan_in(2)) vasim_68_ste_583 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_573, vasim_68_w_out_581 }),
                .match(vasim_68_w_match_583) ,
                .active_state(vasim_68_w_out_583));




/*wire vasim_68_w_out_584;
*/

wire vasim_68_lut_match_584;
wire vasim_68_w_match_584;

    
    
    

LUT_Match_vasim_68_584 #(8) lut_match_vasim_68_584(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_584));


assign vasim_68_w_match_584 = vasim_68_lut_match_584 ;

STE #(.fan_in(1)) vasim_68_ste_584 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_583 }),
                .match(vasim_68_w_match_584) ,
                .active_state(vasim_68_w_out_584));




/*wire vasim_68_w_out_585;
*/

wire vasim_68_lut_match_585;
wire vasim_68_w_match_585;

    
    
    

LUT_Match_vasim_68_585 #(8) lut_match_vasim_68_585(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_585));


assign vasim_68_w_match_585 = vasim_68_lut_match_585 ;

STE #(.fan_in(1)) vasim_68_ste_585 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_584 }),
                .match(vasim_68_w_match_585) ,
                .active_state(vasim_68_w_out_585));




/*wire vasim_68_w_out_586;
*/

wire vasim_68_lut_match_586;
wire vasim_68_w_match_586;

    
    
    

LUT_Match_vasim_68_586 #(8) lut_match_vasim_68_586(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_586));


assign vasim_68_w_match_586 = vasim_68_lut_match_586 ;

STE #(.fan_in(1)) vasim_68_ste_586 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_585 }),
                .match(vasim_68_w_match_586) ,
                .active_state(vasim_68_w_out_586));




/*wire vasim_68_w_out_587;
*/

wire vasim_68_lut_match_587;
wire vasim_68_w_match_587;

    
    
    

LUT_Match_vasim_68_587 #(8) lut_match_vasim_68_587(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_587));


assign vasim_68_w_match_587 = vasim_68_lut_match_587 ;

STE #(.fan_in(2)) vasim_68_ste_587 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_584, vasim_68_w_out_586 }),
                .match(vasim_68_w_match_587) ,
                .active_state(vasim_68_w_out_587));




/*wire vasim_68_w_out_588;
*/

wire vasim_68_lut_match_588;
wire vasim_68_w_match_588;

    
    
    

LUT_Match_vasim_68_588 #(8) lut_match_vasim_68_588(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_588));


assign vasim_68_w_match_588 = vasim_68_lut_match_588 ;

STE #(.fan_in(1)) vasim_68_ste_588 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_587 }),
                .match(vasim_68_w_match_588) ,
                .active_state(vasim_68_w_out_588));




/*wire vasim_68_w_out_589;
*/

wire vasim_68_lut_match_589;
wire vasim_68_w_match_589;

    
    
    

LUT_Match_vasim_68_589 #(8) lut_match_vasim_68_589(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_589));


assign vasim_68_w_match_589 = vasim_68_lut_match_589 ;

STE #(.fan_in(2)) vasim_68_ste_589 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_584, vasim_68_w_out_588 }),
                .match(vasim_68_w_match_589) ,
                .active_state(vasim_68_w_out_589));




/*wire vasim_68_w_out_590;
*/

wire vasim_68_lut_match_590;
wire vasim_68_w_match_590;

    
    
    

LUT_Match_vasim_68_590 #(8) lut_match_vasim_68_590(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_590));


assign vasim_68_w_match_590 = vasim_68_lut_match_590 ;

STE #(.fan_in(1)) vasim_68_ste_590 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_589 }),
                .match(vasim_68_w_match_590) ,
                .active_state(vasim_68_w_out_590));




/*wire vasim_68_w_out_591;
*/

wire vasim_68_lut_match_591;
wire vasim_68_w_match_591;

    
    
    

LUT_Match_vasim_68_591 #(8) lut_match_vasim_68_591(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_591));


assign vasim_68_w_match_591 = vasim_68_lut_match_591 ;

STE #(.fan_in(1)) vasim_68_ste_591 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_590 }),
                .match(vasim_68_w_match_591) ,
                .active_state(vasim_68_w_out_591));




/*wire vasim_68_w_out_592;
*/

wire vasim_68_lut_match_592;
wire vasim_68_w_match_592;

    
    
    

LUT_Match_vasim_68_592 #(8) lut_match_vasim_68_592(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_592));


assign vasim_68_w_match_592 = vasim_68_lut_match_592 ;

STE #(.fan_in(1)) vasim_68_ste_592 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_591 }),
                .match(vasim_68_w_match_592) ,
                .active_state(vasim_68_w_out_592));




/*wire vasim_68_w_out_593;
*/

wire vasim_68_lut_match_593;
wire vasim_68_w_match_593;

    
    
    

LUT_Match_vasim_68_593 #(8) lut_match_vasim_68_593(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_593));


assign vasim_68_w_match_593 = vasim_68_lut_match_593 ;

STE #(.fan_in(2)) vasim_68_ste_593 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_582 }),
                .match(vasim_68_w_match_593) ,
                .active_state(vasim_68_w_out_593));




/*wire vasim_68_w_out_594;
*/

wire vasim_68_lut_match_594;
wire vasim_68_w_match_594;

    
    
    

LUT_Match_vasim_68_594 #(8) lut_match_vasim_68_594(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_594));


assign vasim_68_w_match_594 = vasim_68_lut_match_594 ;

STE #(.fan_in(1)) vasim_68_ste_594 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592 }),
                .match(vasim_68_w_match_594) ,
                .active_state(vasim_68_w_out_594));




/*wire vasim_68_w_out_595;
*/

wire vasim_68_lut_match_595;
wire vasim_68_w_match_595;

    
    
    

LUT_Match_vasim_68_595 #(8) lut_match_vasim_68_595(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_595));


assign vasim_68_w_match_595 = vasim_68_lut_match_595 ;

STE #(.fan_in(1)) vasim_68_ste_595 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_594 }),
                .match(vasim_68_w_match_595) ,
                .active_state(vasim_68_w_out_595));




/*wire vasim_68_w_out_596;
*/

wire vasim_68_lut_match_596;
wire vasim_68_w_match_596;

    
    
    

LUT_Match_vasim_68_596 #(8) lut_match_vasim_68_596(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_596));


assign vasim_68_w_match_596 = vasim_68_lut_match_596 ;

STE #(.fan_in(2)) vasim_68_ste_596 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_595 }),
                .match(vasim_68_w_match_596) ,
                .active_state(vasim_68_w_out_596));




/*wire vasim_68_w_out_597;
*/

wire vasim_68_lut_match_597;
wire vasim_68_w_match_597;

    
    
    

LUT_Match_vasim_68_597 #(8) lut_match_vasim_68_597(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_597));


assign vasim_68_w_match_597 = vasim_68_lut_match_597 ;

STE #(.fan_in(1)) vasim_68_ste_597 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_596 }),
                .match(vasim_68_w_match_597) ,
                .active_state(vasim_68_w_out_597));




/*wire vasim_68_w_out_598;
*/

wire vasim_68_lut_match_598;
wire vasim_68_w_match_598;

    
    
    

LUT_Match_vasim_68_598 #(8) lut_match_vasim_68_598(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_598));


assign vasim_68_w_match_598 = vasim_68_lut_match_598 ;

STE #(.fan_in(2)) vasim_68_ste_598 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_597 }),
                .match(vasim_68_w_match_598) ,
                .active_state(vasim_68_w_out_598));




/*wire vasim_68_w_out_599;
*/

wire vasim_68_lut_match_599;
wire vasim_68_w_match_599;

    
    
    

LUT_Match_vasim_68_599 #(8) lut_match_vasim_68_599(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_599));


assign vasim_68_w_match_599 = vasim_68_lut_match_599 ;

STE #(.fan_in(1)) vasim_68_ste_599 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_598 }),
                .match(vasim_68_w_match_599) ,
                .active_state(vasim_68_w_out_599));




/*wire vasim_68_w_out_600;
*/

wire vasim_68_lut_match_600;
wire vasim_68_w_match_600;

    
    
    

LUT_Match_vasim_68_600 #(8) lut_match_vasim_68_600(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_600));


assign vasim_68_w_match_600 = vasim_68_lut_match_600 ;

STE #(.fan_in(2)) vasim_68_ste_600 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_599 }),
                .match(vasim_68_w_match_600) ,
                .active_state(vasim_68_w_out_600));




/*wire vasim_68_w_out_601;
*/

wire vasim_68_lut_match_601;
wire vasim_68_w_match_601;

    
    
    

LUT_Match_vasim_68_601 #(8) lut_match_vasim_68_601(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_601));


assign vasim_68_w_match_601 = vasim_68_lut_match_601 ;

STE #(.fan_in(1)) vasim_68_ste_601 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_600 }),
                .match(vasim_68_w_match_601) ,
                .active_state(vasim_68_w_out_601));




/*wire vasim_68_w_out_602;
*/

wire vasim_68_lut_match_602;
wire vasim_68_w_match_602;

    
    
    

LUT_Match_vasim_68_602 #(8) lut_match_vasim_68_602(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_602));


assign vasim_68_w_match_602 = vasim_68_lut_match_602 ;

STE #(.fan_in(2)) vasim_68_ste_602 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_601 }),
                .match(vasim_68_w_match_602) ,
                .active_state(vasim_68_w_out_602));




/*wire vasim_68_w_out_603;
*/

wire vasim_68_lut_match_603;
wire vasim_68_w_match_603;

    
    
    

LUT_Match_vasim_68_603 #(8) lut_match_vasim_68_603(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_603));


assign vasim_68_w_match_603 = vasim_68_lut_match_603 ;

STE #(.fan_in(1)) vasim_68_ste_603 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_602 }),
                .match(vasim_68_w_match_603) ,
                .active_state(vasim_68_w_out_603));




/*wire vasim_68_w_out_604;
*/

wire vasim_68_lut_match_604;
wire vasim_68_w_match_604;

    
    
    

LUT_Match_vasim_68_604 #(8) lut_match_vasim_68_604(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_604));


assign vasim_68_w_match_604 = vasim_68_lut_match_604 ;

STE #(.fan_in(1)) vasim_68_ste_604 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_593 }),
                .match(vasim_68_w_match_604) ,
                .active_state(vasim_68_w_out_604));




/*wire vasim_68_w_out_605;
*/

wire vasim_68_lut_match_605;
wire vasim_68_w_match_605;

    
    
    

LUT_Match_vasim_68_605 #(8) lut_match_vasim_68_605(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_605));


assign vasim_68_w_match_605 = vasim_68_lut_match_605 ;

STE #(.fan_in(2)) vasim_68_ste_605 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_603 }),
                .match(vasim_68_w_match_605) ,
                .active_state(vasim_68_w_out_605));




/*wire vasim_68_w_out_606;
*/

wire vasim_68_lut_match_606;
wire vasim_68_w_match_606;

    
    
    

LUT_Match_vasim_68_606 #(8) lut_match_vasim_68_606(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_606));


assign vasim_68_w_match_606 = vasim_68_lut_match_606 ;

STE #(.fan_in(1)) vasim_68_ste_606 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_605 }),
                .match(vasim_68_w_match_606) ,
                .active_state(vasim_68_w_out_606));




/*wire vasim_68_w_out_607;
*/

wire vasim_68_lut_match_607;
wire vasim_68_w_match_607;

    
    
    

LUT_Match_vasim_68_607 #(8) lut_match_vasim_68_607(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_607));


assign vasim_68_w_match_607 = vasim_68_lut_match_607 ;

STE #(.fan_in(2)) vasim_68_ste_607 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_606 }),
                .match(vasim_68_w_match_607) ,
                .active_state(vasim_68_w_out_607));




/*wire vasim_68_w_out_608;
*/

wire vasim_68_lut_match_608;
wire vasim_68_w_match_608;

    
    
    

LUT_Match_vasim_68_608 #(8) lut_match_vasim_68_608(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_608));


assign vasim_68_w_match_608 = vasim_68_lut_match_608 ;

STE #(.fan_in(1)) vasim_68_ste_608 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_607 }),
                .match(vasim_68_w_match_608) ,
                .active_state(vasim_68_w_out_608));




/*wire vasim_68_w_out_609;
*/

wire vasim_68_lut_match_609;
wire vasim_68_w_match_609;

    
    
    

LUT_Match_vasim_68_609 #(8) lut_match_vasim_68_609(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_609));


assign vasim_68_w_match_609 = vasim_68_lut_match_609 ;

STE #(.fan_in(2)) vasim_68_ste_609 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_608 }),
                .match(vasim_68_w_match_609) ,
                .active_state(vasim_68_w_out_609));




/*wire vasim_68_w_out_610;
*/

wire vasim_68_lut_match_610;
wire vasim_68_w_match_610;

    
    
    

LUT_Match_vasim_68_610 #(8) lut_match_vasim_68_610(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_610));


assign vasim_68_w_match_610 = vasim_68_lut_match_610 ;

STE #(.fan_in(1)) vasim_68_ste_610 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_609 }),
                .match(vasim_68_w_match_610) ,
                .active_state(vasim_68_w_out_610));




/*wire vasim_68_w_out_611;
*/

wire vasim_68_lut_match_611;
wire vasim_68_w_match_611;

    
    
    

LUT_Match_vasim_68_611 #(8) lut_match_vasim_68_611(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_611));


assign vasim_68_w_match_611 = vasim_68_lut_match_611 ;

STE #(.fan_in(2)) vasim_68_ste_611 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_610 }),
                .match(vasim_68_w_match_611) ,
                .active_state(vasim_68_w_out_611));




/*wire vasim_68_w_out_612;
*/

wire vasim_68_lut_match_612;
wire vasim_68_w_match_612;

    
    
    

LUT_Match_vasim_68_612 #(8) lut_match_vasim_68_612(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_612));


assign vasim_68_w_match_612 = vasim_68_lut_match_612 ;

STE #(.fan_in(1)) vasim_68_ste_612 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_611 }),
                .match(vasim_68_w_match_612) ,
                .active_state(vasim_68_w_out_612));




/*wire vasim_68_w_out_613;
*/

wire vasim_68_lut_match_613;
wire vasim_68_w_match_613;

    
    
    

LUT_Match_vasim_68_613 #(8) lut_match_vasim_68_613(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_613));


assign vasim_68_w_match_613 = vasim_68_lut_match_613 ;

STE #(.fan_in(2)) vasim_68_ste_613 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_612 }),
                .match(vasim_68_w_match_613) ,
                .active_state(vasim_68_w_out_613));




/*wire vasim_68_w_out_614;
*/

wire vasim_68_lut_match_614;
wire vasim_68_w_match_614;

    
    
    

LUT_Match_vasim_68_614 #(8) lut_match_vasim_68_614(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_614));


assign vasim_68_w_match_614 = vasim_68_lut_match_614 ;

STE #(.fan_in(1)) vasim_68_ste_614 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_613 }),
                .match(vasim_68_w_match_614) ,
                .active_state(vasim_68_w_out_614));




/*wire vasim_68_w_out_615;
*/

wire vasim_68_lut_match_615;
wire vasim_68_w_match_615;

    
    
    

LUT_Match_vasim_68_615 #(8) lut_match_vasim_68_615(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_615));


assign vasim_68_w_match_615 = vasim_68_lut_match_615 ;

STE #(.fan_in(2)) vasim_68_ste_615 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_604 }),
                .match(vasim_68_w_match_615) ,
                .active_state(vasim_68_w_out_615));




/*wire vasim_68_w_out_616;
*/

wire vasim_68_lut_match_616;
wire vasim_68_w_match_616;

    
    
    

LUT_Match_vasim_68_616 #(8) lut_match_vasim_68_616(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_616));


assign vasim_68_w_match_616 = vasim_68_lut_match_616 ;

STE #(.fan_in(2)) vasim_68_ste_616 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_614 }),
                .match(vasim_68_w_match_616) ,
                .active_state(vasim_68_w_out_616));




/*wire vasim_68_w_out_617;
*/

wire vasim_68_lut_match_617;
wire vasim_68_w_match_617;

    
    
    

LUT_Match_vasim_68_617 #(8) lut_match_vasim_68_617(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_617));


assign vasim_68_w_match_617 = vasim_68_lut_match_617 ;

STE #(.fan_in(1)) vasim_68_ste_617 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_616 }),
                .match(vasim_68_w_match_617) ,
                .active_state(vasim_68_w_out_617));




/*wire vasim_68_w_out_618;
*/

wire vasim_68_lut_match_618;
wire vasim_68_w_match_618;

    
    
    

LUT_Match_vasim_68_618 #(8) lut_match_vasim_68_618(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_618));


assign vasim_68_w_match_618 = vasim_68_lut_match_618 ;

STE #(.fan_in(2)) vasim_68_ste_618 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_617 }),
                .match(vasim_68_w_match_618) ,
                .active_state(vasim_68_w_out_618));




/*wire vasim_68_w_out_619;
*/

wire vasim_68_lut_match_619;
wire vasim_68_w_match_619;

    
    
    

LUT_Match_vasim_68_619 #(8) lut_match_vasim_68_619(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_619));


assign vasim_68_w_match_619 = vasim_68_lut_match_619 ;

STE #(.fan_in(1)) vasim_68_ste_619 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_618 }),
                .match(vasim_68_w_match_619) ,
                .active_state(vasim_68_w_out_619));




/*wire vasim_68_w_out_620;
*/

wire vasim_68_lut_match_620;
wire vasim_68_w_match_620;

    
    
    

LUT_Match_vasim_68_620 #(8) lut_match_vasim_68_620(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_620));


assign vasim_68_w_match_620 = vasim_68_lut_match_620 ;

STE #(.fan_in(2)) vasim_68_ste_620 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_619 }),
                .match(vasim_68_w_match_620) ,
                .active_state(vasim_68_w_out_620));




/*wire vasim_68_w_out_621;
*/

wire vasim_68_lut_match_621;
wire vasim_68_w_match_621;

    
    
    

LUT_Match_vasim_68_621 #(8) lut_match_vasim_68_621(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_621));


assign vasim_68_w_match_621 = vasim_68_lut_match_621 ;

STE #(.fan_in(1)) vasim_68_ste_621 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_620 }),
                .match(vasim_68_w_match_621) ,
                .active_state(vasim_68_w_out_621));




/*wire vasim_68_w_out_622;
*/

wire vasim_68_lut_match_622;
wire vasim_68_w_match_622;

    
    
    

LUT_Match_vasim_68_622 #(8) lut_match_vasim_68_622(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_622));


assign vasim_68_w_match_622 = vasim_68_lut_match_622 ;

STE #(.fan_in(2)) vasim_68_ste_622 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_621 }),
                .match(vasim_68_w_match_622) ,
                .active_state(vasim_68_w_out_622));




/*wire vasim_68_w_out_623;
*/

wire vasim_68_lut_match_623;
wire vasim_68_w_match_623;

    
    
    

LUT_Match_vasim_68_623 #(8) lut_match_vasim_68_623(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_623));


assign vasim_68_w_match_623 = vasim_68_lut_match_623 ;

STE #(.fan_in(1)) vasim_68_ste_623 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_622 }),
                .match(vasim_68_w_match_623) ,
                .active_state(vasim_68_w_out_623));




/*wire vasim_68_w_out_624;
*/

wire vasim_68_lut_match_624;
wire vasim_68_w_match_624;

    
    
    

LUT_Match_vasim_68_624 #(8) lut_match_vasim_68_624(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_624));


assign vasim_68_w_match_624 = vasim_68_lut_match_624 ;

STE #(.fan_in(2)) vasim_68_ste_624 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_623 }),
                .match(vasim_68_w_match_624) ,
                .active_state(vasim_68_w_out_624));




/*wire vasim_68_w_out_625;
*/

wire vasim_68_lut_match_625;
wire vasim_68_w_match_625;

    
    
    

LUT_Match_vasim_68_625 #(8) lut_match_vasim_68_625(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_625));


assign vasim_68_w_match_625 = vasim_68_lut_match_625 ;

STE #(.fan_in(1)) vasim_68_ste_625 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_624 }),
                .match(vasim_68_w_match_625) ,
                .active_state(vasim_68_w_out_625));




/*wire vasim_68_w_out_626;
*/

wire vasim_68_lut_match_626;
wire vasim_68_w_match_626;

    
    
    

LUT_Match_vasim_68_626 #(8) lut_match_vasim_68_626(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_626));


assign vasim_68_w_match_626 = vasim_68_lut_match_626 ;

STE #(.fan_in(1)) vasim_68_ste_626 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_615 }),
                .match(vasim_68_w_match_626) ,
                .active_state(vasim_68_w_out_626));




/*wire vasim_68_w_out_627;
*/

wire vasim_68_lut_match_627;
wire vasim_68_w_match_627;

    
    
    

LUT_Match_vasim_68_627 #(8) lut_match_vasim_68_627(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_627));


assign vasim_68_w_match_627 = vasim_68_lut_match_627 ;

STE #(.fan_in(2)) vasim_68_ste_627 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_625 }),
                .match(vasim_68_w_match_627) ,
                .active_state(vasim_68_w_out_627));




/*wire vasim_68_w_out_628;
*/

wire vasim_68_lut_match_628;
wire vasim_68_w_match_628;

    
    
    

LUT_Match_vasim_68_628 #(8) lut_match_vasim_68_628(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_628));


assign vasim_68_w_match_628 = vasim_68_lut_match_628 ;

STE #(.fan_in(1)) vasim_68_ste_628 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_627 }),
                .match(vasim_68_w_match_628) ,
                .active_state(vasim_68_w_out_628));




/*wire vasim_68_w_out_629;
*/

wire vasim_68_lut_match_629;
wire vasim_68_w_match_629;

    
    
    

LUT_Match_vasim_68_629 #(8) lut_match_vasim_68_629(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_629));


assign vasim_68_w_match_629 = vasim_68_lut_match_629 ;

STE #(.fan_in(2)) vasim_68_ste_629 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_628 }),
                .match(vasim_68_w_match_629) ,
                .active_state(vasim_68_w_out_629));




/*wire vasim_68_w_out_630;
*/

wire vasim_68_lut_match_630;
wire vasim_68_w_match_630;

    
    
    

LUT_Match_vasim_68_630 #(8) lut_match_vasim_68_630(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_630));


assign vasim_68_w_match_630 = vasim_68_lut_match_630 ;

STE #(.fan_in(1)) vasim_68_ste_630 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_629 }),
                .match(vasim_68_w_match_630) ,
                .active_state(vasim_68_w_out_630));




/*wire vasim_68_w_out_631;
*/

wire vasim_68_lut_match_631;
wire vasim_68_w_match_631;

    
    
    

LUT_Match_vasim_68_631 #(8) lut_match_vasim_68_631(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_631));


assign vasim_68_w_match_631 = vasim_68_lut_match_631 ;

STE #(.fan_in(2)) vasim_68_ste_631 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_630 }),
                .match(vasim_68_w_match_631) ,
                .active_state(vasim_68_w_out_631));




/*wire vasim_68_w_out_632;
*/

wire vasim_68_lut_match_632;
wire vasim_68_w_match_632;

    
    
    

LUT_Match_vasim_68_632 #(8) lut_match_vasim_68_632(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_632));


assign vasim_68_w_match_632 = vasim_68_lut_match_632 ;

STE #(.fan_in(1)) vasim_68_ste_632 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_631 }),
                .match(vasim_68_w_match_632) ,
                .active_state(vasim_68_w_out_632));




/*wire vasim_68_w_out_633;
*/

wire vasim_68_lut_match_633;
wire vasim_68_w_match_633;

    
    
    

LUT_Match_vasim_68_633 #(8) lut_match_vasim_68_633(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_633));


assign vasim_68_w_match_633 = vasim_68_lut_match_633 ;

STE #(.fan_in(2)) vasim_68_ste_633 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_632 }),
                .match(vasim_68_w_match_633) ,
                .active_state(vasim_68_w_out_633));




/*wire vasim_68_w_out_634;
*/

wire vasim_68_lut_match_634;
wire vasim_68_w_match_634;

    
    
    

LUT_Match_vasim_68_634 #(8) lut_match_vasim_68_634(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_634));


assign vasim_68_w_match_634 = vasim_68_lut_match_634 ;

STE #(.fan_in(1)) vasim_68_ste_634 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_633 }),
                .match(vasim_68_w_match_634) ,
                .active_state(vasim_68_w_out_634));




/*wire vasim_68_w_out_635;
*/

wire vasim_68_lut_match_635;
wire vasim_68_w_match_635;

    
    
    

LUT_Match_vasim_68_635 #(8) lut_match_vasim_68_635(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_635));


assign vasim_68_w_match_635 = vasim_68_lut_match_635 ;

STE #(.fan_in(2)) vasim_68_ste_635 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_634 }),
                .match(vasim_68_w_match_635) ,
                .active_state(vasim_68_w_out_635));




/*wire vasim_68_w_out_636;
*/

wire vasim_68_lut_match_636;
wire vasim_68_w_match_636;

    
    
    

LUT_Match_vasim_68_636 #(8) lut_match_vasim_68_636(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_636));


assign vasim_68_w_match_636 = vasim_68_lut_match_636 ;

STE #(.fan_in(1)) vasim_68_ste_636 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_635 }),
                .match(vasim_68_w_match_636) ,
                .active_state(vasim_68_w_out_636));




/*wire vasim_68_w_out_637;
*/

wire vasim_68_lut_match_637;
wire vasim_68_w_match_637;

    
    
    

LUT_Match_vasim_68_637 #(8) lut_match_vasim_68_637(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_637));


assign vasim_68_w_match_637 = vasim_68_lut_match_637 ;

STE #(.fan_in(1)) vasim_68_ste_637 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_526 }),
                .match(vasim_68_w_match_637) ,
                .active_state(vasim_68_w_out_637));




/*wire vasim_68_w_out_638;
*/

wire vasim_68_lut_match_638;
wire vasim_68_w_match_638;

    
    
    

LUT_Match_vasim_68_638 #(8) lut_match_vasim_68_638(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_638));


assign vasim_68_w_match_638 = vasim_68_lut_match_638 ;

STE #(.fan_in(2)) vasim_68_ste_638 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_626 }),
                .match(vasim_68_w_match_638) ,
                .active_state(vasim_68_w_out_638));




/*wire vasim_68_w_out_639;
*/

wire vasim_68_lut_match_639;
wire vasim_68_w_match_639;

    
    
    

LUT_Match_vasim_68_639 #(8) lut_match_vasim_68_639(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_639));


assign vasim_68_w_match_639 = vasim_68_lut_match_639 ;

STE #(.fan_in(2)) vasim_68_ste_639 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_636 }),
                .match(vasim_68_w_match_639) ,
                .active_state(vasim_68_w_out_639));




/*wire vasim_68_w_out_640;
*/

wire vasim_68_lut_match_640;
wire vasim_68_w_match_640;

    
    
    

LUT_Match_vasim_68_640 #(8) lut_match_vasim_68_640(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_640));


assign vasim_68_w_match_640 = vasim_68_lut_match_640 ;

STE #(.fan_in(1)) vasim_68_ste_640 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_639 }),
                .match(vasim_68_w_match_640) ,
                .active_state(vasim_68_w_out_640));




/*wire vasim_68_w_out_641;
*/

wire vasim_68_lut_match_641;
wire vasim_68_w_match_641;

    
    
    

LUT_Match_vasim_68_641 #(8) lut_match_vasim_68_641(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_641));


assign vasim_68_w_match_641 = vasim_68_lut_match_641 ;

STE #(.fan_in(2)) vasim_68_ste_641 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_640 }),
                .match(vasim_68_w_match_641) ,
                .active_state(vasim_68_w_out_641));




/*wire vasim_68_w_out_642;
*/

wire vasim_68_lut_match_642;
wire vasim_68_w_match_642;

    
    
    

LUT_Match_vasim_68_642 #(8) lut_match_vasim_68_642(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_642));


assign vasim_68_w_match_642 = vasim_68_lut_match_642 ;

STE #(.fan_in(1)) vasim_68_ste_642 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_641 }),
                .match(vasim_68_w_match_642) ,
                .active_state(vasim_68_w_out_642));




/*wire vasim_68_w_out_643;
*/

wire vasim_68_lut_match_643;
wire vasim_68_w_match_643;

    
    
    

LUT_Match_vasim_68_643 #(8) lut_match_vasim_68_643(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_643));


assign vasim_68_w_match_643 = vasim_68_lut_match_643 ;

STE #(.fan_in(2)) vasim_68_ste_643 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_642 }),
                .match(vasim_68_w_match_643) ,
                .active_state(vasim_68_w_out_643));




/*wire vasim_68_w_out_644;
*/

wire vasim_68_lut_match_644;
wire vasim_68_w_match_644;

    
    
    

LUT_Match_vasim_68_644 #(8) lut_match_vasim_68_644(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_644));


assign vasim_68_w_match_644 = vasim_68_lut_match_644 ;

STE #(.fan_in(1)) vasim_68_ste_644 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_643 }),
                .match(vasim_68_w_match_644) ,
                .active_state(vasim_68_w_out_644));




/*wire vasim_68_w_out_645;
*/

wire vasim_68_lut_match_645;
wire vasim_68_w_match_645;

    
    
    

LUT_Match_vasim_68_645 #(8) lut_match_vasim_68_645(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_645));


assign vasim_68_w_match_645 = vasim_68_lut_match_645 ;

STE #(.fan_in(2)) vasim_68_ste_645 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_644 }),
                .match(vasim_68_w_match_645) ,
                .active_state(vasim_68_w_out_645));




/*wire vasim_68_w_out_646;
*/

wire vasim_68_lut_match_646;
wire vasim_68_w_match_646;

    
    
    

LUT_Match_vasim_68_646 #(8) lut_match_vasim_68_646(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_646));


assign vasim_68_w_match_646 = vasim_68_lut_match_646 ;

STE #(.fan_in(1)) vasim_68_ste_646 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_645 }),
                .match(vasim_68_w_match_646) ,
                .active_state(vasim_68_w_out_646));




/*wire vasim_68_w_out_647;
*/

wire vasim_68_lut_match_647;
wire vasim_68_w_match_647;

    
    
    

LUT_Match_vasim_68_647 #(8) lut_match_vasim_68_647(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_647));


assign vasim_68_w_match_647 = vasim_68_lut_match_647 ;

STE #(.fan_in(2)) vasim_68_ste_647 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_646 }),
                .match(vasim_68_w_match_647) ,
                .active_state(vasim_68_w_out_647));




/*wire vasim_68_w_out_648;
*/

wire vasim_68_lut_match_648;
wire vasim_68_w_match_648;

    
    
    

LUT_Match_vasim_68_648 #(8) lut_match_vasim_68_648(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_648));


assign vasim_68_w_match_648 = vasim_68_lut_match_648 ;

STE #(.fan_in(1)) vasim_68_ste_648 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_647 }),
                .match(vasim_68_w_match_648) ,
                .active_state(vasim_68_w_out_648));




/*wire vasim_68_w_out_649;
*/

wire vasim_68_lut_match_649;
wire vasim_68_w_match_649;

    
    
    

LUT_Match_vasim_68_649 #(8) lut_match_vasim_68_649(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_649));


assign vasim_68_w_match_649 = vasim_68_lut_match_649 ;

STE #(.fan_in(1)) vasim_68_ste_649 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_638 }),
                .match(vasim_68_w_match_649) ,
                .active_state(vasim_68_w_out_649));




/*wire vasim_68_w_out_650;
*/

wire vasim_68_lut_match_650;
wire vasim_68_w_match_650;

    
    
    

LUT_Match_vasim_68_650 #(8) lut_match_vasim_68_650(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_650));


assign vasim_68_w_match_650 = vasim_68_lut_match_650 ;

STE #(.fan_in(2)) vasim_68_ste_650 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_648 }),
                .match(vasim_68_w_match_650) ,
                .active_state(vasim_68_w_out_650));




/*wire vasim_68_w_out_651;
*/

wire vasim_68_lut_match_651;
wire vasim_68_w_match_651;

    
    
    

LUT_Match_vasim_68_651 #(8) lut_match_vasim_68_651(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_651));


assign vasim_68_w_match_651 = vasim_68_lut_match_651 ;

STE #(.fan_in(1)) vasim_68_ste_651 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_650 }),
                .match(vasim_68_w_match_651) ,
                .active_state(vasim_68_w_out_651));




/*wire vasim_68_w_out_652;
*/

wire vasim_68_lut_match_652;
wire vasim_68_w_match_652;

    
    
    

LUT_Match_vasim_68_652 #(8) lut_match_vasim_68_652(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_652));


assign vasim_68_w_match_652 = vasim_68_lut_match_652 ;

STE #(.fan_in(2)) vasim_68_ste_652 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_651 }),
                .match(vasim_68_w_match_652) ,
                .active_state(vasim_68_w_out_652));




/*wire vasim_68_w_out_653;
*/

wire vasim_68_lut_match_653;
wire vasim_68_w_match_653;

    
    
    

LUT_Match_vasim_68_653 #(8) lut_match_vasim_68_653(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_653));


assign vasim_68_w_match_653 = vasim_68_lut_match_653 ;

STE #(.fan_in(1)) vasim_68_ste_653 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_652 }),
                .match(vasim_68_w_match_653) ,
                .active_state(vasim_68_w_out_653));




/*wire vasim_68_w_out_654;
*/

wire vasim_68_lut_match_654;
wire vasim_68_w_match_654;

    
    
    

LUT_Match_vasim_68_654 #(8) lut_match_vasim_68_654(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_654));


assign vasim_68_w_match_654 = vasim_68_lut_match_654 ;

STE #(.fan_in(2)) vasim_68_ste_654 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_653 }),
                .match(vasim_68_w_match_654) ,
                .active_state(vasim_68_w_out_654));




/*wire vasim_68_w_out_655;
*/

wire vasim_68_lut_match_655;
wire vasim_68_w_match_655;

    
    
    

LUT_Match_vasim_68_655 #(8) lut_match_vasim_68_655(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_655));


assign vasim_68_w_match_655 = vasim_68_lut_match_655 ;

STE #(.fan_in(1)) vasim_68_ste_655 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_654 }),
                .match(vasim_68_w_match_655) ,
                .active_state(vasim_68_w_out_655));




/*wire vasim_68_w_out_656;
*/

wire vasim_68_lut_match_656;
wire vasim_68_w_match_656;

    
    
    

LUT_Match_vasim_68_656 #(8) lut_match_vasim_68_656(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_656));


assign vasim_68_w_match_656 = vasim_68_lut_match_656 ;

STE #(.fan_in(2)) vasim_68_ste_656 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_655 }),
                .match(vasim_68_w_match_656) ,
                .active_state(vasim_68_w_out_656));




/*wire vasim_68_w_out_657;
*/

wire vasim_68_lut_match_657;
wire vasim_68_w_match_657;

    
    
    

LUT_Match_vasim_68_657 #(8) lut_match_vasim_68_657(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_657));


assign vasim_68_w_match_657 = vasim_68_lut_match_657 ;

STE #(.fan_in(1)) vasim_68_ste_657 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_656 }),
                .match(vasim_68_w_match_657) ,
                .active_state(vasim_68_w_out_657));




/*wire vasim_68_w_out_658;
*/

wire vasim_68_lut_match_658;
wire vasim_68_w_match_658;

    
    
    

LUT_Match_vasim_68_658 #(8) lut_match_vasim_68_658(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_658));


assign vasim_68_w_match_658 = vasim_68_lut_match_658 ;

STE #(.fan_in(2)) vasim_68_ste_658 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_657 }),
                .match(vasim_68_w_match_658) ,
                .active_state(vasim_68_w_out_658));




/*wire vasim_68_w_out_659;
*/

wire vasim_68_lut_match_659;
wire vasim_68_w_match_659;

    
    
    

LUT_Match_vasim_68_659 #(8) lut_match_vasim_68_659(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_659));


assign vasim_68_w_match_659 = vasim_68_lut_match_659 ;

STE #(.fan_in(1)) vasim_68_ste_659 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_658 }),
                .match(vasim_68_w_match_659) ,
                .active_state(vasim_68_w_out_659));




/*wire vasim_68_w_out_660;
*/

wire vasim_68_lut_match_660;
wire vasim_68_w_match_660;

    
    
    

LUT_Match_vasim_68_660 #(8) lut_match_vasim_68_660(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_660));


assign vasim_68_w_match_660 = vasim_68_lut_match_660 ;

STE #(.fan_in(2)) vasim_68_ste_660 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_649, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_660) ,
                .active_state(vasim_68_w_out_660));




/*wire vasim_68_w_out_661;
*/

wire vasim_68_lut_match_661;
wire vasim_68_w_match_661;

    
    
    

LUT_Match_vasim_68_661 #(8) lut_match_vasim_68_661(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_661));


assign vasim_68_w_match_661 = vasim_68_lut_match_661 ;

STE #(.fan_in(2)) vasim_68_ste_661 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_659 }),
                .match(vasim_68_w_match_661) ,
                .active_state(vasim_68_w_out_661));




/*wire vasim_68_w_out_662;
*/

wire vasim_68_lut_match_662;
wire vasim_68_w_match_662;

    
    
    

LUT_Match_vasim_68_662 #(8) lut_match_vasim_68_662(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_662));


assign vasim_68_w_match_662 = vasim_68_lut_match_662 ;

STE #(.fan_in(1)) vasim_68_ste_662 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_661 }),
                .match(vasim_68_w_match_662) ,
                .active_state(vasim_68_w_out_662));




/*wire vasim_68_w_out_663;
*/

wire vasim_68_lut_match_663;
wire vasim_68_w_match_663;

    
    
    

LUT_Match_vasim_68_663 #(8) lut_match_vasim_68_663(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_663));


assign vasim_68_w_match_663 = vasim_68_lut_match_663 ;

STE #(.fan_in(2)) vasim_68_ste_663 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_662 }),
                .match(vasim_68_w_match_663) ,
                .active_state(vasim_68_w_out_663));




/*wire vasim_68_w_out_664;
*/

wire vasim_68_lut_match_664;
wire vasim_68_w_match_664;

    
    
    

LUT_Match_vasim_68_664 #(8) lut_match_vasim_68_664(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_664));


assign vasim_68_w_match_664 = vasim_68_lut_match_664 ;

STE #(.fan_in(1)) vasim_68_ste_664 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_663 }),
                .match(vasim_68_w_match_664) ,
                .active_state(vasim_68_w_out_664));




/*wire vasim_68_w_out_665;
*/

wire vasim_68_lut_match_665;
wire vasim_68_w_match_665;

    
    
    

LUT_Match_vasim_68_665 #(8) lut_match_vasim_68_665(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_665));


assign vasim_68_w_match_665 = vasim_68_lut_match_665 ;

STE #(.fan_in(2)) vasim_68_ste_665 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_664 }),
                .match(vasim_68_w_match_665) ,
                .active_state(vasim_68_w_out_665));




/*wire vasim_68_w_out_666;
*/

wire vasim_68_lut_match_666;
wire vasim_68_w_match_666;

    
    
    

LUT_Match_vasim_68_666 #(8) lut_match_vasim_68_666(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_666));


assign vasim_68_w_match_666 = vasim_68_lut_match_666 ;

STE #(.fan_in(1)) vasim_68_ste_666 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_665 }),
                .match(vasim_68_w_match_666) ,
                .active_state(vasim_68_w_out_666));




/*wire vasim_68_w_out_667;
*/

wire vasim_68_lut_match_667;
wire vasim_68_w_match_667;

    
    
    

LUT_Match_vasim_68_667 #(8) lut_match_vasim_68_667(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_667));


assign vasim_68_w_match_667 = vasim_68_lut_match_667 ;

STE #(.fan_in(2)) vasim_68_ste_667 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_666 }),
                .match(vasim_68_w_match_667) ,
                .active_state(vasim_68_w_out_667));




/*wire vasim_68_w_out_668;
*/

wire vasim_68_lut_match_668;
wire vasim_68_w_match_668;

    
    
    

LUT_Match_vasim_68_668 #(8) lut_match_vasim_68_668(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_668));


assign vasim_68_w_match_668 = vasim_68_lut_match_668 ;

STE #(.fan_in(1)) vasim_68_ste_668 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_667 }),
                .match(vasim_68_w_match_668) ,
                .active_state(vasim_68_w_out_668));




/*wire vasim_68_w_out_669;
*/

wire vasim_68_lut_match_669;
wire vasim_68_w_match_669;

    
    
    

LUT_Match_vasim_68_669 #(8) lut_match_vasim_68_669(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_669));


assign vasim_68_w_match_669 = vasim_68_lut_match_669 ;

STE #(.fan_in(2)) vasim_68_ste_669 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_668 }),
                .match(vasim_68_w_match_669) ,
                .active_state(vasim_68_w_out_669));




/*wire vasim_68_w_out_670;
*/

wire vasim_68_lut_match_670;
wire vasim_68_w_match_670;

    
    
    

LUT_Match_vasim_68_670 #(8) lut_match_vasim_68_670(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_670));


assign vasim_68_w_match_670 = vasim_68_lut_match_670 ;

STE #(.fan_in(1)) vasim_68_ste_670 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_669 }),
                .match(vasim_68_w_match_670) ,
                .active_state(vasim_68_w_out_670));




/*wire vasim_68_w_out_671;
*/

wire vasim_68_lut_match_671;
wire vasim_68_w_match_671;

    
    
    

LUT_Match_vasim_68_671 #(8) lut_match_vasim_68_671(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_671));


assign vasim_68_w_match_671 = vasim_68_lut_match_671 ;

STE #(.fan_in(1)) vasim_68_ste_671 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_660 }),
                .match(vasim_68_w_match_671) ,
                .active_state(vasim_68_w_out_671));




/*wire vasim_68_w_out_672;
*/

wire vasim_68_lut_match_672;
wire vasim_68_w_match_672;

    
    
    

LUT_Match_vasim_68_672 #(8) lut_match_vasim_68_672(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_672));


assign vasim_68_w_match_672 = vasim_68_lut_match_672 ;

STE #(.fan_in(2)) vasim_68_ste_672 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_670 }),
                .match(vasim_68_w_match_672) ,
                .active_state(vasim_68_w_out_672));




/*wire vasim_68_w_out_673;
*/

wire vasim_68_lut_match_673;
wire vasim_68_w_match_673;

    
    
    

LUT_Match_vasim_68_673 #(8) lut_match_vasim_68_673(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_673));


assign vasim_68_w_match_673 = vasim_68_lut_match_673 ;

STE #(.fan_in(1)) vasim_68_ste_673 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_672 }),
                .match(vasim_68_w_match_673) ,
                .active_state(vasim_68_w_out_673));




/*wire vasim_68_w_out_674;
*/

wire vasim_68_lut_match_674;
wire vasim_68_w_match_674;

    
    
    

LUT_Match_vasim_68_674 #(8) lut_match_vasim_68_674(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_674));


assign vasim_68_w_match_674 = vasim_68_lut_match_674 ;

STE #(.fan_in(2)) vasim_68_ste_674 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_673 }),
                .match(vasim_68_w_match_674) ,
                .active_state(vasim_68_w_out_674));




/*wire vasim_68_w_out_675;
*/

wire vasim_68_lut_match_675;
wire vasim_68_w_match_675;

    
    
    

LUT_Match_vasim_68_675 #(8) lut_match_vasim_68_675(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_675));


assign vasim_68_w_match_675 = vasim_68_lut_match_675 ;

STE #(.fan_in(1)) vasim_68_ste_675 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_674 }),
                .match(vasim_68_w_match_675) ,
                .active_state(vasim_68_w_out_675));




/*wire vasim_68_w_out_676;
*/

wire vasim_68_lut_match_676;
wire vasim_68_w_match_676;

    
    
    

LUT_Match_vasim_68_676 #(8) lut_match_vasim_68_676(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_676));


assign vasim_68_w_match_676 = vasim_68_lut_match_676 ;

STE #(.fan_in(2)) vasim_68_ste_676 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_675 }),
                .match(vasim_68_w_match_676) ,
                .active_state(vasim_68_w_out_676));




/*wire vasim_68_w_out_677;
*/

wire vasim_68_lut_match_677;
wire vasim_68_w_match_677;

    
    
    

LUT_Match_vasim_68_677 #(8) lut_match_vasim_68_677(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_677));


assign vasim_68_w_match_677 = vasim_68_lut_match_677 ;

STE #(.fan_in(1)) vasim_68_ste_677 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_676 }),
                .match(vasim_68_w_match_677) ,
                .active_state(vasim_68_w_out_677));




/*wire vasim_68_w_out_678;
*/

wire vasim_68_lut_match_678;
wire vasim_68_w_match_678;

    
    
    

LUT_Match_vasim_68_678 #(8) lut_match_vasim_68_678(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_678));


assign vasim_68_w_match_678 = vasim_68_lut_match_678 ;

STE #(.fan_in(2)) vasim_68_ste_678 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_677 }),
                .match(vasim_68_w_match_678) ,
                .active_state(vasim_68_w_out_678));




/*wire vasim_68_w_out_679;
*/

wire vasim_68_lut_match_679;
wire vasim_68_w_match_679;

    
    
    

LUT_Match_vasim_68_679 #(8) lut_match_vasim_68_679(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_679));


assign vasim_68_w_match_679 = vasim_68_lut_match_679 ;

STE #(.fan_in(1)) vasim_68_ste_679 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_678 }),
                .match(vasim_68_w_match_679) ,
                .active_state(vasim_68_w_out_679));




/*wire vasim_68_w_out_680;
*/

wire vasim_68_lut_match_680;
wire vasim_68_w_match_680;

    
    
    

LUT_Match_vasim_68_680 #(8) lut_match_vasim_68_680(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_680));


assign vasim_68_w_match_680 = vasim_68_lut_match_680 ;

STE #(.fan_in(2)) vasim_68_ste_680 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_679 }),
                .match(vasim_68_w_match_680) ,
                .active_state(vasim_68_w_out_680));




/*wire vasim_68_w_out_681;
*/

wire vasim_68_lut_match_681;
wire vasim_68_w_match_681;

    
    
    

LUT_Match_vasim_68_681 #(8) lut_match_vasim_68_681(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_681));


assign vasim_68_w_match_681 = vasim_68_lut_match_681 ;

STE #(.fan_in(1)) vasim_68_ste_681 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_680 }),
                .match(vasim_68_w_match_681) ,
                .active_state(vasim_68_w_out_681));




/*wire vasim_68_w_out_682;
*/

wire vasim_68_lut_match_682;
wire vasim_68_w_match_682;

    
    
    

LUT_Match_vasim_68_682 #(8) lut_match_vasim_68_682(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_682));


assign vasim_68_w_match_682 = vasim_68_lut_match_682 ;

STE #(.fan_in(2)) vasim_68_ste_682 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_671 }),
                .match(vasim_68_w_match_682) ,
                .active_state(vasim_68_w_out_682));




/*wire vasim_68_w_out_683;
*/

wire vasim_68_lut_match_683;
wire vasim_68_w_match_683;

    
    
    

LUT_Match_vasim_68_683 #(8) lut_match_vasim_68_683(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_683));


assign vasim_68_w_match_683 = vasim_68_lut_match_683 ;

STE #(.fan_in(2)) vasim_68_ste_683 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_681 }),
                .match(vasim_68_w_match_683) ,
                .active_state(vasim_68_w_out_683));




/*wire vasim_68_w_out_684;
*/

wire vasim_68_lut_match_684;
wire vasim_68_w_match_684;

    
    
    

LUT_Match_vasim_68_684 #(8) lut_match_vasim_68_684(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_684));


assign vasim_68_w_match_684 = vasim_68_lut_match_684 ;

STE #(.fan_in(1)) vasim_68_ste_684 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_683 }),
                .match(vasim_68_w_match_684) ,
                .active_state(vasim_68_w_out_684));




/*wire vasim_68_w_out_685;
*/

wire vasim_68_lut_match_685;
wire vasim_68_w_match_685;

    
    
    

LUT_Match_vasim_68_685 #(8) lut_match_vasim_68_685(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_685));


assign vasim_68_w_match_685 = vasim_68_lut_match_685 ;

STE #(.fan_in(2)) vasim_68_ste_685 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_684 }),
                .match(vasim_68_w_match_685) ,
                .active_state(vasim_68_w_out_685));




/*wire vasim_68_w_out_686;
*/

wire vasim_68_lut_match_686;
wire vasim_68_w_match_686;

    
    
    

LUT_Match_vasim_68_686 #(8) lut_match_vasim_68_686(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_686));


assign vasim_68_w_match_686 = vasim_68_lut_match_686 ;

STE #(.fan_in(1)) vasim_68_ste_686 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_685 }),
                .match(vasim_68_w_match_686) ,
                .active_state(vasim_68_w_out_686));




/*wire vasim_68_w_out_687;
*/

wire vasim_68_lut_match_687;
wire vasim_68_w_match_687;

    
    
    

LUT_Match_vasim_68_687 #(8) lut_match_vasim_68_687(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_687));


assign vasim_68_w_match_687 = vasim_68_lut_match_687 ;

STE #(.fan_in(2)) vasim_68_ste_687 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_686 }),
                .match(vasim_68_w_match_687) ,
                .active_state(vasim_68_w_out_687));




/*wire vasim_68_w_out_688;
*/

wire vasim_68_lut_match_688;
wire vasim_68_w_match_688;

    
    
    

LUT_Match_vasim_68_688 #(8) lut_match_vasim_68_688(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_688));


assign vasim_68_w_match_688 = vasim_68_lut_match_688 ;

STE #(.fan_in(1)) vasim_68_ste_688 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_687 }),
                .match(vasim_68_w_match_688) ,
                .active_state(vasim_68_w_out_688));




/*wire vasim_68_w_out_689;
*/

wire vasim_68_lut_match_689;
wire vasim_68_w_match_689;

    
    
    

LUT_Match_vasim_68_689 #(8) lut_match_vasim_68_689(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_689));


assign vasim_68_w_match_689 = vasim_68_lut_match_689 ;

STE #(.fan_in(2)) vasim_68_ste_689 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_688 }),
                .match(vasim_68_w_match_689) ,
                .active_state(vasim_68_w_out_689));




/*wire vasim_68_w_out_690;
*/

wire vasim_68_lut_match_690;
wire vasim_68_w_match_690;

    
    
    

LUT_Match_vasim_68_690 #(8) lut_match_vasim_68_690(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_690));


assign vasim_68_w_match_690 = vasim_68_lut_match_690 ;

STE #(.fan_in(1)) vasim_68_ste_690 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_689 }),
                .match(vasim_68_w_match_690) ,
                .active_state(vasim_68_w_out_690));




/*wire vasim_68_w_out_691;
*/

wire vasim_68_lut_match_691;
wire vasim_68_w_match_691;

    
    
    

LUT_Match_vasim_68_691 #(8) lut_match_vasim_68_691(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_691));


assign vasim_68_w_match_691 = vasim_68_lut_match_691 ;

STE #(.fan_in(2)) vasim_68_ste_691 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_690 }),
                .match(vasim_68_w_match_691) ,
                .active_state(vasim_68_w_out_691));




/*wire vasim_68_w_out_692;
*/

wire vasim_68_lut_match_692;
wire vasim_68_w_match_692;

    
    
    

LUT_Match_vasim_68_692 #(8) lut_match_vasim_68_692(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_692));


assign vasim_68_w_match_692 = vasim_68_lut_match_692 ;

STE #(.fan_in(1)) vasim_68_ste_692 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_691 }),
                .match(vasim_68_w_match_692) ,
                .active_state(vasim_68_w_out_692));




/*wire vasim_68_w_out_693;
*/

wire vasim_68_lut_match_693;
wire vasim_68_w_match_693;

    
    
    

LUT_Match_vasim_68_693 #(8) lut_match_vasim_68_693(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_693));


assign vasim_68_w_match_693 = vasim_68_lut_match_693 ;

STE #(.fan_in(1)) vasim_68_ste_693 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_682 }),
                .match(vasim_68_w_match_693) ,
                .active_state(vasim_68_w_out_693));




/*wire vasim_68_w_out_694;
*/

wire vasim_68_lut_match_694;
wire vasim_68_w_match_694;

    
    
    

LUT_Match_vasim_68_694 #(8) lut_match_vasim_68_694(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_694));


assign vasim_68_w_match_694 = vasim_68_lut_match_694 ;

STE #(.fan_in(2)) vasim_68_ste_694 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_692 }),
                .match(vasim_68_w_match_694) ,
                .active_state(vasim_68_w_out_694));




/*wire vasim_68_w_out_695;
*/

wire vasim_68_lut_match_695;
wire vasim_68_w_match_695;

    
    
    

LUT_Match_vasim_68_695 #(8) lut_match_vasim_68_695(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_695));


assign vasim_68_w_match_695 = vasim_68_lut_match_695 ;

STE #(.fan_in(1)) vasim_68_ste_695 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_694 }),
                .match(vasim_68_w_match_695) ,
                .active_state(vasim_68_w_out_695));




/*wire vasim_68_w_out_696;
*/

wire vasim_68_lut_match_696;
wire vasim_68_w_match_696;

    
    
    

LUT_Match_vasim_68_696 #(8) lut_match_vasim_68_696(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_696));


assign vasim_68_w_match_696 = vasim_68_lut_match_696 ;

STE #(.fan_in(2)) vasim_68_ste_696 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_695 }),
                .match(vasim_68_w_match_696) ,
                .active_state(vasim_68_w_out_696));




/*wire vasim_68_w_out_697;
*/

wire vasim_68_lut_match_697;
wire vasim_68_w_match_697;

    
    
    

LUT_Match_vasim_68_697 #(8) lut_match_vasim_68_697(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_697));


assign vasim_68_w_match_697 = vasim_68_lut_match_697 ;

STE #(.fan_in(1)) vasim_68_ste_697 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_696 }),
                .match(vasim_68_w_match_697) ,
                .active_state(vasim_68_w_out_697));




/*wire vasim_68_w_out_698;
*/

wire vasim_68_lut_match_698;
wire vasim_68_w_match_698;

    
    
    

LUT_Match_vasim_68_698 #(8) lut_match_vasim_68_698(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_698));


assign vasim_68_w_match_698 = vasim_68_lut_match_698 ;

STE #(.fan_in(2)) vasim_68_ste_698 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_697 }),
                .match(vasim_68_w_match_698) ,
                .active_state(vasim_68_w_out_698));




/*wire vasim_68_w_out_699;
*/

wire vasim_68_lut_match_699;
wire vasim_68_w_match_699;

    
    
    

LUT_Match_vasim_68_699 #(8) lut_match_vasim_68_699(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_699));


assign vasim_68_w_match_699 = vasim_68_lut_match_699 ;

STE #(.fan_in(1)) vasim_68_ste_699 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_698 }),
                .match(vasim_68_w_match_699) ,
                .active_state(vasim_68_w_out_699));




/*wire vasim_68_w_out_700;
*/

wire vasim_68_lut_match_700;
wire vasim_68_w_match_700;

    
    
    

LUT_Match_vasim_68_700 #(8) lut_match_vasim_68_700(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_700));


assign vasim_68_w_match_700 = vasim_68_lut_match_700 ;

STE #(.fan_in(2)) vasim_68_ste_700 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_699 }),
                .match(vasim_68_w_match_700) ,
                .active_state(vasim_68_w_out_700));




/*wire vasim_68_w_out_701;
*/

wire vasim_68_lut_match_701;
wire vasim_68_w_match_701;

    
    
    

LUT_Match_vasim_68_701 #(8) lut_match_vasim_68_701(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_701));


assign vasim_68_w_match_701 = vasim_68_lut_match_701 ;

STE #(.fan_in(1)) vasim_68_ste_701 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_700 }),
                .match(vasim_68_w_match_701) ,
                .active_state(vasim_68_w_out_701));




/*wire vasim_68_w_out_702;
*/

wire vasim_68_lut_match_702;
wire vasim_68_w_match_702;

    
    
    

LUT_Match_vasim_68_702 #(8) lut_match_vasim_68_702(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_702));


assign vasim_68_w_match_702 = vasim_68_lut_match_702 ;

STE #(.fan_in(2)) vasim_68_ste_702 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_701 }),
                .match(vasim_68_w_match_702) ,
                .active_state(vasim_68_w_out_702));




/*wire vasim_68_w_out_703;
*/

wire vasim_68_lut_match_703;
wire vasim_68_w_match_703;

    
    
    

LUT_Match_vasim_68_703 #(8) lut_match_vasim_68_703(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_703));


assign vasim_68_w_match_703 = vasim_68_lut_match_703 ;

STE #(.fan_in(1)) vasim_68_ste_703 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_702 }),
                .match(vasim_68_w_match_703) ,
                .active_state(vasim_68_w_out_703));




/*wire vasim_68_w_out_704;
*/

wire vasim_68_lut_match_704;
wire vasim_68_w_match_704;

    
    
    

LUT_Match_vasim_68_704 #(8) lut_match_vasim_68_704(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_704));


assign vasim_68_w_match_704 = vasim_68_lut_match_704 ;

STE #(.fan_in(2)) vasim_68_ste_704 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_693 }),
                .match(vasim_68_w_match_704) ,
                .active_state(vasim_68_w_out_704));




/*wire vasim_68_w_out_705;
*/

wire vasim_68_lut_match_705;
wire vasim_68_w_match_705;

    
    
    

LUT_Match_vasim_68_705 #(8) lut_match_vasim_68_705(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_705));


assign vasim_68_w_match_705 = vasim_68_lut_match_705 ;

STE #(.fan_in(2)) vasim_68_ste_705 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_703 }),
                .match(vasim_68_w_match_705) ,
                .active_state(vasim_68_w_out_705));




/*wire vasim_68_w_out_706;
*/

wire vasim_68_lut_match_706;
wire vasim_68_w_match_706;

    
    
    

LUT_Match_vasim_68_706 #(8) lut_match_vasim_68_706(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_706));


assign vasim_68_w_match_706 = vasim_68_lut_match_706 ;

STE #(.fan_in(1)) vasim_68_ste_706 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_705 }),
                .match(vasim_68_w_match_706) ,
                .active_state(vasim_68_w_out_706));




/*wire vasim_68_w_out_707;
*/

wire vasim_68_lut_match_707;
wire vasim_68_w_match_707;

    
    
    

LUT_Match_vasim_68_707 #(8) lut_match_vasim_68_707(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_707));


assign vasim_68_w_match_707 = vasim_68_lut_match_707 ;

STE #(.fan_in(2)) vasim_68_ste_707 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_706 }),
                .match(vasim_68_w_match_707) ,
                .active_state(vasim_68_w_out_707));




/*wire vasim_68_w_out_708;
*/

wire vasim_68_lut_match_708;
wire vasim_68_w_match_708;

    
    
    

LUT_Match_vasim_68_708 #(8) lut_match_vasim_68_708(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_708));


assign vasim_68_w_match_708 = vasim_68_lut_match_708 ;

STE #(.fan_in(1)) vasim_68_ste_708 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_707 }),
                .match(vasim_68_w_match_708) ,
                .active_state(vasim_68_w_out_708));




/*wire vasim_68_w_out_709;
*/

wire vasim_68_lut_match_709;
wire vasim_68_w_match_709;

    
    
    

LUT_Match_vasim_68_709 #(8) lut_match_vasim_68_709(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_709));


assign vasim_68_w_match_709 = vasim_68_lut_match_709 ;

STE #(.fan_in(2)) vasim_68_ste_709 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_708 }),
                .match(vasim_68_w_match_709) ,
                .active_state(vasim_68_w_out_709));




/*wire vasim_68_w_out_710;
*/

wire vasim_68_lut_match_710;
wire vasim_68_w_match_710;

    
    
    

LUT_Match_vasim_68_710 #(8) lut_match_vasim_68_710(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_710));


assign vasim_68_w_match_710 = vasim_68_lut_match_710 ;

STE #(.fan_in(1)) vasim_68_ste_710 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_709 }),
                .match(vasim_68_w_match_710) ,
                .active_state(vasim_68_w_out_710));




/*wire vasim_68_w_out_711;
*/

wire vasim_68_lut_match_711;
wire vasim_68_w_match_711;

    
    
    

LUT_Match_vasim_68_711 #(8) lut_match_vasim_68_711(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_711));


assign vasim_68_w_match_711 = vasim_68_lut_match_711 ;

STE #(.fan_in(2)) vasim_68_ste_711 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_710 }),
                .match(vasim_68_w_match_711) ,
                .active_state(vasim_68_w_out_711));




/*wire vasim_68_w_out_712;
*/

wire vasim_68_lut_match_712;
wire vasim_68_w_match_712;

    
    
    

LUT_Match_vasim_68_712 #(8) lut_match_vasim_68_712(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_712));


assign vasim_68_w_match_712 = vasim_68_lut_match_712 ;

STE #(.fan_in(1)) vasim_68_ste_712 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_711 }),
                .match(vasim_68_w_match_712) ,
                .active_state(vasim_68_w_out_712));




/*wire vasim_68_w_out_713;
*/

wire vasim_68_lut_match_713;
wire vasim_68_w_match_713;

    
    
    

LUT_Match_vasim_68_713 #(8) lut_match_vasim_68_713(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_713));


assign vasim_68_w_match_713 = vasim_68_lut_match_713 ;

STE #(.fan_in(2)) vasim_68_ste_713 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_712 }),
                .match(vasim_68_w_match_713) ,
                .active_state(vasim_68_w_out_713));




/*wire vasim_68_w_out_714;
*/

wire vasim_68_lut_match_714;
wire vasim_68_w_match_714;

    
    
    

LUT_Match_vasim_68_714 #(8) lut_match_vasim_68_714(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_714));


assign vasim_68_w_match_714 = vasim_68_lut_match_714 ;

STE #(.fan_in(1)) vasim_68_ste_714 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_713 }),
                .match(vasim_68_w_match_714) ,
                .active_state(vasim_68_w_out_714));




/*wire vasim_68_w_out_715;
*/

wire vasim_68_lut_match_715;
wire vasim_68_w_match_715;

    
    
    

LUT_Match_vasim_68_715 #(8) lut_match_vasim_68_715(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_715));


assign vasim_68_w_match_715 = vasim_68_lut_match_715 ;

STE #(.fan_in(1)) vasim_68_ste_715 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_704 }),
                .match(vasim_68_w_match_715) ,
                .active_state(vasim_68_w_out_715));




/*wire vasim_68_w_out_716;
*/

wire vasim_68_lut_match_716;
wire vasim_68_w_match_716;

    
    
    

LUT_Match_vasim_68_716 #(8) lut_match_vasim_68_716(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_716));


assign vasim_68_w_match_716 = vasim_68_lut_match_716 ;

STE #(.fan_in(2)) vasim_68_ste_716 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_714 }),
                .match(vasim_68_w_match_716) ,
                .active_state(vasim_68_w_out_716));




/*wire vasim_68_w_out_717;
*/

wire vasim_68_lut_match_717;
wire vasim_68_w_match_717;

    
    
    

LUT_Match_vasim_68_717 #(8) lut_match_vasim_68_717(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_717));


assign vasim_68_w_match_717 = vasim_68_lut_match_717 ;

STE #(.fan_in(1)) vasim_68_ste_717 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_716 }),
                .match(vasim_68_w_match_717) ,
                .active_state(vasim_68_w_out_717));




/*wire vasim_68_w_out_718;
*/

wire vasim_68_lut_match_718;
wire vasim_68_w_match_718;

    
    
    

LUT_Match_vasim_68_718 #(8) lut_match_vasim_68_718(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_718));


assign vasim_68_w_match_718 = vasim_68_lut_match_718 ;

STE #(.fan_in(2)) vasim_68_ste_718 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_717 }),
                .match(vasim_68_w_match_718) ,
                .active_state(vasim_68_w_out_718));




/*wire vasim_68_w_out_719;
*/

wire vasim_68_lut_match_719;
wire vasim_68_w_match_719;

    
    
    

LUT_Match_vasim_68_719 #(8) lut_match_vasim_68_719(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_719));


assign vasim_68_w_match_719 = vasim_68_lut_match_719 ;

STE #(.fan_in(1)) vasim_68_ste_719 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_718 }),
                .match(vasim_68_w_match_719) ,
                .active_state(vasim_68_w_out_719));




/*wire vasim_68_w_out_720;
*/

wire vasim_68_lut_match_720;
wire vasim_68_w_match_720;

    
    
    

LUT_Match_vasim_68_720 #(8) lut_match_vasim_68_720(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_720));


assign vasim_68_w_match_720 = vasim_68_lut_match_720 ;

STE #(.fan_in(2)) vasim_68_ste_720 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_719 }),
                .match(vasim_68_w_match_720) ,
                .active_state(vasim_68_w_out_720));




/*wire vasim_68_w_out_721;
*/

wire vasim_68_lut_match_721;
wire vasim_68_w_match_721;

    
    
    

LUT_Match_vasim_68_721 #(8) lut_match_vasim_68_721(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_721));


assign vasim_68_w_match_721 = vasim_68_lut_match_721 ;

STE #(.fan_in(1)) vasim_68_ste_721 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_720 }),
                .match(vasim_68_w_match_721) ,
                .active_state(vasim_68_w_out_721));




/*wire vasim_68_w_out_722;
*/

wire vasim_68_lut_match_722;
wire vasim_68_w_match_722;

    
    
    

LUT_Match_vasim_68_722 #(8) lut_match_vasim_68_722(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_722));


assign vasim_68_w_match_722 = vasim_68_lut_match_722 ;

STE #(.fan_in(2)) vasim_68_ste_722 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_721 }),
                .match(vasim_68_w_match_722) ,
                .active_state(vasim_68_w_out_722));




/*wire vasim_68_w_out_723;
*/

wire vasim_68_lut_match_723;
wire vasim_68_w_match_723;

    
    
    

LUT_Match_vasim_68_723 #(8) lut_match_vasim_68_723(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_723));


assign vasim_68_w_match_723 = vasim_68_lut_match_723 ;

STE #(.fan_in(1)) vasim_68_ste_723 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_722 }),
                .match(vasim_68_w_match_723) ,
                .active_state(vasim_68_w_out_723));




/*wire vasim_68_w_out_724;
*/

wire vasim_68_lut_match_724;
wire vasim_68_w_match_724;

    
    
    

LUT_Match_vasim_68_724 #(8) lut_match_vasim_68_724(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_724));


assign vasim_68_w_match_724 = vasim_68_lut_match_724 ;

STE #(.fan_in(2)) vasim_68_ste_724 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_723 }),
                .match(vasim_68_w_match_724) ,
                .active_state(vasim_68_w_out_724));




/*wire vasim_68_w_out_725;
*/

wire vasim_68_lut_match_725;
wire vasim_68_w_match_725;

    
    
    

LUT_Match_vasim_68_725 #(8) lut_match_vasim_68_725(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_725));


assign vasim_68_w_match_725 = vasim_68_lut_match_725 ;

STE #(.fan_in(1)) vasim_68_ste_725 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_724 }),
                .match(vasim_68_w_match_725) ,
                .active_state(vasim_68_w_out_725));




/*wire vasim_68_w_out_726;
*/

wire vasim_68_lut_match_726;
wire vasim_68_w_match_726;

    
    
    

LUT_Match_vasim_68_726 #(8) lut_match_vasim_68_726(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_726));


assign vasim_68_w_match_726 = vasim_68_lut_match_726 ;

STE #(.fan_in(2)) vasim_68_ste_726 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_715 }),
                .match(vasim_68_w_match_726) ,
                .active_state(vasim_68_w_out_726));




/*wire vasim_68_w_out_727;
*/

wire vasim_68_lut_match_727;
wire vasim_68_w_match_727;

    
    
    

LUT_Match_vasim_68_727 #(8) lut_match_vasim_68_727(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_727));


assign vasim_68_w_match_727 = vasim_68_lut_match_727 ;

STE #(.fan_in(2)) vasim_68_ste_727 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_725 }),
                .match(vasim_68_w_match_727) ,
                .active_state(vasim_68_w_out_727));




/*wire vasim_68_w_out_728;
*/

wire vasim_68_lut_match_728;
wire vasim_68_w_match_728;

    
    
    

LUT_Match_vasim_68_728 #(8) lut_match_vasim_68_728(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_728));


assign vasim_68_w_match_728 = vasim_68_lut_match_728 ;

STE #(.fan_in(1)) vasim_68_ste_728 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_727 }),
                .match(vasim_68_w_match_728) ,
                .active_state(vasim_68_w_out_728));




/*wire vasim_68_w_out_729;
*/

wire vasim_68_lut_match_729;
wire vasim_68_w_match_729;

    
    
    

LUT_Match_vasim_68_729 #(8) lut_match_vasim_68_729(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_729));


assign vasim_68_w_match_729 = vasim_68_lut_match_729 ;

STE #(.fan_in(2)) vasim_68_ste_729 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_728 }),
                .match(vasim_68_w_match_729) ,
                .active_state(vasim_68_w_out_729));




/*wire vasim_68_w_out_730;
*/

wire vasim_68_lut_match_730;
wire vasim_68_w_match_730;

    
    
    

LUT_Match_vasim_68_730 #(8) lut_match_vasim_68_730(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_730));


assign vasim_68_w_match_730 = vasim_68_lut_match_730 ;

STE #(.fan_in(1)) vasim_68_ste_730 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_729 }),
                .match(vasim_68_w_match_730) ,
                .active_state(vasim_68_w_out_730));




/*wire vasim_68_w_out_731;
*/

wire vasim_68_lut_match_731;
wire vasim_68_w_match_731;

    
    
    

LUT_Match_vasim_68_731 #(8) lut_match_vasim_68_731(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_731));


assign vasim_68_w_match_731 = vasim_68_lut_match_731 ;

STE #(.fan_in(2)) vasim_68_ste_731 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_730 }),
                .match(vasim_68_w_match_731) ,
                .active_state(vasim_68_w_out_731));




/*wire vasim_68_w_out_732;
*/

wire vasim_68_lut_match_732;
wire vasim_68_w_match_732;

    
    
    

LUT_Match_vasim_68_732 #(8) lut_match_vasim_68_732(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_732));


assign vasim_68_w_match_732 = vasim_68_lut_match_732 ;

STE #(.fan_in(1)) vasim_68_ste_732 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_731 }),
                .match(vasim_68_w_match_732) ,
                .active_state(vasim_68_w_out_732));




/*wire vasim_68_w_out_733;
*/

wire vasim_68_lut_match_733;
wire vasim_68_w_match_733;

    
    
    

LUT_Match_vasim_68_733 #(8) lut_match_vasim_68_733(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_733));


assign vasim_68_w_match_733 = vasim_68_lut_match_733 ;

STE #(.fan_in(2)) vasim_68_ste_733 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_732 }),
                .match(vasim_68_w_match_733) ,
                .active_state(vasim_68_w_out_733));




/*wire vasim_68_w_out_734;
*/

wire vasim_68_lut_match_734;
wire vasim_68_w_match_734;

    
    
    

LUT_Match_vasim_68_734 #(8) lut_match_vasim_68_734(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_734));


assign vasim_68_w_match_734 = vasim_68_lut_match_734 ;

STE #(.fan_in(1)) vasim_68_ste_734 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_733 }),
                .match(vasim_68_w_match_734) ,
                .active_state(vasim_68_w_out_734));




/*wire vasim_68_w_out_735;
*/

wire vasim_68_lut_match_735;
wire vasim_68_w_match_735;

    
    
    

LUT_Match_vasim_68_735 #(8) lut_match_vasim_68_735(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_735));


assign vasim_68_w_match_735 = vasim_68_lut_match_735 ;

STE #(.fan_in(2)) vasim_68_ste_735 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_734 }),
                .match(vasim_68_w_match_735) ,
                .active_state(vasim_68_w_out_735));




/*wire vasim_68_w_out_736;
*/

wire vasim_68_lut_match_736;
wire vasim_68_w_match_736;

    
    
    

LUT_Match_vasim_68_736 #(8) lut_match_vasim_68_736(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_736));


assign vasim_68_w_match_736 = vasim_68_lut_match_736 ;

STE #(.fan_in(1)) vasim_68_ste_736 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_735 }),
                .match(vasim_68_w_match_736) ,
                .active_state(vasim_68_w_out_736));




/*wire vasim_68_w_out_737;
*/

wire vasim_68_lut_match_737;
wire vasim_68_w_match_737;

    
    
    

LUT_Match_vasim_68_737 #(8) lut_match_vasim_68_737(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_737));


assign vasim_68_w_match_737 = vasim_68_lut_match_737 ;

STE #(.fan_in(1)) vasim_68_ste_737 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_726 }),
                .match(vasim_68_w_match_737) ,
                .active_state(vasim_68_w_out_737));




/*wire vasim_68_w_out_738;
*/

wire vasim_68_lut_match_738;
wire vasim_68_w_match_738;

    
    
    

LUT_Match_vasim_68_738 #(8) lut_match_vasim_68_738(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_738));


assign vasim_68_w_match_738 = vasim_68_lut_match_738 ;

STE #(.fan_in(2)) vasim_68_ste_738 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_736 }),
                .match(vasim_68_w_match_738) ,
                .active_state(vasim_68_w_out_738));




/*wire vasim_68_w_out_739;
*/

wire vasim_68_lut_match_739;
wire vasim_68_w_match_739;

    
    
    

LUT_Match_vasim_68_739 #(8) lut_match_vasim_68_739(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_739));


assign vasim_68_w_match_739 = vasim_68_lut_match_739 ;

STE #(.fan_in(1)) vasim_68_ste_739 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_738 }),
                .match(vasim_68_w_match_739) ,
                .active_state(vasim_68_w_out_739));




/*wire vasim_68_w_out_740;
*/

wire vasim_68_lut_match_740;
wire vasim_68_w_match_740;

    
    
    

LUT_Match_vasim_68_740 #(8) lut_match_vasim_68_740(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_740));


assign vasim_68_w_match_740 = vasim_68_lut_match_740 ;

STE #(.fan_in(2)) vasim_68_ste_740 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_739 }),
                .match(vasim_68_w_match_740) ,
                .active_state(vasim_68_w_out_740));




/*wire vasim_68_w_out_741;
*/

wire vasim_68_lut_match_741;
wire vasim_68_w_match_741;

    
    
    

LUT_Match_vasim_68_741 #(8) lut_match_vasim_68_741(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_741));


assign vasim_68_w_match_741 = vasim_68_lut_match_741 ;

STE #(.fan_in(1)) vasim_68_ste_741 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_740 }),
                .match(vasim_68_w_match_741) ,
                .active_state(vasim_68_w_out_741));




/*wire vasim_68_w_out_742;
*/

wire vasim_68_lut_match_742;
wire vasim_68_w_match_742;

    
    
    

LUT_Match_vasim_68_742 #(8) lut_match_vasim_68_742(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_742));


assign vasim_68_w_match_742 = vasim_68_lut_match_742 ;

STE #(.fan_in(2)) vasim_68_ste_742 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_741 }),
                .match(vasim_68_w_match_742) ,
                .active_state(vasim_68_w_out_742));




/*wire vasim_68_w_out_743;
*/

wire vasim_68_lut_match_743;
wire vasim_68_w_match_743;

    
    
    

LUT_Match_vasim_68_743 #(8) lut_match_vasim_68_743(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_743));


assign vasim_68_w_match_743 = vasim_68_lut_match_743 ;

STE #(.fan_in(1)) vasim_68_ste_743 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_742 }),
                .match(vasim_68_w_match_743) ,
                .active_state(vasim_68_w_out_743));




/*wire vasim_68_w_out_744;
*/

wire vasim_68_lut_match_744;
wire vasim_68_w_match_744;

    
    
    

LUT_Match_vasim_68_744 #(8) lut_match_vasim_68_744(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_744));


assign vasim_68_w_match_744 = vasim_68_lut_match_744 ;

STE #(.fan_in(2)) vasim_68_ste_744 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_743 }),
                .match(vasim_68_w_match_744) ,
                .active_state(vasim_68_w_out_744));




/*wire vasim_68_w_out_745;
*/

wire vasim_68_lut_match_745;
wire vasim_68_w_match_745;

    
    
    

LUT_Match_vasim_68_745 #(8) lut_match_vasim_68_745(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_745));


assign vasim_68_w_match_745 = vasim_68_lut_match_745 ;

STE #(.fan_in(1)) vasim_68_ste_745 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_744 }),
                .match(vasim_68_w_match_745) ,
                .active_state(vasim_68_w_out_745));




/*wire vasim_68_w_out_746;
*/

wire vasim_68_lut_match_746;
wire vasim_68_w_match_746;

    
    
    

LUT_Match_vasim_68_746 #(8) lut_match_vasim_68_746(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_746));


assign vasim_68_w_match_746 = vasim_68_lut_match_746 ;

STE #(.fan_in(2)) vasim_68_ste_746 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_745 }),
                .match(vasim_68_w_match_746) ,
                .active_state(vasim_68_w_out_746));




/*wire vasim_68_w_out_747;
*/

wire vasim_68_lut_match_747;
wire vasim_68_w_match_747;

    
    
    

LUT_Match_vasim_68_747 #(8) lut_match_vasim_68_747(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_747));


assign vasim_68_w_match_747 = vasim_68_lut_match_747 ;

STE #(.fan_in(1)) vasim_68_ste_747 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_746 }),
                .match(vasim_68_w_match_747) ,
                .active_state(vasim_68_w_out_747));




/*wire vasim_68_w_out_748;
*/

wire vasim_68_lut_match_748;
wire vasim_68_w_match_748;

    
    
    

LUT_Match_vasim_68_748 #(8) lut_match_vasim_68_748(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_748));


assign vasim_68_w_match_748 = vasim_68_lut_match_748 ;

STE #(.fan_in(1)) vasim_68_ste_748 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_637 }),
                .match(vasim_68_w_match_748) ,
                .active_state(vasim_68_w_out_748));




/*wire vasim_68_w_out_749;
*/

wire vasim_68_lut_match_749;
wire vasim_68_w_match_749;

    
    
    

LUT_Match_vasim_68_749 #(8) lut_match_vasim_68_749(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_749));


assign vasim_68_w_match_749 = vasim_68_lut_match_749 ;

STE #(.fan_in(2)) vasim_68_ste_749 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_737, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_749) ,
                .active_state(vasim_68_w_out_749));




/*wire vasim_68_w_out_750;
*/

wire vasim_68_lut_match_750;
wire vasim_68_w_match_750;

    
    
    

LUT_Match_vasim_68_750 #(8) lut_match_vasim_68_750(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_750));


assign vasim_68_w_match_750 = vasim_68_lut_match_750 ;

STE #(.fan_in(2)) vasim_68_ste_750 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_747 }),
                .match(vasim_68_w_match_750) ,
                .active_state(vasim_68_w_out_750));




/*wire vasim_68_w_out_751;
*/

wire vasim_68_lut_match_751;
wire vasim_68_w_match_751;

    
    
    

LUT_Match_vasim_68_751 #(8) lut_match_vasim_68_751(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_751));


assign vasim_68_w_match_751 = vasim_68_lut_match_751 ;

STE #(.fan_in(1)) vasim_68_ste_751 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_750 }),
                .match(vasim_68_w_match_751) ,
                .active_state(vasim_68_w_out_751));




/*wire vasim_68_w_out_752;
*/

wire vasim_68_lut_match_752;
wire vasim_68_w_match_752;

    
    
    

LUT_Match_vasim_68_752 #(8) lut_match_vasim_68_752(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_752));


assign vasim_68_w_match_752 = vasim_68_lut_match_752 ;

STE #(.fan_in(2)) vasim_68_ste_752 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_751 }),
                .match(vasim_68_w_match_752) ,
                .active_state(vasim_68_w_out_752));




/*wire vasim_68_w_out_753;
*/

wire vasim_68_lut_match_753;
wire vasim_68_w_match_753;

    
    
    

LUT_Match_vasim_68_753 #(8) lut_match_vasim_68_753(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_753));


assign vasim_68_w_match_753 = vasim_68_lut_match_753 ;

STE #(.fan_in(1)) vasim_68_ste_753 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_752 }),
                .match(vasim_68_w_match_753) ,
                .active_state(vasim_68_w_out_753));




/*wire vasim_68_w_out_754;
*/

wire vasim_68_lut_match_754;
wire vasim_68_w_match_754;

    
    
    

LUT_Match_vasim_68_754 #(8) lut_match_vasim_68_754(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_754));


assign vasim_68_w_match_754 = vasim_68_lut_match_754 ;

STE #(.fan_in(2)) vasim_68_ste_754 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_753 }),
                .match(vasim_68_w_match_754) ,
                .active_state(vasim_68_w_out_754));




/*wire vasim_68_w_out_755;
*/

wire vasim_68_lut_match_755;
wire vasim_68_w_match_755;

    
    
    

LUT_Match_vasim_68_755 #(8) lut_match_vasim_68_755(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_755));


assign vasim_68_w_match_755 = vasim_68_lut_match_755 ;

STE #(.fan_in(1)) vasim_68_ste_755 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_754 }),
                .match(vasim_68_w_match_755) ,
                .active_state(vasim_68_w_out_755));




/*wire vasim_68_w_out_756;
*/

wire vasim_68_lut_match_756;
wire vasim_68_w_match_756;

    
    
    

LUT_Match_vasim_68_756 #(8) lut_match_vasim_68_756(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_756));


assign vasim_68_w_match_756 = vasim_68_lut_match_756 ;

STE #(.fan_in(2)) vasim_68_ste_756 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_755 }),
                .match(vasim_68_w_match_756) ,
                .active_state(vasim_68_w_out_756));




/*wire vasim_68_w_out_757;
*/

wire vasim_68_lut_match_757;
wire vasim_68_w_match_757;

    
    
    

LUT_Match_vasim_68_757 #(8) lut_match_vasim_68_757(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_757));


assign vasim_68_w_match_757 = vasim_68_lut_match_757 ;

STE #(.fan_in(1)) vasim_68_ste_757 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_756 }),
                .match(vasim_68_w_match_757) ,
                .active_state(vasim_68_w_out_757));




/*wire vasim_68_w_out_758;
*/

wire vasim_68_lut_match_758;
wire vasim_68_w_match_758;

    
    
    

LUT_Match_vasim_68_758 #(8) lut_match_vasim_68_758(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_758));


assign vasim_68_w_match_758 = vasim_68_lut_match_758 ;

STE #(.fan_in(2)) vasim_68_ste_758 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_757 }),
                .match(vasim_68_w_match_758) ,
                .active_state(vasim_68_w_out_758));




/*wire vasim_68_w_out_759;
*/

wire vasim_68_lut_match_759;
wire vasim_68_w_match_759;

    
    
    

LUT_Match_vasim_68_759 #(8) lut_match_vasim_68_759(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_759));


assign vasim_68_w_match_759 = vasim_68_lut_match_759 ;

STE #(.fan_in(1)) vasim_68_ste_759 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_758 }),
                .match(vasim_68_w_match_759) ,
                .active_state(vasim_68_w_out_759));




/*wire vasim_68_w_out_760;
*/

wire vasim_68_lut_match_760;
wire vasim_68_w_match_760;

    
    
    

LUT_Match_vasim_68_760 #(8) lut_match_vasim_68_760(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_760));


assign vasim_68_w_match_760 = vasim_68_lut_match_760 ;

STE #(.fan_in(1)) vasim_68_ste_760 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_749 }),
                .match(vasim_68_w_match_760) ,
                .active_state(vasim_68_w_out_760));




/*wire vasim_68_w_out_761;
*/

wire vasim_68_lut_match_761;
wire vasim_68_w_match_761;

    
    
    

LUT_Match_vasim_68_761 #(8) lut_match_vasim_68_761(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_761));


assign vasim_68_w_match_761 = vasim_68_lut_match_761 ;

STE #(.fan_in(2)) vasim_68_ste_761 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_759 }),
                .match(vasim_68_w_match_761) ,
                .active_state(vasim_68_w_out_761));




/*wire vasim_68_w_out_762;
*/

wire vasim_68_lut_match_762;
wire vasim_68_w_match_762;

    
    
    

LUT_Match_vasim_68_762 #(8) lut_match_vasim_68_762(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_762));


assign vasim_68_w_match_762 = vasim_68_lut_match_762 ;

STE #(.fan_in(1)) vasim_68_ste_762 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_761 }),
                .match(vasim_68_w_match_762) ,
                .active_state(vasim_68_w_out_762));




/*wire vasim_68_w_out_763;
*/

wire vasim_68_lut_match_763;
wire vasim_68_w_match_763;

    
    
    

LUT_Match_vasim_68_763 #(8) lut_match_vasim_68_763(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_763));


assign vasim_68_w_match_763 = vasim_68_lut_match_763 ;

STE #(.fan_in(2)) vasim_68_ste_763 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_762 }),
                .match(vasim_68_w_match_763) ,
                .active_state(vasim_68_w_out_763));




/*wire vasim_68_w_out_764;
*/

wire vasim_68_lut_match_764;
wire vasim_68_w_match_764;

    
    
    

LUT_Match_vasim_68_764 #(8) lut_match_vasim_68_764(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_764));


assign vasim_68_w_match_764 = vasim_68_lut_match_764 ;

STE #(.fan_in(1)) vasim_68_ste_764 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_763 }),
                .match(vasim_68_w_match_764) ,
                .active_state(vasim_68_w_out_764));




/*wire vasim_68_w_out_765;
*/

wire vasim_68_lut_match_765;
wire vasim_68_w_match_765;

    
    
    

LUT_Match_vasim_68_765 #(8) lut_match_vasim_68_765(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_765));


assign vasim_68_w_match_765 = vasim_68_lut_match_765 ;

STE #(.fan_in(2)) vasim_68_ste_765 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_764 }),
                .match(vasim_68_w_match_765) ,
                .active_state(vasim_68_w_out_765));




/*wire vasim_68_w_out_766;
*/

wire vasim_68_lut_match_766;
wire vasim_68_w_match_766;

    
    
    

LUT_Match_vasim_68_766 #(8) lut_match_vasim_68_766(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_766));


assign vasim_68_w_match_766 = vasim_68_lut_match_766 ;

STE #(.fan_in(1)) vasim_68_ste_766 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_765 }),
                .match(vasim_68_w_match_766) ,
                .active_state(vasim_68_w_out_766));




/*wire vasim_68_w_out_767;
*/

wire vasim_68_lut_match_767;
wire vasim_68_w_match_767;

    
    
    

LUT_Match_vasim_68_767 #(8) lut_match_vasim_68_767(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_767));


assign vasim_68_w_match_767 = vasim_68_lut_match_767 ;

STE #(.fan_in(2)) vasim_68_ste_767 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_766 }),
                .match(vasim_68_w_match_767) ,
                .active_state(vasim_68_w_out_767));




/*wire vasim_68_w_out_768;
*/

wire vasim_68_lut_match_768;
wire vasim_68_w_match_768;

    
    
    

LUT_Match_vasim_68_768 #(8) lut_match_vasim_68_768(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_768));


assign vasim_68_w_match_768 = vasim_68_lut_match_768 ;

STE #(.fan_in(1)) vasim_68_ste_768 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_767 }),
                .match(vasim_68_w_match_768) ,
                .active_state(vasim_68_w_out_768));




/*wire vasim_68_w_out_769;
*/

wire vasim_68_lut_match_769;
wire vasim_68_w_match_769;

    
    
    

LUT_Match_vasim_68_769 #(8) lut_match_vasim_68_769(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_769));


assign vasim_68_w_match_769 = vasim_68_lut_match_769 ;

STE #(.fan_in(2)) vasim_68_ste_769 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_768 }),
                .match(vasim_68_w_match_769) ,
                .active_state(vasim_68_w_out_769));




/*wire vasim_68_w_out_770;
*/

wire vasim_68_lut_match_770;
wire vasim_68_w_match_770;

    
    
    

LUT_Match_vasim_68_770 #(8) lut_match_vasim_68_770(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_770));


assign vasim_68_w_match_770 = vasim_68_lut_match_770 ;

STE #(.fan_in(1)) vasim_68_ste_770 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_769 }),
                .match(vasim_68_w_match_770) ,
                .active_state(vasim_68_w_out_770));




/*wire vasim_68_w_out_771;
*/

wire vasim_68_lut_match_771;
wire vasim_68_w_match_771;

    
    
    

LUT_Match_vasim_68_771 #(8) lut_match_vasim_68_771(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_771));


assign vasim_68_w_match_771 = vasim_68_lut_match_771 ;

STE #(.fan_in(2)) vasim_68_ste_771 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_760, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_771) ,
                .active_state(vasim_68_w_out_771));




/*wire vasim_68_w_out_772;
*/

wire vasim_68_lut_match_772;
wire vasim_68_w_match_772;

    
    
    

LUT_Match_vasim_68_772 #(8) lut_match_vasim_68_772(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_772));


assign vasim_68_w_match_772 = vasim_68_lut_match_772 ;

STE #(.fan_in(2)) vasim_68_ste_772 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_770 }),
                .match(vasim_68_w_match_772) ,
                .active_state(vasim_68_w_out_772));




/*wire vasim_68_w_out_773;
*/

wire vasim_68_lut_match_773;
wire vasim_68_w_match_773;

    
    
    

LUT_Match_vasim_68_773 #(8) lut_match_vasim_68_773(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_773));


assign vasim_68_w_match_773 = vasim_68_lut_match_773 ;

STE #(.fan_in(1)) vasim_68_ste_773 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_772 }),
                .match(vasim_68_w_match_773) ,
                .active_state(vasim_68_w_out_773));




/*wire vasim_68_w_out_774;
*/

wire vasim_68_lut_match_774;
wire vasim_68_w_match_774;

    
    
    

LUT_Match_vasim_68_774 #(8) lut_match_vasim_68_774(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_774));


assign vasim_68_w_match_774 = vasim_68_lut_match_774 ;

STE #(.fan_in(2)) vasim_68_ste_774 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_773 }),
                .match(vasim_68_w_match_774) ,
                .active_state(vasim_68_w_out_774));




/*wire vasim_68_w_out_775;
*/

wire vasim_68_lut_match_775;
wire vasim_68_w_match_775;

    
    
    

LUT_Match_vasim_68_775 #(8) lut_match_vasim_68_775(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_775));


assign vasim_68_w_match_775 = vasim_68_lut_match_775 ;

STE #(.fan_in(1)) vasim_68_ste_775 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_774 }),
                .match(vasim_68_w_match_775) ,
                .active_state(vasim_68_w_out_775));




/*wire vasim_68_w_out_776;
*/

wire vasim_68_lut_match_776;
wire vasim_68_w_match_776;

    
    
    

LUT_Match_vasim_68_776 #(8) lut_match_vasim_68_776(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_776));


assign vasim_68_w_match_776 = vasim_68_lut_match_776 ;

STE #(.fan_in(2)) vasim_68_ste_776 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_775 }),
                .match(vasim_68_w_match_776) ,
                .active_state(vasim_68_w_out_776));




/*wire vasim_68_w_out_777;
*/

wire vasim_68_lut_match_777;
wire vasim_68_w_match_777;

    
    
    

LUT_Match_vasim_68_777 #(8) lut_match_vasim_68_777(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_777));


assign vasim_68_w_match_777 = vasim_68_lut_match_777 ;

STE #(.fan_in(1)) vasim_68_ste_777 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_776 }),
                .match(vasim_68_w_match_777) ,
                .active_state(vasim_68_w_out_777));




/*wire vasim_68_w_out_778;
*/

wire vasim_68_lut_match_778;
wire vasim_68_w_match_778;

    
    
    

LUT_Match_vasim_68_778 #(8) lut_match_vasim_68_778(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_778));


assign vasim_68_w_match_778 = vasim_68_lut_match_778 ;

STE #(.fan_in(2)) vasim_68_ste_778 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_777 }),
                .match(vasim_68_w_match_778) ,
                .active_state(vasim_68_w_out_778));




/*wire vasim_68_w_out_779;
*/

wire vasim_68_lut_match_779;
wire vasim_68_w_match_779;

    
    
    

LUT_Match_vasim_68_779 #(8) lut_match_vasim_68_779(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_779));


assign vasim_68_w_match_779 = vasim_68_lut_match_779 ;

STE #(.fan_in(1)) vasim_68_ste_779 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_778 }),
                .match(vasim_68_w_match_779) ,
                .active_state(vasim_68_w_out_779));




/*wire vasim_68_w_out_780;
*/

wire vasim_68_lut_match_780;
wire vasim_68_w_match_780;

    
    
    

LUT_Match_vasim_68_780 #(8) lut_match_vasim_68_780(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_780));


assign vasim_68_w_match_780 = vasim_68_lut_match_780 ;

STE #(.fan_in(2)) vasim_68_ste_780 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_779 }),
                .match(vasim_68_w_match_780) ,
                .active_state(vasim_68_w_out_780));




/*wire vasim_68_w_out_781;
*/

wire vasim_68_lut_match_781;
wire vasim_68_w_match_781;

    
    
    

LUT_Match_vasim_68_781 #(8) lut_match_vasim_68_781(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_781));


assign vasim_68_w_match_781 = vasim_68_lut_match_781 ;

STE #(.fan_in(1)) vasim_68_ste_781 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_780 }),
                .match(vasim_68_w_match_781) ,
                .active_state(vasim_68_w_out_781));




/*wire vasim_68_w_out_782;
*/

wire vasim_68_lut_match_782;
wire vasim_68_w_match_782;

    
    
    

LUT_Match_vasim_68_782 #(8) lut_match_vasim_68_782(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_782));


assign vasim_68_w_match_782 = vasim_68_lut_match_782 ;

STE #(.fan_in(1)) vasim_68_ste_782 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_771 }),
                .match(vasim_68_w_match_782) ,
                .active_state(vasim_68_w_out_782));




/*wire vasim_68_w_out_783;
*/

wire vasim_68_lut_match_783;
wire vasim_68_w_match_783;

    
    
    

LUT_Match_vasim_68_783 #(8) lut_match_vasim_68_783(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_783));


assign vasim_68_w_match_783 = vasim_68_lut_match_783 ;

STE #(.fan_in(2)) vasim_68_ste_783 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_781 }),
                .match(vasim_68_w_match_783) ,
                .active_state(vasim_68_w_out_783));




/*wire vasim_68_w_out_784;
*/

wire vasim_68_lut_match_784;
wire vasim_68_w_match_784;

    
    
    

LUT_Match_vasim_68_784 #(8) lut_match_vasim_68_784(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_784));


assign vasim_68_w_match_784 = vasim_68_lut_match_784 ;

STE #(.fan_in(1)) vasim_68_ste_784 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_783 }),
                .match(vasim_68_w_match_784) ,
                .active_state(vasim_68_w_out_784));




/*wire vasim_68_w_out_785;
*/

wire vasim_68_lut_match_785;
wire vasim_68_w_match_785;

    
    
    

LUT_Match_vasim_68_785 #(8) lut_match_vasim_68_785(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_785));


assign vasim_68_w_match_785 = vasim_68_lut_match_785 ;

STE #(.fan_in(2)) vasim_68_ste_785 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_784 }),
                .match(vasim_68_w_match_785) ,
                .active_state(vasim_68_w_out_785));




/*wire vasim_68_w_out_786;
*/

wire vasim_68_lut_match_786;
wire vasim_68_w_match_786;

    
    
    

LUT_Match_vasim_68_786 #(8) lut_match_vasim_68_786(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_786));


assign vasim_68_w_match_786 = vasim_68_lut_match_786 ;

STE #(.fan_in(1)) vasim_68_ste_786 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_785 }),
                .match(vasim_68_w_match_786) ,
                .active_state(vasim_68_w_out_786));




/*wire vasim_68_w_out_787;
*/

wire vasim_68_lut_match_787;
wire vasim_68_w_match_787;

    
    
    

LUT_Match_vasim_68_787 #(8) lut_match_vasim_68_787(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_787));


assign vasim_68_w_match_787 = vasim_68_lut_match_787 ;

STE #(.fan_in(2)) vasim_68_ste_787 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_786 }),
                .match(vasim_68_w_match_787) ,
                .active_state(vasim_68_w_out_787));




/*wire vasim_68_w_out_788;
*/

wire vasim_68_lut_match_788;
wire vasim_68_w_match_788;

    
    
    

LUT_Match_vasim_68_788 #(8) lut_match_vasim_68_788(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_788));


assign vasim_68_w_match_788 = vasim_68_lut_match_788 ;

STE #(.fan_in(1)) vasim_68_ste_788 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_787 }),
                .match(vasim_68_w_match_788) ,
                .active_state(vasim_68_w_out_788));




/*wire vasim_68_w_out_789;
*/

wire vasim_68_lut_match_789;
wire vasim_68_w_match_789;

    
    
    

LUT_Match_vasim_68_789 #(8) lut_match_vasim_68_789(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_789));


assign vasim_68_w_match_789 = vasim_68_lut_match_789 ;

STE #(.fan_in(2)) vasim_68_ste_789 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_788 }),
                .match(vasim_68_w_match_789) ,
                .active_state(vasim_68_w_out_789));




/*wire vasim_68_w_out_790;
*/

wire vasim_68_lut_match_790;
wire vasim_68_w_match_790;

    
    
    

LUT_Match_vasim_68_790 #(8) lut_match_vasim_68_790(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_790));


assign vasim_68_w_match_790 = vasim_68_lut_match_790 ;

STE #(.fan_in(1)) vasim_68_ste_790 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_789 }),
                .match(vasim_68_w_match_790) ,
                .active_state(vasim_68_w_out_790));




/*wire vasim_68_w_out_791;
*/

wire vasim_68_lut_match_791;
wire vasim_68_w_match_791;

    
    
    

LUT_Match_vasim_68_791 #(8) lut_match_vasim_68_791(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_791));


assign vasim_68_w_match_791 = vasim_68_lut_match_791 ;

STE #(.fan_in(2)) vasim_68_ste_791 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_790 }),
                .match(vasim_68_w_match_791) ,
                .active_state(vasim_68_w_out_791));




/*wire vasim_68_w_out_792;
*/

wire vasim_68_lut_match_792;
wire vasim_68_w_match_792;

    
    
    

LUT_Match_vasim_68_792 #(8) lut_match_vasim_68_792(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_792));


assign vasim_68_w_match_792 = vasim_68_lut_match_792 ;

STE #(.fan_in(1)) vasim_68_ste_792 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_791 }),
                .match(vasim_68_w_match_792) ,
                .active_state(vasim_68_w_out_792));




/*wire vasim_68_w_out_793;
*/

wire vasim_68_lut_match_793;
wire vasim_68_w_match_793;

    
    
    

LUT_Match_vasim_68_793 #(8) lut_match_vasim_68_793(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_793));


assign vasim_68_w_match_793 = vasim_68_lut_match_793 ;

STE #(.fan_in(2)) vasim_68_ste_793 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_782 }),
                .match(vasim_68_w_match_793) ,
                .active_state(vasim_68_w_out_793));




/*wire vasim_68_w_out_794;
*/

wire vasim_68_lut_match_794;
wire vasim_68_w_match_794;

    
    
    

LUT_Match_vasim_68_794 #(8) lut_match_vasim_68_794(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_794));


assign vasim_68_w_match_794 = vasim_68_lut_match_794 ;

STE #(.fan_in(2)) vasim_68_ste_794 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_792 }),
                .match(vasim_68_w_match_794) ,
                .active_state(vasim_68_w_out_794));




/*wire vasim_68_w_out_795;
*/

wire vasim_68_lut_match_795;
wire vasim_68_w_match_795;

    
    
    

LUT_Match_vasim_68_795 #(8) lut_match_vasim_68_795(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_795));


assign vasim_68_w_match_795 = vasim_68_lut_match_795 ;

STE #(.fan_in(1)) vasim_68_ste_795 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_794 }),
                .match(vasim_68_w_match_795) ,
                .active_state(vasim_68_w_out_795));




/*wire vasim_68_w_out_796;
*/

wire vasim_68_lut_match_796;
wire vasim_68_w_match_796;

    
    
    

LUT_Match_vasim_68_796 #(8) lut_match_vasim_68_796(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_796));


assign vasim_68_w_match_796 = vasim_68_lut_match_796 ;

STE #(.fan_in(2)) vasim_68_ste_796 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_795 }),
                .match(vasim_68_w_match_796) ,
                .active_state(vasim_68_w_out_796));




/*wire vasim_68_w_out_797;
*/

wire vasim_68_lut_match_797;
wire vasim_68_w_match_797;

    
    
    

LUT_Match_vasim_68_797 #(8) lut_match_vasim_68_797(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_797));


assign vasim_68_w_match_797 = vasim_68_lut_match_797 ;

STE #(.fan_in(1)) vasim_68_ste_797 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_796 }),
                .match(vasim_68_w_match_797) ,
                .active_state(vasim_68_w_out_797));




/*wire vasim_68_w_out_798;
*/

wire vasim_68_lut_match_798;
wire vasim_68_w_match_798;

    
    
    

LUT_Match_vasim_68_798 #(8) lut_match_vasim_68_798(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_798));


assign vasim_68_w_match_798 = vasim_68_lut_match_798 ;

STE #(.fan_in(2)) vasim_68_ste_798 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_797 }),
                .match(vasim_68_w_match_798) ,
                .active_state(vasim_68_w_out_798));




/*wire vasim_68_w_out_799;
*/

wire vasim_68_lut_match_799;
wire vasim_68_w_match_799;

    
    
    

LUT_Match_vasim_68_799 #(8) lut_match_vasim_68_799(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_799));


assign vasim_68_w_match_799 = vasim_68_lut_match_799 ;

STE #(.fan_in(1)) vasim_68_ste_799 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_798 }),
                .match(vasim_68_w_match_799) ,
                .active_state(vasim_68_w_out_799));




/*wire vasim_68_w_out_800;
*/

wire vasim_68_lut_match_800;
wire vasim_68_w_match_800;

    
    
    

LUT_Match_vasim_68_800 #(8) lut_match_vasim_68_800(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_800));


assign vasim_68_w_match_800 = vasim_68_lut_match_800 ;

STE #(.fan_in(2)) vasim_68_ste_800 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_799 }),
                .match(vasim_68_w_match_800) ,
                .active_state(vasim_68_w_out_800));




/*wire vasim_68_w_out_801;
*/

wire vasim_68_lut_match_801;
wire vasim_68_w_match_801;

    
    
    

LUT_Match_vasim_68_801 #(8) lut_match_vasim_68_801(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_801));


assign vasim_68_w_match_801 = vasim_68_lut_match_801 ;

STE #(.fan_in(1)) vasim_68_ste_801 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_800 }),
                .match(vasim_68_w_match_801) ,
                .active_state(vasim_68_w_out_801));




/*wire vasim_68_w_out_802;
*/

wire vasim_68_lut_match_802;
wire vasim_68_w_match_802;

    
    
    

LUT_Match_vasim_68_802 #(8) lut_match_vasim_68_802(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_802));


assign vasim_68_w_match_802 = vasim_68_lut_match_802 ;

STE #(.fan_in(2)) vasim_68_ste_802 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_801 }),
                .match(vasim_68_w_match_802) ,
                .active_state(vasim_68_w_out_802));




/*wire vasim_68_w_out_803;
*/

wire vasim_68_lut_match_803;
wire vasim_68_w_match_803;

    
    
    

LUT_Match_vasim_68_803 #(8) lut_match_vasim_68_803(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_803));


assign vasim_68_w_match_803 = vasim_68_lut_match_803 ;

STE #(.fan_in(1)) vasim_68_ste_803 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_802 }),
                .match(vasim_68_w_match_803) ,
                .active_state(vasim_68_w_out_803));




/*wire vasim_68_w_out_804;
*/

wire vasim_68_lut_match_804;
wire vasim_68_w_match_804;

    
    
    

LUT_Match_vasim_68_804 #(8) lut_match_vasim_68_804(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_804));


assign vasim_68_w_match_804 = vasim_68_lut_match_804 ;

STE #(.fan_in(1)) vasim_68_ste_804 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_793 }),
                .match(vasim_68_w_match_804) ,
                .active_state(vasim_68_w_out_804));




/*wire vasim_68_w_out_805;
*/

wire vasim_68_lut_match_805;
wire vasim_68_w_match_805;

    
    
    

LUT_Match_vasim_68_805 #(8) lut_match_vasim_68_805(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_805));


assign vasim_68_w_match_805 = vasim_68_lut_match_805 ;

STE #(.fan_in(2)) vasim_68_ste_805 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_803 }),
                .match(vasim_68_w_match_805) ,
                .active_state(vasim_68_w_out_805));




/*wire vasim_68_w_out_806;
*/

wire vasim_68_lut_match_806;
wire vasim_68_w_match_806;

    
    
    

LUT_Match_vasim_68_806 #(8) lut_match_vasim_68_806(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_806));


assign vasim_68_w_match_806 = vasim_68_lut_match_806 ;

STE #(.fan_in(1)) vasim_68_ste_806 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_805 }),
                .match(vasim_68_w_match_806) ,
                .active_state(vasim_68_w_out_806));




/*wire vasim_68_w_out_807;
*/

wire vasim_68_lut_match_807;
wire vasim_68_w_match_807;

    
    
    

LUT_Match_vasim_68_807 #(8) lut_match_vasim_68_807(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_807));


assign vasim_68_w_match_807 = vasim_68_lut_match_807 ;

STE #(.fan_in(2)) vasim_68_ste_807 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_806 }),
                .match(vasim_68_w_match_807) ,
                .active_state(vasim_68_w_out_807));




/*wire vasim_68_w_out_808;
*/

wire vasim_68_lut_match_808;
wire vasim_68_w_match_808;

    
    
    

LUT_Match_vasim_68_808 #(8) lut_match_vasim_68_808(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_808));


assign vasim_68_w_match_808 = vasim_68_lut_match_808 ;

STE #(.fan_in(1)) vasim_68_ste_808 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_807 }),
                .match(vasim_68_w_match_808) ,
                .active_state(vasim_68_w_out_808));




/*wire vasim_68_w_out_809;
*/

wire vasim_68_lut_match_809;
wire vasim_68_w_match_809;

    
    
    

LUT_Match_vasim_68_809 #(8) lut_match_vasim_68_809(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_809));


assign vasim_68_w_match_809 = vasim_68_lut_match_809 ;

STE #(.fan_in(2)) vasim_68_ste_809 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_808 }),
                .match(vasim_68_w_match_809) ,
                .active_state(vasim_68_w_out_809));




/*wire vasim_68_w_out_810;
*/

wire vasim_68_lut_match_810;
wire vasim_68_w_match_810;

    
    
    

LUT_Match_vasim_68_810 #(8) lut_match_vasim_68_810(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_810));


assign vasim_68_w_match_810 = vasim_68_lut_match_810 ;

STE #(.fan_in(1)) vasim_68_ste_810 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_809 }),
                .match(vasim_68_w_match_810) ,
                .active_state(vasim_68_w_out_810));




/*wire vasim_68_w_out_811;
*/

wire vasim_68_lut_match_811;
wire vasim_68_w_match_811;

    
    
    

LUT_Match_vasim_68_811 #(8) lut_match_vasim_68_811(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_811));


assign vasim_68_w_match_811 = vasim_68_lut_match_811 ;

STE #(.fan_in(2)) vasim_68_ste_811 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_810 }),
                .match(vasim_68_w_match_811) ,
                .active_state(vasim_68_w_out_811));




/*wire vasim_68_w_out_812;
*/

wire vasim_68_lut_match_812;
wire vasim_68_w_match_812;

    
    
    

LUT_Match_vasim_68_812 #(8) lut_match_vasim_68_812(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_812));


assign vasim_68_w_match_812 = vasim_68_lut_match_812 ;

STE #(.fan_in(1)) vasim_68_ste_812 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_811 }),
                .match(vasim_68_w_match_812) ,
                .active_state(vasim_68_w_out_812));




/*wire vasim_68_w_out_813;
*/

wire vasim_68_lut_match_813;
wire vasim_68_w_match_813;

    
    
    

LUT_Match_vasim_68_813 #(8) lut_match_vasim_68_813(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_813));


assign vasim_68_w_match_813 = vasim_68_lut_match_813 ;

STE #(.fan_in(2)) vasim_68_ste_813 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_812 }),
                .match(vasim_68_w_match_813) ,
                .active_state(vasim_68_w_out_813));




/*wire vasim_68_w_out_814;
*/

wire vasim_68_lut_match_814;
wire vasim_68_w_match_814;

    
    
    

LUT_Match_vasim_68_814 #(8) lut_match_vasim_68_814(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_814));


assign vasim_68_w_match_814 = vasim_68_lut_match_814 ;

STE #(.fan_in(1)) vasim_68_ste_814 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_813 }),
                .match(vasim_68_w_match_814) ,
                .active_state(vasim_68_w_out_814));




/*wire vasim_68_w_out_815;
*/

wire vasim_68_lut_match_815;
wire vasim_68_w_match_815;

    
    
    

LUT_Match_vasim_68_815 #(8) lut_match_vasim_68_815(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_815));


assign vasim_68_w_match_815 = vasim_68_lut_match_815 ;

STE #(.fan_in(2)) vasim_68_ste_815 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_804 }),
                .match(vasim_68_w_match_815) ,
                .active_state(vasim_68_w_out_815));




/*wire vasim_68_w_out_816;
*/

wire vasim_68_lut_match_816;
wire vasim_68_w_match_816;

    
    
    

LUT_Match_vasim_68_816 #(8) lut_match_vasim_68_816(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_816));


assign vasim_68_w_match_816 = vasim_68_lut_match_816 ;

STE #(.fan_in(2)) vasim_68_ste_816 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_814 }),
                .match(vasim_68_w_match_816) ,
                .active_state(vasim_68_w_out_816));




/*wire vasim_68_w_out_817;
*/

wire vasim_68_lut_match_817;
wire vasim_68_w_match_817;

    
    
    

LUT_Match_vasim_68_817 #(8) lut_match_vasim_68_817(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_817));


assign vasim_68_w_match_817 = vasim_68_lut_match_817 ;

STE #(.fan_in(1)) vasim_68_ste_817 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_816 }),
                .match(vasim_68_w_match_817) ,
                .active_state(vasim_68_w_out_817));




/*wire vasim_68_w_out_818;
*/

wire vasim_68_lut_match_818;
wire vasim_68_w_match_818;

    
    
    

LUT_Match_vasim_68_818 #(8) lut_match_vasim_68_818(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_818));


assign vasim_68_w_match_818 = vasim_68_lut_match_818 ;

STE #(.fan_in(2)) vasim_68_ste_818 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_817 }),
                .match(vasim_68_w_match_818) ,
                .active_state(vasim_68_w_out_818));




/*wire vasim_68_w_out_819;
*/

wire vasim_68_lut_match_819;
wire vasim_68_w_match_819;

    
    
    

LUT_Match_vasim_68_819 #(8) lut_match_vasim_68_819(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_819));


assign vasim_68_w_match_819 = vasim_68_lut_match_819 ;

STE #(.fan_in(1)) vasim_68_ste_819 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_818 }),
                .match(vasim_68_w_match_819) ,
                .active_state(vasim_68_w_out_819));




/*wire vasim_68_w_out_820;
*/

wire vasim_68_lut_match_820;
wire vasim_68_w_match_820;

    
    
    

LUT_Match_vasim_68_820 #(8) lut_match_vasim_68_820(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_820));


assign vasim_68_w_match_820 = vasim_68_lut_match_820 ;

STE #(.fan_in(2)) vasim_68_ste_820 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_819 }),
                .match(vasim_68_w_match_820) ,
                .active_state(vasim_68_w_out_820));




/*wire vasim_68_w_out_821;
*/

wire vasim_68_lut_match_821;
wire vasim_68_w_match_821;

    
    
    

LUT_Match_vasim_68_821 #(8) lut_match_vasim_68_821(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_821));


assign vasim_68_w_match_821 = vasim_68_lut_match_821 ;

STE #(.fan_in(1)) vasim_68_ste_821 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_820 }),
                .match(vasim_68_w_match_821) ,
                .active_state(vasim_68_w_out_821));




/*wire vasim_68_w_out_822;
*/

wire vasim_68_lut_match_822;
wire vasim_68_w_match_822;

    
    
    

LUT_Match_vasim_68_822 #(8) lut_match_vasim_68_822(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_822));


assign vasim_68_w_match_822 = vasim_68_lut_match_822 ;

STE #(.fan_in(2)) vasim_68_ste_822 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_821 }),
                .match(vasim_68_w_match_822) ,
                .active_state(vasim_68_w_out_822));




/*wire vasim_68_w_out_823;
*/

wire vasim_68_lut_match_823;
wire vasim_68_w_match_823;

    
    
    

LUT_Match_vasim_68_823 #(8) lut_match_vasim_68_823(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_823));


assign vasim_68_w_match_823 = vasim_68_lut_match_823 ;

STE #(.fan_in(1)) vasim_68_ste_823 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_822 }),
                .match(vasim_68_w_match_823) ,
                .active_state(vasim_68_w_out_823));




/*wire vasim_68_w_out_824;
*/

wire vasim_68_lut_match_824;
wire vasim_68_w_match_824;

    
    
    

LUT_Match_vasim_68_824 #(8) lut_match_vasim_68_824(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_824));


assign vasim_68_w_match_824 = vasim_68_lut_match_824 ;

STE #(.fan_in(2)) vasim_68_ste_824 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_823 }),
                .match(vasim_68_w_match_824) ,
                .active_state(vasim_68_w_out_824));




/*wire vasim_68_w_out_825;
*/

wire vasim_68_lut_match_825;
wire vasim_68_w_match_825;

    
    
    

LUT_Match_vasim_68_825 #(8) lut_match_vasim_68_825(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_825));


assign vasim_68_w_match_825 = vasim_68_lut_match_825 ;

STE #(.fan_in(1)) vasim_68_ste_825 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_824 }),
                .match(vasim_68_w_match_825) ,
                .active_state(vasim_68_w_out_825));




/*wire vasim_68_w_out_826;
*/

wire vasim_68_lut_match_826;
wire vasim_68_w_match_826;

    
    
    

LUT_Match_vasim_68_826 #(8) lut_match_vasim_68_826(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_826));


assign vasim_68_w_match_826 = vasim_68_lut_match_826 ;

STE #(.fan_in(1)) vasim_68_ste_826 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_815 }),
                .match(vasim_68_w_match_826) ,
                .active_state(vasim_68_w_out_826));




/*wire vasim_68_w_out_827;
*/

wire vasim_68_lut_match_827;
wire vasim_68_w_match_827;

    
    
    

LUT_Match_vasim_68_827 #(8) lut_match_vasim_68_827(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_827));


assign vasim_68_w_match_827 = vasim_68_lut_match_827 ;

STE #(.fan_in(2)) vasim_68_ste_827 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_825 }),
                .match(vasim_68_w_match_827) ,
                .active_state(vasim_68_w_out_827));




/*wire vasim_68_w_out_828;
*/

wire vasim_68_lut_match_828;
wire vasim_68_w_match_828;

    
    
    

LUT_Match_vasim_68_828 #(8) lut_match_vasim_68_828(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_828));


assign vasim_68_w_match_828 = vasim_68_lut_match_828 ;

STE #(.fan_in(1)) vasim_68_ste_828 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_827 }),
                .match(vasim_68_w_match_828) ,
                .active_state(vasim_68_w_out_828));




/*wire vasim_68_w_out_829;
*/

wire vasim_68_lut_match_829;
wire vasim_68_w_match_829;

    
    
    

LUT_Match_vasim_68_829 #(8) lut_match_vasim_68_829(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_829));


assign vasim_68_w_match_829 = vasim_68_lut_match_829 ;

STE #(.fan_in(2)) vasim_68_ste_829 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_828 }),
                .match(vasim_68_w_match_829) ,
                .active_state(vasim_68_w_out_829));




/*wire vasim_68_w_out_830;
*/

wire vasim_68_lut_match_830;
wire vasim_68_w_match_830;

    
    
    

LUT_Match_vasim_68_830 #(8) lut_match_vasim_68_830(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_830));


assign vasim_68_w_match_830 = vasim_68_lut_match_830 ;

STE #(.fan_in(1)) vasim_68_ste_830 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_829 }),
                .match(vasim_68_w_match_830) ,
                .active_state(vasim_68_w_out_830));




/*wire vasim_68_w_out_831;
*/

wire vasim_68_lut_match_831;
wire vasim_68_w_match_831;

    
    
    

LUT_Match_vasim_68_831 #(8) lut_match_vasim_68_831(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_831));


assign vasim_68_w_match_831 = vasim_68_lut_match_831 ;

STE #(.fan_in(2)) vasim_68_ste_831 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_830 }),
                .match(vasim_68_w_match_831) ,
                .active_state(vasim_68_w_out_831));




/*wire vasim_68_w_out_832;
*/

wire vasim_68_lut_match_832;
wire vasim_68_w_match_832;

    
    
    

LUT_Match_vasim_68_832 #(8) lut_match_vasim_68_832(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_832));


assign vasim_68_w_match_832 = vasim_68_lut_match_832 ;

STE #(.fan_in(1)) vasim_68_ste_832 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_831 }),
                .match(vasim_68_w_match_832) ,
                .active_state(vasim_68_w_out_832));




/*wire vasim_68_w_out_833;
*/

wire vasim_68_lut_match_833;
wire vasim_68_w_match_833;

    
    
    

LUT_Match_vasim_68_833 #(8) lut_match_vasim_68_833(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_833));


assign vasim_68_w_match_833 = vasim_68_lut_match_833 ;

STE #(.fan_in(2)) vasim_68_ste_833 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_832 }),
                .match(vasim_68_w_match_833) ,
                .active_state(vasim_68_w_out_833));




/*wire vasim_68_w_out_834;
*/

wire vasim_68_lut_match_834;
wire vasim_68_w_match_834;

    
    
    

LUT_Match_vasim_68_834 #(8) lut_match_vasim_68_834(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_834));


assign vasim_68_w_match_834 = vasim_68_lut_match_834 ;

STE #(.fan_in(1)) vasim_68_ste_834 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_833 }),
                .match(vasim_68_w_match_834) ,
                .active_state(vasim_68_w_out_834));




/*wire vasim_68_w_out_835;
*/

wire vasim_68_lut_match_835;
wire vasim_68_w_match_835;

    
    
    

LUT_Match_vasim_68_835 #(8) lut_match_vasim_68_835(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_835));


assign vasim_68_w_match_835 = vasim_68_lut_match_835 ;

STE #(.fan_in(2)) vasim_68_ste_835 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_834 }),
                .match(vasim_68_w_match_835) ,
                .active_state(vasim_68_w_out_835));




/*wire vasim_68_w_out_836;
*/

wire vasim_68_lut_match_836;
wire vasim_68_w_match_836;

    
    
    

LUT_Match_vasim_68_836 #(8) lut_match_vasim_68_836(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_836));


assign vasim_68_w_match_836 = vasim_68_lut_match_836 ;

STE #(.fan_in(1)) vasim_68_ste_836 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_835 }),
                .match(vasim_68_w_match_836) ,
                .active_state(vasim_68_w_out_836));




/*wire vasim_68_w_out_837;
*/

wire vasim_68_lut_match_837;
wire vasim_68_w_match_837;

    
    
    

LUT_Match_vasim_68_837 #(8) lut_match_vasim_68_837(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_837));


assign vasim_68_w_match_837 = vasim_68_lut_match_837 ;

STE #(.fan_in(2)) vasim_68_ste_837 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_826 }),
                .match(vasim_68_w_match_837) ,
                .active_state(vasim_68_w_out_837));




/*wire vasim_68_w_out_838;
*/

wire vasim_68_lut_match_838;
wire vasim_68_w_match_838;

    
    
    

LUT_Match_vasim_68_838 #(8) lut_match_vasim_68_838(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_838));


assign vasim_68_w_match_838 = vasim_68_lut_match_838 ;

STE #(.fan_in(2)) vasim_68_ste_838 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_836 }),
                .match(vasim_68_w_match_838) ,
                .active_state(vasim_68_w_out_838));




/*wire vasim_68_w_out_839;
*/

wire vasim_68_lut_match_839;
wire vasim_68_w_match_839;

    
    
    

LUT_Match_vasim_68_839 #(8) lut_match_vasim_68_839(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_839));


assign vasim_68_w_match_839 = vasim_68_lut_match_839 ;

STE #(.fan_in(1)) vasim_68_ste_839 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_838 }),
                .match(vasim_68_w_match_839) ,
                .active_state(vasim_68_w_out_839));




/*wire vasim_68_w_out_840;
*/

wire vasim_68_lut_match_840;
wire vasim_68_w_match_840;

    
    
    

LUT_Match_vasim_68_840 #(8) lut_match_vasim_68_840(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_840));


assign vasim_68_w_match_840 = vasim_68_lut_match_840 ;

STE #(.fan_in(2)) vasim_68_ste_840 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_839 }),
                .match(vasim_68_w_match_840) ,
                .active_state(vasim_68_w_out_840));




/*wire vasim_68_w_out_841;
*/

wire vasim_68_lut_match_841;
wire vasim_68_w_match_841;

    
    
    

LUT_Match_vasim_68_841 #(8) lut_match_vasim_68_841(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_841));


assign vasim_68_w_match_841 = vasim_68_lut_match_841 ;

STE #(.fan_in(1)) vasim_68_ste_841 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_840 }),
                .match(vasim_68_w_match_841) ,
                .active_state(vasim_68_w_out_841));




/*wire vasim_68_w_out_842;
*/

wire vasim_68_lut_match_842;
wire vasim_68_w_match_842;

    
    
    

LUT_Match_vasim_68_842 #(8) lut_match_vasim_68_842(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_842));


assign vasim_68_w_match_842 = vasim_68_lut_match_842 ;

STE #(.fan_in(2)) vasim_68_ste_842 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_841 }),
                .match(vasim_68_w_match_842) ,
                .active_state(vasim_68_w_out_842));




/*wire vasim_68_w_out_843;
*/

wire vasim_68_lut_match_843;
wire vasim_68_w_match_843;

    
    
    

LUT_Match_vasim_68_843 #(8) lut_match_vasim_68_843(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_843));


assign vasim_68_w_match_843 = vasim_68_lut_match_843 ;

STE #(.fan_in(1)) vasim_68_ste_843 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_842 }),
                .match(vasim_68_w_match_843) ,
                .active_state(vasim_68_w_out_843));




/*wire vasim_68_w_out_844;
*/

wire vasim_68_lut_match_844;
wire vasim_68_w_match_844;

    
    
    

LUT_Match_vasim_68_844 #(8) lut_match_vasim_68_844(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_844));


assign vasim_68_w_match_844 = vasim_68_lut_match_844 ;

STE #(.fan_in(2)) vasim_68_ste_844 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_843 }),
                .match(vasim_68_w_match_844) ,
                .active_state(vasim_68_w_out_844));




/*wire vasim_68_w_out_845;
*/

wire vasim_68_lut_match_845;
wire vasim_68_w_match_845;

    
    
    

LUT_Match_vasim_68_845 #(8) lut_match_vasim_68_845(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_845));


assign vasim_68_w_match_845 = vasim_68_lut_match_845 ;

STE #(.fan_in(1)) vasim_68_ste_845 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_844 }),
                .match(vasim_68_w_match_845) ,
                .active_state(vasim_68_w_out_845));




/*wire vasim_68_w_out_846;
*/

wire vasim_68_lut_match_846;
wire vasim_68_w_match_846;

    
    
    

LUT_Match_vasim_68_846 #(8) lut_match_vasim_68_846(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_846));


assign vasim_68_w_match_846 = vasim_68_lut_match_846 ;

STE #(.fan_in(2)) vasim_68_ste_846 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_845 }),
                .match(vasim_68_w_match_846) ,
                .active_state(vasim_68_w_out_846));




/*wire vasim_68_w_out_847;
*/

wire vasim_68_lut_match_847;
wire vasim_68_w_match_847;

    
    
    

LUT_Match_vasim_68_847 #(8) lut_match_vasim_68_847(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_847));


assign vasim_68_w_match_847 = vasim_68_lut_match_847 ;

STE #(.fan_in(1)) vasim_68_ste_847 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_846 }),
                .match(vasim_68_w_match_847) ,
                .active_state(vasim_68_w_out_847));




/*wire vasim_68_w_out_848;
*/

wire vasim_68_lut_match_848;
wire vasim_68_w_match_848;

    
    
    

LUT_Match_vasim_68_848 #(8) lut_match_vasim_68_848(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_848));


assign vasim_68_w_match_848 = vasim_68_lut_match_848 ;

STE #(.fan_in(1)) vasim_68_ste_848 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_837 }),
                .match(vasim_68_w_match_848) ,
                .active_state(vasim_68_w_out_848));




/*wire vasim_68_w_out_849;
*/

wire vasim_68_lut_match_849;
wire vasim_68_w_match_849;

    
    
    

LUT_Match_vasim_68_849 #(8) lut_match_vasim_68_849(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_849));


assign vasim_68_w_match_849 = vasim_68_lut_match_849 ;

STE #(.fan_in(2)) vasim_68_ste_849 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_847 }),
                .match(vasim_68_w_match_849) ,
                .active_state(vasim_68_w_out_849));




/*wire vasim_68_w_out_850;
*/

wire vasim_68_lut_match_850;
wire vasim_68_w_match_850;

    
    
    

LUT_Match_vasim_68_850 #(8) lut_match_vasim_68_850(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_850));


assign vasim_68_w_match_850 = vasim_68_lut_match_850 ;

STE #(.fan_in(1)) vasim_68_ste_850 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_849 }),
                .match(vasim_68_w_match_850) ,
                .active_state(vasim_68_w_out_850));




/*wire vasim_68_w_out_851;
*/

wire vasim_68_lut_match_851;
wire vasim_68_w_match_851;

    
    
    

LUT_Match_vasim_68_851 #(8) lut_match_vasim_68_851(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_851));


assign vasim_68_w_match_851 = vasim_68_lut_match_851 ;

STE #(.fan_in(2)) vasim_68_ste_851 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_850 }),
                .match(vasim_68_w_match_851) ,
                .active_state(vasim_68_w_out_851));




/*wire vasim_68_w_out_852;
*/

wire vasim_68_lut_match_852;
wire vasim_68_w_match_852;

    
    
    

LUT_Match_vasim_68_852 #(8) lut_match_vasim_68_852(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_852));


assign vasim_68_w_match_852 = vasim_68_lut_match_852 ;

STE #(.fan_in(1)) vasim_68_ste_852 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_851 }),
                .match(vasim_68_w_match_852) ,
                .active_state(vasim_68_w_out_852));




/*wire vasim_68_w_out_853;
*/

wire vasim_68_lut_match_853;
wire vasim_68_w_match_853;

    
    
    

LUT_Match_vasim_68_853 #(8) lut_match_vasim_68_853(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_853));


assign vasim_68_w_match_853 = vasim_68_lut_match_853 ;

STE #(.fan_in(2)) vasim_68_ste_853 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_852 }),
                .match(vasim_68_w_match_853) ,
                .active_state(vasim_68_w_out_853));




/*wire vasim_68_w_out_854;
*/

wire vasim_68_lut_match_854;
wire vasim_68_w_match_854;

    
    
    

LUT_Match_vasim_68_854 #(8) lut_match_vasim_68_854(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_854));


assign vasim_68_w_match_854 = vasim_68_lut_match_854 ;

STE #(.fan_in(1)) vasim_68_ste_854 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_853 }),
                .match(vasim_68_w_match_854) ,
                .active_state(vasim_68_w_out_854));




/*wire vasim_68_w_out_855;
*/

wire vasim_68_lut_match_855;
wire vasim_68_w_match_855;

    
    
    

LUT_Match_vasim_68_855 #(8) lut_match_vasim_68_855(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_855));


assign vasim_68_w_match_855 = vasim_68_lut_match_855 ;

STE #(.fan_in(2)) vasim_68_ste_855 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_854 }),
                .match(vasim_68_w_match_855) ,
                .active_state(vasim_68_w_out_855));




/*wire vasim_68_w_out_856;
*/

wire vasim_68_lut_match_856;
wire vasim_68_w_match_856;

    
    
    

LUT_Match_vasim_68_856 #(8) lut_match_vasim_68_856(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_856));


assign vasim_68_w_match_856 = vasim_68_lut_match_856 ;

STE #(.fan_in(1)) vasim_68_ste_856 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_855 }),
                .match(vasim_68_w_match_856) ,
                .active_state(vasim_68_w_out_856));




/*wire vasim_68_w_out_857;
*/

wire vasim_68_lut_match_857;
wire vasim_68_w_match_857;

    
    
    

LUT_Match_vasim_68_857 #(8) lut_match_vasim_68_857(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_857));


assign vasim_68_w_match_857 = vasim_68_lut_match_857 ;

STE #(.fan_in(2)) vasim_68_ste_857 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_856 }),
                .match(vasim_68_w_match_857) ,
                .active_state(vasim_68_w_out_857));




/*wire vasim_68_w_out_858;
*/

wire vasim_68_lut_match_858;
wire vasim_68_w_match_858;

    
    
    

LUT_Match_vasim_68_858 #(8) lut_match_vasim_68_858(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_858));


assign vasim_68_w_match_858 = vasim_68_lut_match_858 ;

STE #(.fan_in(1)) vasim_68_ste_858 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_857 }),
                .match(vasim_68_w_match_858) ,
                .active_state(vasim_68_w_out_858));




/*wire vasim_68_w_out_859;
*/

wire vasim_68_lut_match_859;
wire vasim_68_w_match_859;

    
    
    

LUT_Match_vasim_68_859 #(8) lut_match_vasim_68_859(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_859));


assign vasim_68_w_match_859 = vasim_68_lut_match_859 ;

STE #(.fan_in(1)) vasim_68_ste_859 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_748 }),
                .match(vasim_68_w_match_859) ,
                .active_state(vasim_68_w_out_859));




/*wire vasim_68_w_out_860;
*/

wire vasim_68_lut_match_860;
wire vasim_68_w_match_860;

    
    
    

LUT_Match_vasim_68_860 #(8) lut_match_vasim_68_860(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_860));


assign vasim_68_w_match_860 = vasim_68_lut_match_860 ;

STE #(.fan_in(2)) vasim_68_ste_860 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_848, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_860) ,
                .active_state(vasim_68_w_out_860));




/*wire vasim_68_w_out_861;
*/

wire vasim_68_lut_match_861;
wire vasim_68_w_match_861;

    
    
    

LUT_Match_vasim_68_861 #(8) lut_match_vasim_68_861(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_861));


assign vasim_68_w_match_861 = vasim_68_lut_match_861 ;

STE #(.fan_in(2)) vasim_68_ste_861 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_858 }),
                .match(vasim_68_w_match_861) ,
                .active_state(vasim_68_w_out_861));




/*wire vasim_68_w_out_862;
*/

wire vasim_68_lut_match_862;
wire vasim_68_w_match_862;

    
    
    

LUT_Match_vasim_68_862 #(8) lut_match_vasim_68_862(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_862));


assign vasim_68_w_match_862 = vasim_68_lut_match_862 ;

STE #(.fan_in(1)) vasim_68_ste_862 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_861 }),
                .match(vasim_68_w_match_862) ,
                .active_state(vasim_68_w_out_862));




/*wire vasim_68_w_out_863;
*/

wire vasim_68_lut_match_863;
wire vasim_68_w_match_863;

    
    
    

LUT_Match_vasim_68_863 #(8) lut_match_vasim_68_863(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_863));


assign vasim_68_w_match_863 = vasim_68_lut_match_863 ;

STE #(.fan_in(2)) vasim_68_ste_863 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_862 }),
                .match(vasim_68_w_match_863) ,
                .active_state(vasim_68_w_out_863));




/*wire vasim_68_w_out_864;
*/

wire vasim_68_lut_match_864;
wire vasim_68_w_match_864;

    
    
    

LUT_Match_vasim_68_864 #(8) lut_match_vasim_68_864(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_864));


assign vasim_68_w_match_864 = vasim_68_lut_match_864 ;

STE #(.fan_in(1)) vasim_68_ste_864 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_863 }),
                .match(vasim_68_w_match_864) ,
                .active_state(vasim_68_w_out_864));




/*wire vasim_68_w_out_865;
*/

wire vasim_68_lut_match_865;
wire vasim_68_w_match_865;

    
    
    

LUT_Match_vasim_68_865 #(8) lut_match_vasim_68_865(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_865));


assign vasim_68_w_match_865 = vasim_68_lut_match_865 ;

STE #(.fan_in(2)) vasim_68_ste_865 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_864 }),
                .match(vasim_68_w_match_865) ,
                .active_state(vasim_68_w_out_865));




/*wire vasim_68_w_out_866;
*/

wire vasim_68_lut_match_866;
wire vasim_68_w_match_866;

    
    
    

LUT_Match_vasim_68_866 #(8) lut_match_vasim_68_866(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_866));


assign vasim_68_w_match_866 = vasim_68_lut_match_866 ;

STE #(.fan_in(1)) vasim_68_ste_866 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_865 }),
                .match(vasim_68_w_match_866) ,
                .active_state(vasim_68_w_out_866));




/*wire vasim_68_w_out_867;
*/

wire vasim_68_lut_match_867;
wire vasim_68_w_match_867;

    
    
    

LUT_Match_vasim_68_867 #(8) lut_match_vasim_68_867(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_867));


assign vasim_68_w_match_867 = vasim_68_lut_match_867 ;

STE #(.fan_in(2)) vasim_68_ste_867 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_866 }),
                .match(vasim_68_w_match_867) ,
                .active_state(vasim_68_w_out_867));




/*wire vasim_68_w_out_868;
*/

wire vasim_68_lut_match_868;
wire vasim_68_w_match_868;

    
    
    

LUT_Match_vasim_68_868 #(8) lut_match_vasim_68_868(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_868));


assign vasim_68_w_match_868 = vasim_68_lut_match_868 ;

STE #(.fan_in(1)) vasim_68_ste_868 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_867 }),
                .match(vasim_68_w_match_868) ,
                .active_state(vasim_68_w_out_868));




/*wire vasim_68_w_out_869;
*/

wire vasim_68_lut_match_869;
wire vasim_68_w_match_869;

    
    
    

LUT_Match_vasim_68_869 #(8) lut_match_vasim_68_869(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_869));


assign vasim_68_w_match_869 = vasim_68_lut_match_869 ;

STE #(.fan_in(2)) vasim_68_ste_869 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_868 }),
                .match(vasim_68_w_match_869) ,
                .active_state(vasim_68_w_out_869));




/*wire vasim_68_w_out_870;
*/

wire vasim_68_lut_match_870;
wire vasim_68_w_match_870;

    
    
    

LUT_Match_vasim_68_870 #(8) lut_match_vasim_68_870(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_870));


assign vasim_68_w_match_870 = vasim_68_lut_match_870 ;

STE #(.fan_in(1)) vasim_68_ste_870 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_869 }),
                .match(vasim_68_w_match_870) ,
                .active_state(vasim_68_w_out_870));




/*wire vasim_68_w_out_871;
*/

wire vasim_68_lut_match_871;
wire vasim_68_w_match_871;

    
    
    

LUT_Match_vasim_68_871 #(8) lut_match_vasim_68_871(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_871));


assign vasim_68_w_match_871 = vasim_68_lut_match_871 ;

STE #(.fan_in(1)) vasim_68_ste_871 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_860 }),
                .match(vasim_68_w_match_871) ,
                .active_state(vasim_68_w_out_871));




/*wire vasim_68_w_out_872;
*/

wire vasim_68_lut_match_872;
wire vasim_68_w_match_872;

    
    
    

LUT_Match_vasim_68_872 #(8) lut_match_vasim_68_872(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_872));


assign vasim_68_w_match_872 = vasim_68_lut_match_872 ;

STE #(.fan_in(2)) vasim_68_ste_872 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_870 }),
                .match(vasim_68_w_match_872) ,
                .active_state(vasim_68_w_out_872));




/*wire vasim_68_w_out_873;
*/

wire vasim_68_lut_match_873;
wire vasim_68_w_match_873;

    
    
    

LUT_Match_vasim_68_873 #(8) lut_match_vasim_68_873(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_873));


assign vasim_68_w_match_873 = vasim_68_lut_match_873 ;

STE #(.fan_in(1)) vasim_68_ste_873 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_872 }),
                .match(vasim_68_w_match_873) ,
                .active_state(vasim_68_w_out_873));




/*wire vasim_68_w_out_874;
*/

wire vasim_68_lut_match_874;
wire vasim_68_w_match_874;

    
    
    

LUT_Match_vasim_68_874 #(8) lut_match_vasim_68_874(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_874));


assign vasim_68_w_match_874 = vasim_68_lut_match_874 ;

STE #(.fan_in(2)) vasim_68_ste_874 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_873 }),
                .match(vasim_68_w_match_874) ,
                .active_state(vasim_68_w_out_874));




/*wire vasim_68_w_out_875;
*/

wire vasim_68_lut_match_875;
wire vasim_68_w_match_875;

    
    
    

LUT_Match_vasim_68_875 #(8) lut_match_vasim_68_875(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_875));


assign vasim_68_w_match_875 = vasim_68_lut_match_875 ;

STE #(.fan_in(1)) vasim_68_ste_875 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_874 }),
                .match(vasim_68_w_match_875) ,
                .active_state(vasim_68_w_out_875));




/*wire vasim_68_w_out_876;
*/

wire vasim_68_lut_match_876;
wire vasim_68_w_match_876;

    
    
    

LUT_Match_vasim_68_876 #(8) lut_match_vasim_68_876(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_876));


assign vasim_68_w_match_876 = vasim_68_lut_match_876 ;

STE #(.fan_in(2)) vasim_68_ste_876 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_875 }),
                .match(vasim_68_w_match_876) ,
                .active_state(vasim_68_w_out_876));




/*wire vasim_68_w_out_877;
*/

wire vasim_68_lut_match_877;
wire vasim_68_w_match_877;

    
    
    

LUT_Match_vasim_68_877 #(8) lut_match_vasim_68_877(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_877));


assign vasim_68_w_match_877 = vasim_68_lut_match_877 ;

STE #(.fan_in(1)) vasim_68_ste_877 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_876 }),
                .match(vasim_68_w_match_877) ,
                .active_state(vasim_68_w_out_877));




/*wire vasim_68_w_out_878;
*/

wire vasim_68_lut_match_878;
wire vasim_68_w_match_878;

    
    
    

LUT_Match_vasim_68_878 #(8) lut_match_vasim_68_878(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_878));


assign vasim_68_w_match_878 = vasim_68_lut_match_878 ;

STE #(.fan_in(2)) vasim_68_ste_878 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_877 }),
                .match(vasim_68_w_match_878) ,
                .active_state(vasim_68_w_out_878));




/*wire vasim_68_w_out_879;
*/

wire vasim_68_lut_match_879;
wire vasim_68_w_match_879;

    
    
    

LUT_Match_vasim_68_879 #(8) lut_match_vasim_68_879(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_879));


assign vasim_68_w_match_879 = vasim_68_lut_match_879 ;

STE #(.fan_in(1)) vasim_68_ste_879 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_878 }),
                .match(vasim_68_w_match_879) ,
                .active_state(vasim_68_w_out_879));




/*wire vasim_68_w_out_880;
*/

wire vasim_68_lut_match_880;
wire vasim_68_w_match_880;

    
    
    

LUT_Match_vasim_68_880 #(8) lut_match_vasim_68_880(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_880));


assign vasim_68_w_match_880 = vasim_68_lut_match_880 ;

STE #(.fan_in(2)) vasim_68_ste_880 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_879 }),
                .match(vasim_68_w_match_880) ,
                .active_state(vasim_68_w_out_880));




/*wire vasim_68_w_out_881;
*/

wire vasim_68_lut_match_881;
wire vasim_68_w_match_881;

    
    
    

LUT_Match_vasim_68_881 #(8) lut_match_vasim_68_881(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_881));


assign vasim_68_w_match_881 = vasim_68_lut_match_881 ;

STE #(.fan_in(1)) vasim_68_ste_881 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_880 }),
                .match(vasim_68_w_match_881) ,
                .active_state(vasim_68_w_out_881));




/*wire vasim_68_w_out_882;
*/

wire vasim_68_lut_match_882;
wire vasim_68_w_match_882;

    
    
    

LUT_Match_vasim_68_882 #(8) lut_match_vasim_68_882(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_882));


assign vasim_68_w_match_882 = vasim_68_lut_match_882 ;

STE #(.fan_in(2)) vasim_68_ste_882 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_871 }),
                .match(vasim_68_w_match_882) ,
                .active_state(vasim_68_w_out_882));




/*wire vasim_68_w_out_883;
*/

wire vasim_68_lut_match_883;
wire vasim_68_w_match_883;

    
    
    

LUT_Match_vasim_68_883 #(8) lut_match_vasim_68_883(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_883));


assign vasim_68_w_match_883 = vasim_68_lut_match_883 ;

STE #(.fan_in(2)) vasim_68_ste_883 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_881 }),
                .match(vasim_68_w_match_883) ,
                .active_state(vasim_68_w_out_883));




/*wire vasim_68_w_out_884;
*/

wire vasim_68_lut_match_884;
wire vasim_68_w_match_884;

    
    
    

LUT_Match_vasim_68_884 #(8) lut_match_vasim_68_884(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_884));


assign vasim_68_w_match_884 = vasim_68_lut_match_884 ;

STE #(.fan_in(1)) vasim_68_ste_884 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_883 }),
                .match(vasim_68_w_match_884) ,
                .active_state(vasim_68_w_out_884));




/*wire vasim_68_w_out_885;
*/

wire vasim_68_lut_match_885;
wire vasim_68_w_match_885;

    
    
    

LUT_Match_vasim_68_885 #(8) lut_match_vasim_68_885(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_885));


assign vasim_68_w_match_885 = vasim_68_lut_match_885 ;

STE #(.fan_in(2)) vasim_68_ste_885 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_884 }),
                .match(vasim_68_w_match_885) ,
                .active_state(vasim_68_w_out_885));




/*wire vasim_68_w_out_886;
*/

wire vasim_68_lut_match_886;
wire vasim_68_w_match_886;

    
    
    

LUT_Match_vasim_68_886 #(8) lut_match_vasim_68_886(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_886));


assign vasim_68_w_match_886 = vasim_68_lut_match_886 ;

STE #(.fan_in(1)) vasim_68_ste_886 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_885 }),
                .match(vasim_68_w_match_886) ,
                .active_state(vasim_68_w_out_886));




/*wire vasim_68_w_out_887;
*/

wire vasim_68_lut_match_887;
wire vasim_68_w_match_887;

    
    
    

LUT_Match_vasim_68_887 #(8) lut_match_vasim_68_887(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_887));


assign vasim_68_w_match_887 = vasim_68_lut_match_887 ;

STE #(.fan_in(2)) vasim_68_ste_887 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_886 }),
                .match(vasim_68_w_match_887) ,
                .active_state(vasim_68_w_out_887));




/*wire vasim_68_w_out_888;
*/

wire vasim_68_lut_match_888;
wire vasim_68_w_match_888;

    
    
    

LUT_Match_vasim_68_888 #(8) lut_match_vasim_68_888(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_888));


assign vasim_68_w_match_888 = vasim_68_lut_match_888 ;

STE #(.fan_in(1)) vasim_68_ste_888 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_887 }),
                .match(vasim_68_w_match_888) ,
                .active_state(vasim_68_w_out_888));




/*wire vasim_68_w_out_889;
*/

wire vasim_68_lut_match_889;
wire vasim_68_w_match_889;

    
    
    

LUT_Match_vasim_68_889 #(8) lut_match_vasim_68_889(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_889));


assign vasim_68_w_match_889 = vasim_68_lut_match_889 ;

STE #(.fan_in(2)) vasim_68_ste_889 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_888 }),
                .match(vasim_68_w_match_889) ,
                .active_state(vasim_68_w_out_889));




/*wire vasim_68_w_out_890;
*/

wire vasim_68_lut_match_890;
wire vasim_68_w_match_890;

    
    
    

LUT_Match_vasim_68_890 #(8) lut_match_vasim_68_890(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_890));


assign vasim_68_w_match_890 = vasim_68_lut_match_890 ;

STE #(.fan_in(1)) vasim_68_ste_890 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_889 }),
                .match(vasim_68_w_match_890) ,
                .active_state(vasim_68_w_out_890));




/*wire vasim_68_w_out_891;
*/

wire vasim_68_lut_match_891;
wire vasim_68_w_match_891;

    
    
    

LUT_Match_vasim_68_891 #(8) lut_match_vasim_68_891(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_891));


assign vasim_68_w_match_891 = vasim_68_lut_match_891 ;

STE #(.fan_in(2)) vasim_68_ste_891 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_890 }),
                .match(vasim_68_w_match_891) ,
                .active_state(vasim_68_w_out_891));




/*wire vasim_68_w_out_892;
*/

wire vasim_68_lut_match_892;
wire vasim_68_w_match_892;

    
    
    

LUT_Match_vasim_68_892 #(8) lut_match_vasim_68_892(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_892));


assign vasim_68_w_match_892 = vasim_68_lut_match_892 ;

STE #(.fan_in(1)) vasim_68_ste_892 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_891 }),
                .match(vasim_68_w_match_892) ,
                .active_state(vasim_68_w_out_892));




/*wire vasim_68_w_out_893;
*/

wire vasim_68_lut_match_893;
wire vasim_68_w_match_893;

    
    
    

LUT_Match_vasim_68_893 #(8) lut_match_vasim_68_893(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_893));


assign vasim_68_w_match_893 = vasim_68_lut_match_893 ;

STE #(.fan_in(1)) vasim_68_ste_893 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_882 }),
                .match(vasim_68_w_match_893) ,
                .active_state(vasim_68_w_out_893));




/*wire vasim_68_w_out_894;
*/

wire vasim_68_lut_match_894;
wire vasim_68_w_match_894;

    
    
    

LUT_Match_vasim_68_894 #(8) lut_match_vasim_68_894(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_894));


assign vasim_68_w_match_894 = vasim_68_lut_match_894 ;

STE #(.fan_in(2)) vasim_68_ste_894 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_892 }),
                .match(vasim_68_w_match_894) ,
                .active_state(vasim_68_w_out_894));




/*wire vasim_68_w_out_895;
*/

wire vasim_68_lut_match_895;
wire vasim_68_w_match_895;

    
    
    

LUT_Match_vasim_68_895 #(8) lut_match_vasim_68_895(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_895));


assign vasim_68_w_match_895 = vasim_68_lut_match_895 ;

STE #(.fan_in(1)) vasim_68_ste_895 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_894 }),
                .match(vasim_68_w_match_895) ,
                .active_state(vasim_68_w_out_895));




/*wire vasim_68_w_out_896;
*/

wire vasim_68_lut_match_896;
wire vasim_68_w_match_896;

    
    
    

LUT_Match_vasim_68_896 #(8) lut_match_vasim_68_896(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_896));


assign vasim_68_w_match_896 = vasim_68_lut_match_896 ;

STE #(.fan_in(2)) vasim_68_ste_896 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_895 }),
                .match(vasim_68_w_match_896) ,
                .active_state(vasim_68_w_out_896));




/*wire vasim_68_w_out_897;
*/

wire vasim_68_lut_match_897;
wire vasim_68_w_match_897;

    
    
    

LUT_Match_vasim_68_897 #(8) lut_match_vasim_68_897(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_897));


assign vasim_68_w_match_897 = vasim_68_lut_match_897 ;

STE #(.fan_in(1)) vasim_68_ste_897 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_896 }),
                .match(vasim_68_w_match_897) ,
                .active_state(vasim_68_w_out_897));




/*wire vasim_68_w_out_898;
*/

wire vasim_68_lut_match_898;
wire vasim_68_w_match_898;

    
    
    

LUT_Match_vasim_68_898 #(8) lut_match_vasim_68_898(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_898));


assign vasim_68_w_match_898 = vasim_68_lut_match_898 ;

STE #(.fan_in(2)) vasim_68_ste_898 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_897 }),
                .match(vasim_68_w_match_898) ,
                .active_state(vasim_68_w_out_898));




/*wire vasim_68_w_out_899;
*/

wire vasim_68_lut_match_899;
wire vasim_68_w_match_899;

    
    
    

LUT_Match_vasim_68_899 #(8) lut_match_vasim_68_899(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_899));


assign vasim_68_w_match_899 = vasim_68_lut_match_899 ;

STE #(.fan_in(1)) vasim_68_ste_899 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_898 }),
                .match(vasim_68_w_match_899) ,
                .active_state(vasim_68_w_out_899));




/*wire vasim_68_w_out_900;
*/

wire vasim_68_lut_match_900;
wire vasim_68_w_match_900;

    
    
    

LUT_Match_vasim_68_900 #(8) lut_match_vasim_68_900(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_900));


assign vasim_68_w_match_900 = vasim_68_lut_match_900 ;

STE #(.fan_in(2)) vasim_68_ste_900 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_899 }),
                .match(vasim_68_w_match_900) ,
                .active_state(vasim_68_w_out_900));




/*wire vasim_68_w_out_901;
*/

wire vasim_68_lut_match_901;
wire vasim_68_w_match_901;

    
    
    

LUT_Match_vasim_68_901 #(8) lut_match_vasim_68_901(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_901));


assign vasim_68_w_match_901 = vasim_68_lut_match_901 ;

STE #(.fan_in(1)) vasim_68_ste_901 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_900 }),
                .match(vasim_68_w_match_901) ,
                .active_state(vasim_68_w_out_901));




/*wire vasim_68_w_out_902;
*/

wire vasim_68_lut_match_902;
wire vasim_68_w_match_902;

    
    
    

LUT_Match_vasim_68_902 #(8) lut_match_vasim_68_902(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_902));


assign vasim_68_w_match_902 = vasim_68_lut_match_902 ;

STE #(.fan_in(2)) vasim_68_ste_902 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_901 }),
                .match(vasim_68_w_match_902) ,
                .active_state(vasim_68_w_out_902));




/*wire vasim_68_w_out_903;
*/

wire vasim_68_lut_match_903;
wire vasim_68_w_match_903;

    
    
    

LUT_Match_vasim_68_903 #(8) lut_match_vasim_68_903(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_903));


assign vasim_68_w_match_903 = vasim_68_lut_match_903 ;

STE #(.fan_in(1)) vasim_68_ste_903 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_902 }),
                .match(vasim_68_w_match_903) ,
                .active_state(vasim_68_w_out_903));




/*wire vasim_68_w_out_904;
*/

wire vasim_68_lut_match_904;
wire vasim_68_w_match_904;

    
    
    

LUT_Match_vasim_68_904 #(8) lut_match_vasim_68_904(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_904));


assign vasim_68_w_match_904 = vasim_68_lut_match_904 ;

STE #(.fan_in(2)) vasim_68_ste_904 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_893 }),
                .match(vasim_68_w_match_904) ,
                .active_state(vasim_68_w_out_904));




/*wire vasim_68_w_out_905;
*/

wire vasim_68_lut_match_905;
wire vasim_68_w_match_905;

    
    
    

LUT_Match_vasim_68_905 #(8) lut_match_vasim_68_905(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_905));


assign vasim_68_w_match_905 = vasim_68_lut_match_905 ;

STE #(.fan_in(2)) vasim_68_ste_905 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_903 }),
                .match(vasim_68_w_match_905) ,
                .active_state(vasim_68_w_out_905));




/*wire vasim_68_w_out_906;
*/

wire vasim_68_lut_match_906;
wire vasim_68_w_match_906;

    
    
    

LUT_Match_vasim_68_906 #(8) lut_match_vasim_68_906(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_906));


assign vasim_68_w_match_906 = vasim_68_lut_match_906 ;

STE #(.fan_in(1)) vasim_68_ste_906 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_905 }),
                .match(vasim_68_w_match_906) ,
                .active_state(vasim_68_w_out_906));




/*wire vasim_68_w_out_907;
*/

wire vasim_68_lut_match_907;
wire vasim_68_w_match_907;

    
    
    

LUT_Match_vasim_68_907 #(8) lut_match_vasim_68_907(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_907));


assign vasim_68_w_match_907 = vasim_68_lut_match_907 ;

STE #(.fan_in(2)) vasim_68_ste_907 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_906 }),
                .match(vasim_68_w_match_907) ,
                .active_state(vasim_68_w_out_907));




/*wire vasim_68_w_out_908;
*/

wire vasim_68_lut_match_908;
wire vasim_68_w_match_908;

    
    
    

LUT_Match_vasim_68_908 #(8) lut_match_vasim_68_908(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_908));


assign vasim_68_w_match_908 = vasim_68_lut_match_908 ;

STE #(.fan_in(1)) vasim_68_ste_908 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_907 }),
                .match(vasim_68_w_match_908) ,
                .active_state(vasim_68_w_out_908));




/*wire vasim_68_w_out_909;
*/

wire vasim_68_lut_match_909;
wire vasim_68_w_match_909;

    
    
    

LUT_Match_vasim_68_909 #(8) lut_match_vasim_68_909(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_909));


assign vasim_68_w_match_909 = vasim_68_lut_match_909 ;

STE #(.fan_in(2)) vasim_68_ste_909 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_908 }),
                .match(vasim_68_w_match_909) ,
                .active_state(vasim_68_w_out_909));




/*wire vasim_68_w_out_910;
*/

wire vasim_68_lut_match_910;
wire vasim_68_w_match_910;

    
    
    

LUT_Match_vasim_68_910 #(8) lut_match_vasim_68_910(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_910));


assign vasim_68_w_match_910 = vasim_68_lut_match_910 ;

STE #(.fan_in(1)) vasim_68_ste_910 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_909 }),
                .match(vasim_68_w_match_910) ,
                .active_state(vasim_68_w_out_910));




/*wire vasim_68_w_out_911;
*/

wire vasim_68_lut_match_911;
wire vasim_68_w_match_911;

    
    
    

LUT_Match_vasim_68_911 #(8) lut_match_vasim_68_911(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_911));


assign vasim_68_w_match_911 = vasim_68_lut_match_911 ;

STE #(.fan_in(2)) vasim_68_ste_911 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_910 }),
                .match(vasim_68_w_match_911) ,
                .active_state(vasim_68_w_out_911));




/*wire vasim_68_w_out_912;
*/

wire vasim_68_lut_match_912;
wire vasim_68_w_match_912;

    
    
    

LUT_Match_vasim_68_912 #(8) lut_match_vasim_68_912(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_912));


assign vasim_68_w_match_912 = vasim_68_lut_match_912 ;

STE #(.fan_in(1)) vasim_68_ste_912 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_911 }),
                .match(vasim_68_w_match_912) ,
                .active_state(vasim_68_w_out_912));




/*wire vasim_68_w_out_913;
*/

wire vasim_68_lut_match_913;
wire vasim_68_w_match_913;

    
    
    

LUT_Match_vasim_68_913 #(8) lut_match_vasim_68_913(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_913));


assign vasim_68_w_match_913 = vasim_68_lut_match_913 ;

STE #(.fan_in(2)) vasim_68_ste_913 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_912 }),
                .match(vasim_68_w_match_913) ,
                .active_state(vasim_68_w_out_913));




/*wire vasim_68_w_out_914;
*/

wire vasim_68_lut_match_914;
wire vasim_68_w_match_914;

    
    
    

LUT_Match_vasim_68_914 #(8) lut_match_vasim_68_914(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_914));


assign vasim_68_w_match_914 = vasim_68_lut_match_914 ;

STE #(.fan_in(1)) vasim_68_ste_914 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_913 }),
                .match(vasim_68_w_match_914) ,
                .active_state(vasim_68_w_out_914));




/*wire vasim_68_w_out_915;
*/

wire vasim_68_lut_match_915;
wire vasim_68_w_match_915;

    
    
    

LUT_Match_vasim_68_915 #(8) lut_match_vasim_68_915(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_915));


assign vasim_68_w_match_915 = vasim_68_lut_match_915 ;

STE #(.fan_in(1)) vasim_68_ste_915 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_904 }),
                .match(vasim_68_w_match_915) ,
                .active_state(vasim_68_w_out_915));




/*wire vasim_68_w_out_916;
*/

wire vasim_68_lut_match_916;
wire vasim_68_w_match_916;

    
    
    

LUT_Match_vasim_68_916 #(8) lut_match_vasim_68_916(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_916));


assign vasim_68_w_match_916 = vasim_68_lut_match_916 ;

STE #(.fan_in(2)) vasim_68_ste_916 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_914 }),
                .match(vasim_68_w_match_916) ,
                .active_state(vasim_68_w_out_916));




/*wire vasim_68_w_out_917;
*/

wire vasim_68_lut_match_917;
wire vasim_68_w_match_917;

    
    
    

LUT_Match_vasim_68_917 #(8) lut_match_vasim_68_917(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_917));


assign vasim_68_w_match_917 = vasim_68_lut_match_917 ;

STE #(.fan_in(1)) vasim_68_ste_917 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_916 }),
                .match(vasim_68_w_match_917) ,
                .active_state(vasim_68_w_out_917));




/*wire vasim_68_w_out_918;
*/

wire vasim_68_lut_match_918;
wire vasim_68_w_match_918;

    
    
    

LUT_Match_vasim_68_918 #(8) lut_match_vasim_68_918(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_918));


assign vasim_68_w_match_918 = vasim_68_lut_match_918 ;

STE #(.fan_in(2)) vasim_68_ste_918 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_917 }),
                .match(vasim_68_w_match_918) ,
                .active_state(vasim_68_w_out_918));




/*wire vasim_68_w_out_919;
*/

wire vasim_68_lut_match_919;
wire vasim_68_w_match_919;

    
    
    

LUT_Match_vasim_68_919 #(8) lut_match_vasim_68_919(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_919));


assign vasim_68_w_match_919 = vasim_68_lut_match_919 ;

STE #(.fan_in(1)) vasim_68_ste_919 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_918 }),
                .match(vasim_68_w_match_919) ,
                .active_state(vasim_68_w_out_919));




/*wire vasim_68_w_out_920;
*/

wire vasim_68_lut_match_920;
wire vasim_68_w_match_920;

    
    
    

LUT_Match_vasim_68_920 #(8) lut_match_vasim_68_920(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_920));


assign vasim_68_w_match_920 = vasim_68_lut_match_920 ;

STE #(.fan_in(2)) vasim_68_ste_920 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_919 }),
                .match(vasim_68_w_match_920) ,
                .active_state(vasim_68_w_out_920));




/*wire vasim_68_w_out_921;
*/

wire vasim_68_lut_match_921;
wire vasim_68_w_match_921;

    
    
    

LUT_Match_vasim_68_921 #(8) lut_match_vasim_68_921(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_921));


assign vasim_68_w_match_921 = vasim_68_lut_match_921 ;

STE #(.fan_in(1)) vasim_68_ste_921 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_920 }),
                .match(vasim_68_w_match_921) ,
                .active_state(vasim_68_w_out_921));




/*wire vasim_68_w_out_922;
*/

wire vasim_68_lut_match_922;
wire vasim_68_w_match_922;

    
    
    

LUT_Match_vasim_68_922 #(8) lut_match_vasim_68_922(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_922));


assign vasim_68_w_match_922 = vasim_68_lut_match_922 ;

STE #(.fan_in(2)) vasim_68_ste_922 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_921 }),
                .match(vasim_68_w_match_922) ,
                .active_state(vasim_68_w_out_922));




/*wire vasim_68_w_out_923;
*/

wire vasim_68_lut_match_923;
wire vasim_68_w_match_923;

    
    
    

LUT_Match_vasim_68_923 #(8) lut_match_vasim_68_923(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_923));


assign vasim_68_w_match_923 = vasim_68_lut_match_923 ;

STE #(.fan_in(1)) vasim_68_ste_923 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_922 }),
                .match(vasim_68_w_match_923) ,
                .active_state(vasim_68_w_out_923));




/*wire vasim_68_w_out_924;
*/

wire vasim_68_lut_match_924;
wire vasim_68_w_match_924;

    
    
    

LUT_Match_vasim_68_924 #(8) lut_match_vasim_68_924(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_924));


assign vasim_68_w_match_924 = vasim_68_lut_match_924 ;

STE #(.fan_in(2)) vasim_68_ste_924 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_923 }),
                .match(vasim_68_w_match_924) ,
                .active_state(vasim_68_w_out_924));




/*wire vasim_68_w_out_925;
*/

wire vasim_68_lut_match_925;
wire vasim_68_w_match_925;

    
    
    

LUT_Match_vasim_68_925 #(8) lut_match_vasim_68_925(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_925));


assign vasim_68_w_match_925 = vasim_68_lut_match_925 ;

STE #(.fan_in(1)) vasim_68_ste_925 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_924 }),
                .match(vasim_68_w_match_925) ,
                .active_state(vasim_68_w_out_925));




/*wire vasim_68_w_out_926;
*/

wire vasim_68_lut_match_926;
wire vasim_68_w_match_926;

    
    
    

LUT_Match_vasim_68_926 #(8) lut_match_vasim_68_926(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_926));


assign vasim_68_w_match_926 = vasim_68_lut_match_926 ;

STE #(.fan_in(2)) vasim_68_ste_926 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_915 }),
                .match(vasim_68_w_match_926) ,
                .active_state(vasim_68_w_out_926));




/*wire vasim_68_w_out_927;
*/

wire vasim_68_lut_match_927;
wire vasim_68_w_match_927;

    
    
    

LUT_Match_vasim_68_927 #(8) lut_match_vasim_68_927(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_927));


assign vasim_68_w_match_927 = vasim_68_lut_match_927 ;

STE #(.fan_in(2)) vasim_68_ste_927 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_925 }),
                .match(vasim_68_w_match_927) ,
                .active_state(vasim_68_w_out_927));




/*wire vasim_68_w_out_928;
*/

wire vasim_68_lut_match_928;
wire vasim_68_w_match_928;

    
    
    

LUT_Match_vasim_68_928 #(8) lut_match_vasim_68_928(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_928));


assign vasim_68_w_match_928 = vasim_68_lut_match_928 ;

STE #(.fan_in(1)) vasim_68_ste_928 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_927 }),
                .match(vasim_68_w_match_928) ,
                .active_state(vasim_68_w_out_928));




/*wire vasim_68_w_out_929;
*/

wire vasim_68_lut_match_929;
wire vasim_68_w_match_929;

    
    
    

LUT_Match_vasim_68_929 #(8) lut_match_vasim_68_929(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_929));


assign vasim_68_w_match_929 = vasim_68_lut_match_929 ;

STE #(.fan_in(2)) vasim_68_ste_929 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_928 }),
                .match(vasim_68_w_match_929) ,
                .active_state(vasim_68_w_out_929));




/*wire vasim_68_w_out_930;
*/

wire vasim_68_lut_match_930;
wire vasim_68_w_match_930;

    
    
    

LUT_Match_vasim_68_930 #(8) lut_match_vasim_68_930(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_930));


assign vasim_68_w_match_930 = vasim_68_lut_match_930 ;

STE #(.fan_in(1)) vasim_68_ste_930 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_929 }),
                .match(vasim_68_w_match_930) ,
                .active_state(vasim_68_w_out_930));




/*wire vasim_68_w_out_931;
*/

wire vasim_68_lut_match_931;
wire vasim_68_w_match_931;

    
    
    

LUT_Match_vasim_68_931 #(8) lut_match_vasim_68_931(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_931));


assign vasim_68_w_match_931 = vasim_68_lut_match_931 ;

STE #(.fan_in(2)) vasim_68_ste_931 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_930 }),
                .match(vasim_68_w_match_931) ,
                .active_state(vasim_68_w_out_931));




/*wire vasim_68_w_out_932;
*/

wire vasim_68_lut_match_932;
wire vasim_68_w_match_932;

    
    
    

LUT_Match_vasim_68_932 #(8) lut_match_vasim_68_932(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_932));


assign vasim_68_w_match_932 = vasim_68_lut_match_932 ;

STE #(.fan_in(1)) vasim_68_ste_932 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_931 }),
                .match(vasim_68_w_match_932) ,
                .active_state(vasim_68_w_out_932));




/*wire vasim_68_w_out_933;
*/

wire vasim_68_lut_match_933;
wire vasim_68_w_match_933;

    
    
    

LUT_Match_vasim_68_933 #(8) lut_match_vasim_68_933(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_933));


assign vasim_68_w_match_933 = vasim_68_lut_match_933 ;

STE #(.fan_in(2)) vasim_68_ste_933 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_932 }),
                .match(vasim_68_w_match_933) ,
                .active_state(vasim_68_w_out_933));




/*wire vasim_68_w_out_934;
*/

wire vasim_68_lut_match_934;
wire vasim_68_w_match_934;

    
    
    

LUT_Match_vasim_68_934 #(8) lut_match_vasim_68_934(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_934));


assign vasim_68_w_match_934 = vasim_68_lut_match_934 ;

STE #(.fan_in(1)) vasim_68_ste_934 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_933 }),
                .match(vasim_68_w_match_934) ,
                .active_state(vasim_68_w_out_934));




/*wire vasim_68_w_out_935;
*/

wire vasim_68_lut_match_935;
wire vasim_68_w_match_935;

    
    
    

LUT_Match_vasim_68_935 #(8) lut_match_vasim_68_935(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_935));


assign vasim_68_w_match_935 = vasim_68_lut_match_935 ;

STE #(.fan_in(2)) vasim_68_ste_935 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_934 }),
                .match(vasim_68_w_match_935) ,
                .active_state(vasim_68_w_out_935));




/*wire vasim_68_w_out_936;
*/

wire vasim_68_lut_match_936;
wire vasim_68_w_match_936;

    
    
    

LUT_Match_vasim_68_936 #(8) lut_match_vasim_68_936(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_936));


assign vasim_68_w_match_936 = vasim_68_lut_match_936 ;

STE #(.fan_in(1)) vasim_68_ste_936 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_935 }),
                .match(vasim_68_w_match_936) ,
                .active_state(vasim_68_w_out_936));




/*wire vasim_68_w_out_937;
*/

wire vasim_68_lut_match_937;
wire vasim_68_w_match_937;

    
    
    

LUT_Match_vasim_68_937 #(8) lut_match_vasim_68_937(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_937));


assign vasim_68_w_match_937 = vasim_68_lut_match_937 ;

STE #(.fan_in(1)) vasim_68_ste_937 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_926 }),
                .match(vasim_68_w_match_937) ,
                .active_state(vasim_68_w_out_937));




/*wire vasim_68_w_out_938;
*/

wire vasim_68_lut_match_938;
wire vasim_68_w_match_938;

    
    
    

LUT_Match_vasim_68_938 #(8) lut_match_vasim_68_938(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_938));


assign vasim_68_w_match_938 = vasim_68_lut_match_938 ;

STE #(.fan_in(2)) vasim_68_ste_938 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_936 }),
                .match(vasim_68_w_match_938) ,
                .active_state(vasim_68_w_out_938));




/*wire vasim_68_w_out_939;
*/

wire vasim_68_lut_match_939;
wire vasim_68_w_match_939;

    
    
    

LUT_Match_vasim_68_939 #(8) lut_match_vasim_68_939(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_939));


assign vasim_68_w_match_939 = vasim_68_lut_match_939 ;

STE #(.fan_in(1)) vasim_68_ste_939 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_938 }),
                .match(vasim_68_w_match_939) ,
                .active_state(vasim_68_w_out_939));




/*wire vasim_68_w_out_940;
*/

wire vasim_68_lut_match_940;
wire vasim_68_w_match_940;

    
    
    

LUT_Match_vasim_68_940 #(8) lut_match_vasim_68_940(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_940));


assign vasim_68_w_match_940 = vasim_68_lut_match_940 ;

STE #(.fan_in(2)) vasim_68_ste_940 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_939 }),
                .match(vasim_68_w_match_940) ,
                .active_state(vasim_68_w_out_940));




/*wire vasim_68_w_out_941;
*/

wire vasim_68_lut_match_941;
wire vasim_68_w_match_941;

    
    
    

LUT_Match_vasim_68_941 #(8) lut_match_vasim_68_941(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_941));


assign vasim_68_w_match_941 = vasim_68_lut_match_941 ;

STE #(.fan_in(1)) vasim_68_ste_941 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_940 }),
                .match(vasim_68_w_match_941) ,
                .active_state(vasim_68_w_out_941));




/*wire vasim_68_w_out_942;
*/

wire vasim_68_lut_match_942;
wire vasim_68_w_match_942;

    
    
    

LUT_Match_vasim_68_942 #(8) lut_match_vasim_68_942(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_942));


assign vasim_68_w_match_942 = vasim_68_lut_match_942 ;

STE #(.fan_in(2)) vasim_68_ste_942 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_941 }),
                .match(vasim_68_w_match_942) ,
                .active_state(vasim_68_w_out_942));




/*wire vasim_68_w_out_943;
*/

wire vasim_68_lut_match_943;
wire vasim_68_w_match_943;

    
    
    

LUT_Match_vasim_68_943 #(8) lut_match_vasim_68_943(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_943));


assign vasim_68_w_match_943 = vasim_68_lut_match_943 ;

STE #(.fan_in(1)) vasim_68_ste_943 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_942 }),
                .match(vasim_68_w_match_943) ,
                .active_state(vasim_68_w_out_943));




/*wire vasim_68_w_out_944;
*/

wire vasim_68_lut_match_944;
wire vasim_68_w_match_944;

    
    
    

LUT_Match_vasim_68_944 #(8) lut_match_vasim_68_944(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_944));


assign vasim_68_w_match_944 = vasim_68_lut_match_944 ;

STE #(.fan_in(2)) vasim_68_ste_944 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_943 }),
                .match(vasim_68_w_match_944) ,
                .active_state(vasim_68_w_out_944));




/*wire vasim_68_w_out_945;
*/

wire vasim_68_lut_match_945;
wire vasim_68_w_match_945;

    
    
    

LUT_Match_vasim_68_945 #(8) lut_match_vasim_68_945(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_945));


assign vasim_68_w_match_945 = vasim_68_lut_match_945 ;

STE #(.fan_in(1)) vasim_68_ste_945 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_944 }),
                .match(vasim_68_w_match_945) ,
                .active_state(vasim_68_w_out_945));




/*wire vasim_68_w_out_946;
*/

wire vasim_68_lut_match_946;
wire vasim_68_w_match_946;

    
    
    

LUT_Match_vasim_68_946 #(8) lut_match_vasim_68_946(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_946));


assign vasim_68_w_match_946 = vasim_68_lut_match_946 ;

STE #(.fan_in(2)) vasim_68_ste_946 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_945 }),
                .match(vasim_68_w_match_946) ,
                .active_state(vasim_68_w_out_946));




/*wire vasim_68_w_out_947;
*/

wire vasim_68_lut_match_947;
wire vasim_68_w_match_947;

    
    
    

LUT_Match_vasim_68_947 #(8) lut_match_vasim_68_947(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_947));


assign vasim_68_w_match_947 = vasim_68_lut_match_947 ;

STE #(.fan_in(1)) vasim_68_ste_947 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_946 }),
                .match(vasim_68_w_match_947) ,
                .active_state(vasim_68_w_out_947));




/*wire vasim_68_w_out_948;
*/

wire vasim_68_lut_match_948;
wire vasim_68_w_match_948;

    
    
    

LUT_Match_vasim_68_948 #(8) lut_match_vasim_68_948(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_948));


assign vasim_68_w_match_948 = vasim_68_lut_match_948 ;

STE #(.fan_in(2)) vasim_68_ste_948 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_937, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_948) ,
                .active_state(vasim_68_w_out_948));




/*wire vasim_68_w_out_949;
*/

wire vasim_68_lut_match_949;
wire vasim_68_w_match_949;

    
    
    

LUT_Match_vasim_68_949 #(8) lut_match_vasim_68_949(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_949));


assign vasim_68_w_match_949 = vasim_68_lut_match_949 ;

STE #(.fan_in(2)) vasim_68_ste_949 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_947 }),
                .match(vasim_68_w_match_949) ,
                .active_state(vasim_68_w_out_949));




/*wire vasim_68_w_out_950;
*/

wire vasim_68_lut_match_950;
wire vasim_68_w_match_950;

    
    
    

LUT_Match_vasim_68_950 #(8) lut_match_vasim_68_950(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_950));


assign vasim_68_w_match_950 = vasim_68_lut_match_950 ;

STE #(.fan_in(1)) vasim_68_ste_950 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_949 }),
                .match(vasim_68_w_match_950) ,
                .active_state(vasim_68_w_out_950));




/*wire vasim_68_w_out_951;
*/

wire vasim_68_lut_match_951;
wire vasim_68_w_match_951;

    
    
    

LUT_Match_vasim_68_951 #(8) lut_match_vasim_68_951(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_951));


assign vasim_68_w_match_951 = vasim_68_lut_match_951 ;

STE #(.fan_in(2)) vasim_68_ste_951 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_950 }),
                .match(vasim_68_w_match_951) ,
                .active_state(vasim_68_w_out_951));




/*wire vasim_68_w_out_952;
*/

wire vasim_68_lut_match_952;
wire vasim_68_w_match_952;

    
    
    

LUT_Match_vasim_68_952 #(8) lut_match_vasim_68_952(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_952));


assign vasim_68_w_match_952 = vasim_68_lut_match_952 ;

STE #(.fan_in(1)) vasim_68_ste_952 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_951 }),
                .match(vasim_68_w_match_952) ,
                .active_state(vasim_68_w_out_952));




/*wire vasim_68_w_out_953;
*/

wire vasim_68_lut_match_953;
wire vasim_68_w_match_953;

    
    
    

LUT_Match_vasim_68_953 #(8) lut_match_vasim_68_953(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_953));


assign vasim_68_w_match_953 = vasim_68_lut_match_953 ;

STE #(.fan_in(2)) vasim_68_ste_953 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_952 }),
                .match(vasim_68_w_match_953) ,
                .active_state(vasim_68_w_out_953));




/*wire vasim_68_w_out_954;
*/

wire vasim_68_lut_match_954;
wire vasim_68_w_match_954;

    
    
    

LUT_Match_vasim_68_954 #(8) lut_match_vasim_68_954(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_954));


assign vasim_68_w_match_954 = vasim_68_lut_match_954 ;

STE #(.fan_in(1)) vasim_68_ste_954 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_953 }),
                .match(vasim_68_w_match_954) ,
                .active_state(vasim_68_w_out_954));




/*wire vasim_68_w_out_955;
*/

wire vasim_68_lut_match_955;
wire vasim_68_w_match_955;

    
    
    

LUT_Match_vasim_68_955 #(8) lut_match_vasim_68_955(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_955));


assign vasim_68_w_match_955 = vasim_68_lut_match_955 ;

STE #(.fan_in(2)) vasim_68_ste_955 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_954 }),
                .match(vasim_68_w_match_955) ,
                .active_state(vasim_68_w_out_955));




/*wire vasim_68_w_out_956;
*/

wire vasim_68_lut_match_956;
wire vasim_68_w_match_956;

    
    
    

LUT_Match_vasim_68_956 #(8) lut_match_vasim_68_956(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_956));


assign vasim_68_w_match_956 = vasim_68_lut_match_956 ;

STE #(.fan_in(1)) vasim_68_ste_956 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_955 }),
                .match(vasim_68_w_match_956) ,
                .active_state(vasim_68_w_out_956));




/*wire vasim_68_w_out_957;
*/

wire vasim_68_lut_match_957;
wire vasim_68_w_match_957;

    
    
    

LUT_Match_vasim_68_957 #(8) lut_match_vasim_68_957(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_957));


assign vasim_68_w_match_957 = vasim_68_lut_match_957 ;

STE #(.fan_in(2)) vasim_68_ste_957 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_956 }),
                .match(vasim_68_w_match_957) ,
                .active_state(vasim_68_w_out_957));




/*wire vasim_68_w_out_958;
*/

wire vasim_68_lut_match_958;
wire vasim_68_w_match_958;

    
    
    

LUT_Match_vasim_68_958 #(8) lut_match_vasim_68_958(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_958));


assign vasim_68_w_match_958 = vasim_68_lut_match_958 ;

STE #(.fan_in(1)) vasim_68_ste_958 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_957 }),
                .match(vasim_68_w_match_958) ,
                .active_state(vasim_68_w_out_958));




/*wire vasim_68_w_out_959;
*/

wire vasim_68_lut_match_959;
wire vasim_68_w_match_959;

    
    
    

LUT_Match_vasim_68_959 #(8) lut_match_vasim_68_959(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_959));


assign vasim_68_w_match_959 = vasim_68_lut_match_959 ;

STE #(.fan_in(1)) vasim_68_ste_959 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_948 }),
                .match(vasim_68_w_match_959) ,
                .active_state(vasim_68_w_out_959));




/*wire vasim_68_w_out_960;
*/

wire vasim_68_lut_match_960;
wire vasim_68_w_match_960;

    
    
    

LUT_Match_vasim_68_960 #(8) lut_match_vasim_68_960(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_960));


assign vasim_68_w_match_960 = vasim_68_lut_match_960 ;

STE #(.fan_in(2)) vasim_68_ste_960 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_958 }),
                .match(vasim_68_w_match_960) ,
                .active_state(vasim_68_w_out_960));




/*wire vasim_68_w_out_961;
*/

wire vasim_68_lut_match_961;
wire vasim_68_w_match_961;

    
    
    

LUT_Match_vasim_68_961 #(8) lut_match_vasim_68_961(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_961));


assign vasim_68_w_match_961 = vasim_68_lut_match_961 ;

STE #(.fan_in(1)) vasim_68_ste_961 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_960 }),
                .match(vasim_68_w_match_961) ,
                .active_state(vasim_68_w_out_961));




/*wire vasim_68_w_out_962;
*/

wire vasim_68_lut_match_962;
wire vasim_68_w_match_962;

    
    
    

LUT_Match_vasim_68_962 #(8) lut_match_vasim_68_962(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_962));


assign vasim_68_w_match_962 = vasim_68_lut_match_962 ;

STE #(.fan_in(2)) vasim_68_ste_962 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_961 }),
                .match(vasim_68_w_match_962) ,
                .active_state(vasim_68_w_out_962));




/*wire vasim_68_w_out_963;
*/

wire vasim_68_lut_match_963;
wire vasim_68_w_match_963;

    
    
    

LUT_Match_vasim_68_963 #(8) lut_match_vasim_68_963(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_963));


assign vasim_68_w_match_963 = vasim_68_lut_match_963 ;

STE #(.fan_in(1)) vasim_68_ste_963 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_962 }),
                .match(vasim_68_w_match_963) ,
                .active_state(vasim_68_w_out_963));




/*wire vasim_68_w_out_964;
*/

wire vasim_68_lut_match_964;
wire vasim_68_w_match_964;

    
    
    

LUT_Match_vasim_68_964 #(8) lut_match_vasim_68_964(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_964));


assign vasim_68_w_match_964 = vasim_68_lut_match_964 ;

STE #(.fan_in(2)) vasim_68_ste_964 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_963 }),
                .match(vasim_68_w_match_964) ,
                .active_state(vasim_68_w_out_964));




/*wire vasim_68_w_out_965;
*/

wire vasim_68_lut_match_965;
wire vasim_68_w_match_965;

    
    
    

LUT_Match_vasim_68_965 #(8) lut_match_vasim_68_965(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_965));


assign vasim_68_w_match_965 = vasim_68_lut_match_965 ;

STE #(.fan_in(1)) vasim_68_ste_965 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_964 }),
                .match(vasim_68_w_match_965) ,
                .active_state(vasim_68_w_out_965));




/*wire vasim_68_w_out_966;
*/

wire vasim_68_lut_match_966;
wire vasim_68_w_match_966;

    
    
    

LUT_Match_vasim_68_966 #(8) lut_match_vasim_68_966(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_966));


assign vasim_68_w_match_966 = vasim_68_lut_match_966 ;

STE #(.fan_in(2)) vasim_68_ste_966 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_965 }),
                .match(vasim_68_w_match_966) ,
                .active_state(vasim_68_w_out_966));




/*wire vasim_68_w_out_967;
*/

wire vasim_68_lut_match_967;
wire vasim_68_w_match_967;

    
    
    

LUT_Match_vasim_68_967 #(8) lut_match_vasim_68_967(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_967));


assign vasim_68_w_match_967 = vasim_68_lut_match_967 ;

STE #(.fan_in(1)) vasim_68_ste_967 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_966 }),
                .match(vasim_68_w_match_967) ,
                .active_state(vasim_68_w_out_967));




/*wire vasim_68_w_out_968;
*/

wire vasim_68_lut_match_968;
wire vasim_68_w_match_968;

    
    
    

LUT_Match_vasim_68_968 #(8) lut_match_vasim_68_968(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_968));


assign vasim_68_w_match_968 = vasim_68_lut_match_968 ;

STE #(.fan_in(2)) vasim_68_ste_968 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_967 }),
                .match(vasim_68_w_match_968) ,
                .active_state(vasim_68_w_out_968));




/*wire vasim_68_w_out_969;
*/

wire vasim_68_lut_match_969;
wire vasim_68_w_match_969;

    
    
    

LUT_Match_vasim_68_969 #(8) lut_match_vasim_68_969(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_969));


assign vasim_68_w_match_969 = vasim_68_lut_match_969 ;

STE #(.fan_in(1)) vasim_68_ste_969 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_968 }),
                .match(vasim_68_w_match_969) ,
                .active_state(vasim_68_w_out_969));




/*wire vasim_68_w_out_970;
*/

wire vasim_68_lut_match_970;
wire vasim_68_w_match_970;

    
    
    

LUT_Match_vasim_68_970 #(8) lut_match_vasim_68_970(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_970));


assign vasim_68_w_match_970 = vasim_68_lut_match_970 ;

STE #(.fan_in(1)) vasim_68_ste_970 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_859 }),
                .match(vasim_68_w_match_970) ,
                .active_state(vasim_68_w_out_970));




/*wire vasim_68_w_out_971;
*/

wire vasim_68_lut_match_971;
wire vasim_68_w_match_971;

    
    
    

LUT_Match_vasim_68_971 #(8) lut_match_vasim_68_971(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_971));


assign vasim_68_w_match_971 = vasim_68_lut_match_971 ;

STE #(.fan_in(2)) vasim_68_ste_971 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_959 }),
                .match(vasim_68_w_match_971) ,
                .active_state(vasim_68_w_out_971));




/*wire vasim_68_w_out_972;
*/

wire vasim_68_lut_match_972;
wire vasim_68_w_match_972;

    
    
    

LUT_Match_vasim_68_972 #(8) lut_match_vasim_68_972(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_972));


assign vasim_68_w_match_972 = vasim_68_lut_match_972 ;

STE #(.fan_in(2)) vasim_68_ste_972 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_969 }),
                .match(vasim_68_w_match_972) ,
                .active_state(vasim_68_w_out_972));




/*wire vasim_68_w_out_973;
*/

wire vasim_68_lut_match_973;
wire vasim_68_w_match_973;

    
    
    

LUT_Match_vasim_68_973 #(8) lut_match_vasim_68_973(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_973));


assign vasim_68_w_match_973 = vasim_68_lut_match_973 ;

STE #(.fan_in(1)) vasim_68_ste_973 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_972 }),
                .match(vasim_68_w_match_973) ,
                .active_state(vasim_68_w_out_973));




/*wire vasim_68_w_out_974;
*/

wire vasim_68_lut_match_974;
wire vasim_68_w_match_974;

    
    
    

LUT_Match_vasim_68_974 #(8) lut_match_vasim_68_974(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_974));


assign vasim_68_w_match_974 = vasim_68_lut_match_974 ;

STE #(.fan_in(2)) vasim_68_ste_974 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_973 }),
                .match(vasim_68_w_match_974) ,
                .active_state(vasim_68_w_out_974));




/*wire vasim_68_w_out_975;
*/

wire vasim_68_lut_match_975;
wire vasim_68_w_match_975;

    
    
    

LUT_Match_vasim_68_975 #(8) lut_match_vasim_68_975(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_975));


assign vasim_68_w_match_975 = vasim_68_lut_match_975 ;

STE #(.fan_in(1)) vasim_68_ste_975 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_974 }),
                .match(vasim_68_w_match_975) ,
                .active_state(vasim_68_w_out_975));




/*wire vasim_68_w_out_976;
*/

wire vasim_68_lut_match_976;
wire vasim_68_w_match_976;

    
    
    

LUT_Match_vasim_68_976 #(8) lut_match_vasim_68_976(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_976));


assign vasim_68_w_match_976 = vasim_68_lut_match_976 ;

STE #(.fan_in(2)) vasim_68_ste_976 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_975 }),
                .match(vasim_68_w_match_976) ,
                .active_state(vasim_68_w_out_976));




/*wire vasim_68_w_out_977;
*/

wire vasim_68_lut_match_977;
wire vasim_68_w_match_977;

    
    
    

LUT_Match_vasim_68_977 #(8) lut_match_vasim_68_977(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_977));


assign vasim_68_w_match_977 = vasim_68_lut_match_977 ;

STE #(.fan_in(1)) vasim_68_ste_977 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_976 }),
                .match(vasim_68_w_match_977) ,
                .active_state(vasim_68_w_out_977));




/*wire vasim_68_w_out_978;
*/

wire vasim_68_lut_match_978;
wire vasim_68_w_match_978;

    
    
    

LUT_Match_vasim_68_978 #(8) lut_match_vasim_68_978(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_978));


assign vasim_68_w_match_978 = vasim_68_lut_match_978 ;

STE #(.fan_in(2)) vasim_68_ste_978 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_977 }),
                .match(vasim_68_w_match_978) ,
                .active_state(vasim_68_w_out_978));




/*wire vasim_68_w_out_979;
*/

wire vasim_68_lut_match_979;
wire vasim_68_w_match_979;

    
    
    

LUT_Match_vasim_68_979 #(8) lut_match_vasim_68_979(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_979));


assign vasim_68_w_match_979 = vasim_68_lut_match_979 ;

STE #(.fan_in(1)) vasim_68_ste_979 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_978 }),
                .match(vasim_68_w_match_979) ,
                .active_state(vasim_68_w_out_979));




/*wire vasim_68_w_out_980;
*/

wire vasim_68_lut_match_980;
wire vasim_68_w_match_980;

    
    
    

LUT_Match_vasim_68_980 #(8) lut_match_vasim_68_980(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_980));


assign vasim_68_w_match_980 = vasim_68_lut_match_980 ;

STE #(.fan_in(2)) vasim_68_ste_980 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_979 }),
                .match(vasim_68_w_match_980) ,
                .active_state(vasim_68_w_out_980));




/*wire vasim_68_w_out_981;
*/

wire vasim_68_lut_match_981;
wire vasim_68_w_match_981;

    
    
    

LUT_Match_vasim_68_981 #(8) lut_match_vasim_68_981(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_981));


assign vasim_68_w_match_981 = vasim_68_lut_match_981 ;

STE #(.fan_in(1)) vasim_68_ste_981 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_980 }),
                .match(vasim_68_w_match_981) ,
                .active_state(vasim_68_w_out_981));




/*wire vasim_68_w_out_982;
*/

wire vasim_68_lut_match_982;
wire vasim_68_w_match_982;

    
    
    

LUT_Match_vasim_68_982 #(8) lut_match_vasim_68_982(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_982));


assign vasim_68_w_match_982 = vasim_68_lut_match_982 ;

STE #(.fan_in(1)) vasim_68_ste_982 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_971 }),
                .match(vasim_68_w_match_982) ,
                .active_state(vasim_68_w_out_982));




/*wire vasim_68_w_out_983;
*/

wire vasim_68_lut_match_983;
wire vasim_68_w_match_983;

    
    
    

LUT_Match_vasim_68_983 #(8) lut_match_vasim_68_983(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_983));


assign vasim_68_w_match_983 = vasim_68_lut_match_983 ;

STE #(.fan_in(2)) vasim_68_ste_983 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_981 }),
                .match(vasim_68_w_match_983) ,
                .active_state(vasim_68_w_out_983));




/*wire vasim_68_w_out_984;
*/

wire vasim_68_lut_match_984;
wire vasim_68_w_match_984;

    
    
    

LUT_Match_vasim_68_984 #(8) lut_match_vasim_68_984(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_984));


assign vasim_68_w_match_984 = vasim_68_lut_match_984 ;

STE #(.fan_in(1)) vasim_68_ste_984 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_983 }),
                .match(vasim_68_w_match_984) ,
                .active_state(vasim_68_w_out_984));




/*wire vasim_68_w_out_985;
*/

wire vasim_68_lut_match_985;
wire vasim_68_w_match_985;

    
    
    

LUT_Match_vasim_68_985 #(8) lut_match_vasim_68_985(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_985));


assign vasim_68_w_match_985 = vasim_68_lut_match_985 ;

STE #(.fan_in(2)) vasim_68_ste_985 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_984 }),
                .match(vasim_68_w_match_985) ,
                .active_state(vasim_68_w_out_985));




/*wire vasim_68_w_out_986;
*/

wire vasim_68_lut_match_986;
wire vasim_68_w_match_986;

    
    
    

LUT_Match_vasim_68_986 #(8) lut_match_vasim_68_986(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_986));


assign vasim_68_w_match_986 = vasim_68_lut_match_986 ;

STE #(.fan_in(1)) vasim_68_ste_986 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_985 }),
                .match(vasim_68_w_match_986) ,
                .active_state(vasim_68_w_out_986));




/*wire vasim_68_w_out_987;
*/

wire vasim_68_lut_match_987;
wire vasim_68_w_match_987;

    
    
    

LUT_Match_vasim_68_987 #(8) lut_match_vasim_68_987(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_987));


assign vasim_68_w_match_987 = vasim_68_lut_match_987 ;

STE #(.fan_in(2)) vasim_68_ste_987 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_986 }),
                .match(vasim_68_w_match_987) ,
                .active_state(vasim_68_w_out_987));




/*wire vasim_68_w_out_988;
*/

wire vasim_68_lut_match_988;
wire vasim_68_w_match_988;

    
    
    

LUT_Match_vasim_68_988 #(8) lut_match_vasim_68_988(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_988));


assign vasim_68_w_match_988 = vasim_68_lut_match_988 ;

STE #(.fan_in(1)) vasim_68_ste_988 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_987 }),
                .match(vasim_68_w_match_988) ,
                .active_state(vasim_68_w_out_988));




/*wire vasim_68_w_out_989;
*/

wire vasim_68_lut_match_989;
wire vasim_68_w_match_989;

    
    
    

LUT_Match_vasim_68_989 #(8) lut_match_vasim_68_989(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_989));


assign vasim_68_w_match_989 = vasim_68_lut_match_989 ;

STE #(.fan_in(2)) vasim_68_ste_989 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_988 }),
                .match(vasim_68_w_match_989) ,
                .active_state(vasim_68_w_out_989));




/*wire vasim_68_w_out_990;
*/

wire vasim_68_lut_match_990;
wire vasim_68_w_match_990;

    
    
    

LUT_Match_vasim_68_990 #(8) lut_match_vasim_68_990(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_990));


assign vasim_68_w_match_990 = vasim_68_lut_match_990 ;

STE #(.fan_in(1)) vasim_68_ste_990 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_989 }),
                .match(vasim_68_w_match_990) ,
                .active_state(vasim_68_w_out_990));




/*wire vasim_68_w_out_991;
*/

wire vasim_68_lut_match_991;
wire vasim_68_w_match_991;

    
    
    

LUT_Match_vasim_68_991 #(8) lut_match_vasim_68_991(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_991));


assign vasim_68_w_match_991 = vasim_68_lut_match_991 ;

STE #(.fan_in(2)) vasim_68_ste_991 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_990 }),
                .match(vasim_68_w_match_991) ,
                .active_state(vasim_68_w_out_991));




/*wire vasim_68_w_out_992;
*/

wire vasim_68_lut_match_992;
wire vasim_68_w_match_992;

    
    
    

LUT_Match_vasim_68_992 #(8) lut_match_vasim_68_992(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_992));


assign vasim_68_w_match_992 = vasim_68_lut_match_992 ;

STE #(.fan_in(1)) vasim_68_ste_992 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_991 }),
                .match(vasim_68_w_match_992) ,
                .active_state(vasim_68_w_out_992));




/*wire vasim_68_w_out_993;
*/

wire vasim_68_lut_match_993;
wire vasim_68_w_match_993;

    
    
    

LUT_Match_vasim_68_993 #(8) lut_match_vasim_68_993(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_993));


assign vasim_68_w_match_993 = vasim_68_lut_match_993 ;

STE #(.fan_in(2)) vasim_68_ste_993 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_982 }),
                .match(vasim_68_w_match_993) ,
                .active_state(vasim_68_w_out_993));




/*wire vasim_68_w_out_994;
*/

wire vasim_68_lut_match_994;
wire vasim_68_w_match_994;

    
    
    

LUT_Match_vasim_68_994 #(8) lut_match_vasim_68_994(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_994));


assign vasim_68_w_match_994 = vasim_68_lut_match_994 ;

STE #(.fan_in(2)) vasim_68_ste_994 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_992 }),
                .match(vasim_68_w_match_994) ,
                .active_state(vasim_68_w_out_994));




/*wire vasim_68_w_out_995;
*/

wire vasim_68_lut_match_995;
wire vasim_68_w_match_995;

    
    
    

LUT_Match_vasim_68_995 #(8) lut_match_vasim_68_995(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_995));


assign vasim_68_w_match_995 = vasim_68_lut_match_995 ;

STE #(.fan_in(1)) vasim_68_ste_995 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_994 }),
                .match(vasim_68_w_match_995) ,
                .active_state(vasim_68_w_out_995));




/*wire vasim_68_w_out_996;
*/

wire vasim_68_lut_match_996;
wire vasim_68_w_match_996;

    
    
    

LUT_Match_vasim_68_996 #(8) lut_match_vasim_68_996(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_996));


assign vasim_68_w_match_996 = vasim_68_lut_match_996 ;

STE #(.fan_in(2)) vasim_68_ste_996 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_995 }),
                .match(vasim_68_w_match_996) ,
                .active_state(vasim_68_w_out_996));




/*wire vasim_68_w_out_997;
*/

wire vasim_68_lut_match_997;
wire vasim_68_w_match_997;

    
    
    

LUT_Match_vasim_68_997 #(8) lut_match_vasim_68_997(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_997));


assign vasim_68_w_match_997 = vasim_68_lut_match_997 ;

STE #(.fan_in(1)) vasim_68_ste_997 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_996 }),
                .match(vasim_68_w_match_997) ,
                .active_state(vasim_68_w_out_997));




/*wire vasim_68_w_out_998;
*/

wire vasim_68_lut_match_998;
wire vasim_68_w_match_998;

    
    
    

LUT_Match_vasim_68_998 #(8) lut_match_vasim_68_998(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_998));


assign vasim_68_w_match_998 = vasim_68_lut_match_998 ;

STE #(.fan_in(2)) vasim_68_ste_998 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_997 }),
                .match(vasim_68_w_match_998) ,
                .active_state(vasim_68_w_out_998));




/*wire vasim_68_w_out_999;
*/

wire vasim_68_lut_match_999;
wire vasim_68_w_match_999;

    
    
    

LUT_Match_vasim_68_999 #(8) lut_match_vasim_68_999(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_999));


assign vasim_68_w_match_999 = vasim_68_lut_match_999 ;

STE #(.fan_in(1)) vasim_68_ste_999 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_998 }),
                .match(vasim_68_w_match_999) ,
                .active_state(vasim_68_w_out_999));




/*wire vasim_68_w_out_1000;
*/

wire vasim_68_lut_match_1000;
wire vasim_68_w_match_1000;

    
    
    

LUT_Match_vasim_68_1000 #(8) lut_match_vasim_68_1000(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1000));


assign vasim_68_w_match_1000 = vasim_68_lut_match_1000 ;

STE #(.fan_in(2)) vasim_68_ste_1000 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_999 }),
                .match(vasim_68_w_match_1000) ,
                .active_state(vasim_68_w_out_1000));




/*wire vasim_68_w_out_1001;
*/

wire vasim_68_lut_match_1001;
wire vasim_68_w_match_1001;

    
    
    

LUT_Match_vasim_68_1001 #(8) lut_match_vasim_68_1001(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1001));


assign vasim_68_w_match_1001 = vasim_68_lut_match_1001 ;

STE #(.fan_in(1)) vasim_68_ste_1001 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1000 }),
                .match(vasim_68_w_match_1001) ,
                .active_state(vasim_68_w_out_1001));




/*wire vasim_68_w_out_1002;
*/

wire vasim_68_lut_match_1002;
wire vasim_68_w_match_1002;

    
    
    

LUT_Match_vasim_68_1002 #(8) lut_match_vasim_68_1002(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1002));


assign vasim_68_w_match_1002 = vasim_68_lut_match_1002 ;

STE #(.fan_in(2)) vasim_68_ste_1002 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1001 }),
                .match(vasim_68_w_match_1002) ,
                .active_state(vasim_68_w_out_1002));




/*wire vasim_68_w_out_1003;
*/

wire vasim_68_lut_match_1003;
wire vasim_68_w_match_1003;

    
    
    

LUT_Match_vasim_68_1003 #(8) lut_match_vasim_68_1003(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1003));


assign vasim_68_w_match_1003 = vasim_68_lut_match_1003 ;

STE #(.fan_in(1)) vasim_68_ste_1003 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1002 }),
                .match(vasim_68_w_match_1003) ,
                .active_state(vasim_68_w_out_1003));




/*wire vasim_68_w_out_1004;
*/

wire vasim_68_lut_match_1004;
wire vasim_68_w_match_1004;

    
    
    

LUT_Match_vasim_68_1004 #(8) lut_match_vasim_68_1004(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1004));


assign vasim_68_w_match_1004 = vasim_68_lut_match_1004 ;

STE #(.fan_in(1)) vasim_68_ste_1004 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_993 }),
                .match(vasim_68_w_match_1004) ,
                .active_state(vasim_68_w_out_1004));




/*wire vasim_68_w_out_1005;
*/

wire vasim_68_lut_match_1005;
wire vasim_68_w_match_1005;

    
    
    

LUT_Match_vasim_68_1005 #(8) lut_match_vasim_68_1005(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1005));


assign vasim_68_w_match_1005 = vasim_68_lut_match_1005 ;

STE #(.fan_in(2)) vasim_68_ste_1005 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1003 }),
                .match(vasim_68_w_match_1005) ,
                .active_state(vasim_68_w_out_1005));




/*wire vasim_68_w_out_1006;
*/

wire vasim_68_lut_match_1006;
wire vasim_68_w_match_1006;

    
    
    

LUT_Match_vasim_68_1006 #(8) lut_match_vasim_68_1006(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1006));


assign vasim_68_w_match_1006 = vasim_68_lut_match_1006 ;

STE #(.fan_in(1)) vasim_68_ste_1006 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1005 }),
                .match(vasim_68_w_match_1006) ,
                .active_state(vasim_68_w_out_1006));




/*wire vasim_68_w_out_1007;
*/

wire vasim_68_lut_match_1007;
wire vasim_68_w_match_1007;

    
    
    

LUT_Match_vasim_68_1007 #(8) lut_match_vasim_68_1007(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1007));


assign vasim_68_w_match_1007 = vasim_68_lut_match_1007 ;

STE #(.fan_in(2)) vasim_68_ste_1007 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1006 }),
                .match(vasim_68_w_match_1007) ,
                .active_state(vasim_68_w_out_1007));




/*wire vasim_68_w_out_1008;
*/

wire vasim_68_lut_match_1008;
wire vasim_68_w_match_1008;

    
    
    

LUT_Match_vasim_68_1008 #(8) lut_match_vasim_68_1008(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1008));


assign vasim_68_w_match_1008 = vasim_68_lut_match_1008 ;

STE #(.fan_in(1)) vasim_68_ste_1008 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1007 }),
                .match(vasim_68_w_match_1008) ,
                .active_state(vasim_68_w_out_1008));




/*wire vasim_68_w_out_1009;
*/

wire vasim_68_lut_match_1009;
wire vasim_68_w_match_1009;

    
    
    

LUT_Match_vasim_68_1009 #(8) lut_match_vasim_68_1009(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1009));


assign vasim_68_w_match_1009 = vasim_68_lut_match_1009 ;

STE #(.fan_in(2)) vasim_68_ste_1009 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1008 }),
                .match(vasim_68_w_match_1009) ,
                .active_state(vasim_68_w_out_1009));




/*wire vasim_68_w_out_1010;
*/

wire vasim_68_lut_match_1010;
wire vasim_68_w_match_1010;

    
    
    

LUT_Match_vasim_68_1010 #(8) lut_match_vasim_68_1010(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1010));


assign vasim_68_w_match_1010 = vasim_68_lut_match_1010 ;

STE #(.fan_in(1)) vasim_68_ste_1010 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1009 }),
                .match(vasim_68_w_match_1010) ,
                .active_state(vasim_68_w_out_1010));




/*wire vasim_68_w_out_1011;
*/

wire vasim_68_lut_match_1011;
wire vasim_68_w_match_1011;

    
    
    

LUT_Match_vasim_68_1011 #(8) lut_match_vasim_68_1011(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1011));


assign vasim_68_w_match_1011 = vasim_68_lut_match_1011 ;

STE #(.fan_in(2)) vasim_68_ste_1011 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1010 }),
                .match(vasim_68_w_match_1011) ,
                .active_state(vasim_68_w_out_1011));




/*wire vasim_68_w_out_1012;
*/

wire vasim_68_lut_match_1012;
wire vasim_68_w_match_1012;

    
    
    

LUT_Match_vasim_68_1012 #(8) lut_match_vasim_68_1012(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1012));


assign vasim_68_w_match_1012 = vasim_68_lut_match_1012 ;

STE #(.fan_in(1)) vasim_68_ste_1012 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1011 }),
                .match(vasim_68_w_match_1012) ,
                .active_state(vasim_68_w_out_1012));




/*wire vasim_68_w_out_1013;
*/

wire vasim_68_lut_match_1013;
wire vasim_68_w_match_1013;

    
    
    

LUT_Match_vasim_68_1013 #(8) lut_match_vasim_68_1013(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1013));


assign vasim_68_w_match_1013 = vasim_68_lut_match_1013 ;

STE #(.fan_in(2)) vasim_68_ste_1013 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1012 }),
                .match(vasim_68_w_match_1013) ,
                .active_state(vasim_68_w_out_1013));




/*wire vasim_68_w_out_1014;
*/

wire vasim_68_lut_match_1014;
wire vasim_68_w_match_1014;

    
    
    

LUT_Match_vasim_68_1014 #(8) lut_match_vasim_68_1014(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1014));


assign vasim_68_w_match_1014 = vasim_68_lut_match_1014 ;

STE #(.fan_in(1)) vasim_68_ste_1014 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1013 }),
                .match(vasim_68_w_match_1014) ,
                .active_state(vasim_68_w_out_1014));




/*wire vasim_68_w_out_1015;
*/

wire vasim_68_lut_match_1015;
wire vasim_68_w_match_1015;

    
    
    

LUT_Match_vasim_68_1015 #(8) lut_match_vasim_68_1015(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1015));


assign vasim_68_w_match_1015 = vasim_68_lut_match_1015 ;

STE #(.fan_in(2)) vasim_68_ste_1015 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_1004 }),
                .match(vasim_68_w_match_1015) ,
                .active_state(vasim_68_w_out_1015));




/*wire vasim_68_w_out_1016;
*/

wire vasim_68_lut_match_1016;
wire vasim_68_w_match_1016;

    
    
    

LUT_Match_vasim_68_1016 #(8) lut_match_vasim_68_1016(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1016));


assign vasim_68_w_match_1016 = vasim_68_lut_match_1016 ;

STE #(.fan_in(2)) vasim_68_ste_1016 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1014 }),
                .match(vasim_68_w_match_1016) ,
                .active_state(vasim_68_w_out_1016));




/*wire vasim_68_w_out_1017;
*/

wire vasim_68_lut_match_1017;
wire vasim_68_w_match_1017;

    
    
    

LUT_Match_vasim_68_1017 #(8) lut_match_vasim_68_1017(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1017));


assign vasim_68_w_match_1017 = vasim_68_lut_match_1017 ;

STE #(.fan_in(1)) vasim_68_ste_1017 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1016 }),
                .match(vasim_68_w_match_1017) ,
                .active_state(vasim_68_w_out_1017));




/*wire vasim_68_w_out_1018;
*/

wire vasim_68_lut_match_1018;
wire vasim_68_w_match_1018;

    
    
    

LUT_Match_vasim_68_1018 #(8) lut_match_vasim_68_1018(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1018));


assign vasim_68_w_match_1018 = vasim_68_lut_match_1018 ;

STE #(.fan_in(2)) vasim_68_ste_1018 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1017 }),
                .match(vasim_68_w_match_1018) ,
                .active_state(vasim_68_w_out_1018));




/*wire vasim_68_w_out_1019;
*/

wire vasim_68_lut_match_1019;
wire vasim_68_w_match_1019;

    
    
    

LUT_Match_vasim_68_1019 #(8) lut_match_vasim_68_1019(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1019));


assign vasim_68_w_match_1019 = vasim_68_lut_match_1019 ;

STE #(.fan_in(1)) vasim_68_ste_1019 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1018 }),
                .match(vasim_68_w_match_1019) ,
                .active_state(vasim_68_w_out_1019));




/*wire vasim_68_w_out_1020;
*/

wire vasim_68_lut_match_1020;
wire vasim_68_w_match_1020;

    
    
    

LUT_Match_vasim_68_1020 #(8) lut_match_vasim_68_1020(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1020));


assign vasim_68_w_match_1020 = vasim_68_lut_match_1020 ;

STE #(.fan_in(2)) vasim_68_ste_1020 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1019 }),
                .match(vasim_68_w_match_1020) ,
                .active_state(vasim_68_w_out_1020));




/*wire vasim_68_w_out_1021;
*/

wire vasim_68_lut_match_1021;
wire vasim_68_w_match_1021;

    
    
    

LUT_Match_vasim_68_1021 #(8) lut_match_vasim_68_1021(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1021));


assign vasim_68_w_match_1021 = vasim_68_lut_match_1021 ;

STE #(.fan_in(1)) vasim_68_ste_1021 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1020 }),
                .match(vasim_68_w_match_1021) ,
                .active_state(vasim_68_w_out_1021));




/*wire vasim_68_w_out_1022;
*/

wire vasim_68_lut_match_1022;
wire vasim_68_w_match_1022;

    
    
    

LUT_Match_vasim_68_1022 #(8) lut_match_vasim_68_1022(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1022));


assign vasim_68_w_match_1022 = vasim_68_lut_match_1022 ;

STE #(.fan_in(2)) vasim_68_ste_1022 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1021 }),
                .match(vasim_68_w_match_1022) ,
                .active_state(vasim_68_w_out_1022));




/*wire vasim_68_w_out_1023;
*/

wire vasim_68_lut_match_1023;
wire vasim_68_w_match_1023;

    
    
    

LUT_Match_vasim_68_1023 #(8) lut_match_vasim_68_1023(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1023));


assign vasim_68_w_match_1023 = vasim_68_lut_match_1023 ;

STE #(.fan_in(1)) vasim_68_ste_1023 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1022 }),
                .match(vasim_68_w_match_1023) ,
                .active_state(vasim_68_w_out_1023));




/*wire vasim_68_w_out_1024;
*/

wire vasim_68_lut_match_1024;
wire vasim_68_w_match_1024;

    
    
    

LUT_Match_vasim_68_1024 #(8) lut_match_vasim_68_1024(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1024));


assign vasim_68_w_match_1024 = vasim_68_lut_match_1024 ;

STE #(.fan_in(2)) vasim_68_ste_1024 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1023 }),
                .match(vasim_68_w_match_1024) ,
                .active_state(vasim_68_w_out_1024));




/*wire vasim_68_w_out_1025;
*/

wire vasim_68_lut_match_1025;
wire vasim_68_w_match_1025;

    
    
    

LUT_Match_vasim_68_1025 #(8) lut_match_vasim_68_1025(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1025));


assign vasim_68_w_match_1025 = vasim_68_lut_match_1025 ;

STE #(.fan_in(1)) vasim_68_ste_1025 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1024 }),
                .match(vasim_68_w_match_1025) ,
                .active_state(vasim_68_w_out_1025));




/*wire vasim_68_w_out_1026;
*/

wire vasim_68_lut_match_1026;
wire vasim_68_w_match_1026;

    
    
    

LUT_Match_vasim_68_1026 #(8) lut_match_vasim_68_1026(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1026));


assign vasim_68_w_match_1026 = vasim_68_lut_match_1026 ;

STE #(.fan_in(1)) vasim_68_ste_1026 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1015 }),
                .match(vasim_68_w_match_1026) ,
                .active_state(vasim_68_w_out_1026));




/*wire vasim_68_w_out_1027;
*/

wire vasim_68_lut_match_1027;
wire vasim_68_w_match_1027;

    
    
    

LUT_Match_vasim_68_1027 #(8) lut_match_vasim_68_1027(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1027));


assign vasim_68_w_match_1027 = vasim_68_lut_match_1027 ;

STE #(.fan_in(2)) vasim_68_ste_1027 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1025 }),
                .match(vasim_68_w_match_1027) ,
                .active_state(vasim_68_w_out_1027));




/*wire vasim_68_w_out_1028;
*/

wire vasim_68_lut_match_1028;
wire vasim_68_w_match_1028;

    
    
    

LUT_Match_vasim_68_1028 #(8) lut_match_vasim_68_1028(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1028));


assign vasim_68_w_match_1028 = vasim_68_lut_match_1028 ;

STE #(.fan_in(1)) vasim_68_ste_1028 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1027 }),
                .match(vasim_68_w_match_1028) ,
                .active_state(vasim_68_w_out_1028));




/*wire vasim_68_w_out_1029;
*/

wire vasim_68_lut_match_1029;
wire vasim_68_w_match_1029;

    
    
    

LUT_Match_vasim_68_1029 #(8) lut_match_vasim_68_1029(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1029));


assign vasim_68_w_match_1029 = vasim_68_lut_match_1029 ;

STE #(.fan_in(2)) vasim_68_ste_1029 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1028 }),
                .match(vasim_68_w_match_1029) ,
                .active_state(vasim_68_w_out_1029));




/*wire vasim_68_w_out_1030;
*/

wire vasim_68_lut_match_1030;
wire vasim_68_w_match_1030;

    
    
    

LUT_Match_vasim_68_1030 #(8) lut_match_vasim_68_1030(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1030));


assign vasim_68_w_match_1030 = vasim_68_lut_match_1030 ;

STE #(.fan_in(1)) vasim_68_ste_1030 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1029 }),
                .match(vasim_68_w_match_1030) ,
                .active_state(vasim_68_w_out_1030));




/*wire vasim_68_w_out_1031;
*/

wire vasim_68_lut_match_1031;
wire vasim_68_w_match_1031;

    
    
    

LUT_Match_vasim_68_1031 #(8) lut_match_vasim_68_1031(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1031));


assign vasim_68_w_match_1031 = vasim_68_lut_match_1031 ;

STE #(.fan_in(2)) vasim_68_ste_1031 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1030 }),
                .match(vasim_68_w_match_1031) ,
                .active_state(vasim_68_w_out_1031));




/*wire vasim_68_w_out_1032;
*/

wire vasim_68_lut_match_1032;
wire vasim_68_w_match_1032;

    
    
    

LUT_Match_vasim_68_1032 #(8) lut_match_vasim_68_1032(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1032));


assign vasim_68_w_match_1032 = vasim_68_lut_match_1032 ;

STE #(.fan_in(1)) vasim_68_ste_1032 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1031 }),
                .match(vasim_68_w_match_1032) ,
                .active_state(vasim_68_w_out_1032));




/*wire vasim_68_w_out_1033;
*/

wire vasim_68_lut_match_1033;
wire vasim_68_w_match_1033;

    
    
    

LUT_Match_vasim_68_1033 #(8) lut_match_vasim_68_1033(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1033));


assign vasim_68_w_match_1033 = vasim_68_lut_match_1033 ;

STE #(.fan_in(2)) vasim_68_ste_1033 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1032 }),
                .match(vasim_68_w_match_1033) ,
                .active_state(vasim_68_w_out_1033));




/*wire vasim_68_w_out_1034;
*/

wire vasim_68_lut_match_1034;
wire vasim_68_w_match_1034;

    
    
    

LUT_Match_vasim_68_1034 #(8) lut_match_vasim_68_1034(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1034));


assign vasim_68_w_match_1034 = vasim_68_lut_match_1034 ;

STE #(.fan_in(1)) vasim_68_ste_1034 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1033 }),
                .match(vasim_68_w_match_1034) ,
                .active_state(vasim_68_w_out_1034));




/*wire vasim_68_w_out_1035;
*/

wire vasim_68_lut_match_1035;
wire vasim_68_w_match_1035;

    
    
    

LUT_Match_vasim_68_1035 #(8) lut_match_vasim_68_1035(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1035));


assign vasim_68_w_match_1035 = vasim_68_lut_match_1035 ;

STE #(.fan_in(2)) vasim_68_ste_1035 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1034 }),
                .match(vasim_68_w_match_1035) ,
                .active_state(vasim_68_w_out_1035));




/*wire vasim_68_w_out_1036;
*/

wire vasim_68_lut_match_1036;
wire vasim_68_w_match_1036;

    
    
    

LUT_Match_vasim_68_1036 #(8) lut_match_vasim_68_1036(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1036));


assign vasim_68_w_match_1036 = vasim_68_lut_match_1036 ;

STE #(.fan_in(1)) vasim_68_ste_1036 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1035 }),
                .match(vasim_68_w_match_1036) ,
                .active_state(vasim_68_w_out_1036));




/*wire vasim_68_w_out_1037;
*/

wire vasim_68_lut_match_1037;
wire vasim_68_w_match_1037;

    
    
    

LUT_Match_vasim_68_1037 #(8) lut_match_vasim_68_1037(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1037));


assign vasim_68_w_match_1037 = vasim_68_lut_match_1037 ;

STE #(.fan_in(2)) vasim_68_ste_1037 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_250, vasim_68_w_out_1026 }),
                .match(vasim_68_w_match_1037) ,
                .active_state(vasim_68_w_out_1037));




/*wire vasim_68_w_out_1038;
*/

wire vasim_68_lut_match_1038;
wire vasim_68_w_match_1038;

    
    
    

LUT_Match_vasim_68_1038 #(8) lut_match_vasim_68_1038(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1038));


assign vasim_68_w_match_1038 = vasim_68_lut_match_1038 ;

STE #(.fan_in(2)) vasim_68_ste_1038 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1036 }),
                .match(vasim_68_w_match_1038) ,
                .active_state(vasim_68_w_out_1038));




/*wire vasim_68_w_out_1039;
*/

wire vasim_68_lut_match_1039;
wire vasim_68_w_match_1039;

    
    
    

LUT_Match_vasim_68_1039 #(8) lut_match_vasim_68_1039(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1039));


assign vasim_68_w_match_1039 = vasim_68_lut_match_1039 ;

STE #(.fan_in(1)) vasim_68_ste_1039 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1038 }),
                .match(vasim_68_w_match_1039) ,
                .active_state(vasim_68_w_out_1039));




/*wire vasim_68_w_out_1040;
*/

wire vasim_68_lut_match_1040;
wire vasim_68_w_match_1040;

    
    
    

LUT_Match_vasim_68_1040 #(8) lut_match_vasim_68_1040(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1040));


assign vasim_68_w_match_1040 = vasim_68_lut_match_1040 ;

STE #(.fan_in(2)) vasim_68_ste_1040 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1039 }),
                .match(vasim_68_w_match_1040) ,
                .active_state(vasim_68_w_out_1040));




/*wire vasim_68_w_out_1041;
*/

wire vasim_68_lut_match_1041;
wire vasim_68_w_match_1041;

    
    
    

LUT_Match_vasim_68_1041 #(8) lut_match_vasim_68_1041(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1041));


assign vasim_68_w_match_1041 = vasim_68_lut_match_1041 ;

STE #(.fan_in(1)) vasim_68_ste_1041 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1040 }),
                .match(vasim_68_w_match_1041) ,
                .active_state(vasim_68_w_out_1041));




/*wire vasim_68_w_out_1042;
*/

wire vasim_68_lut_match_1042;
wire vasim_68_w_match_1042;

    
    
    

LUT_Match_vasim_68_1042 #(8) lut_match_vasim_68_1042(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1042));


assign vasim_68_w_match_1042 = vasim_68_lut_match_1042 ;

STE #(.fan_in(2)) vasim_68_ste_1042 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1041 }),
                .match(vasim_68_w_match_1042) ,
                .active_state(vasim_68_w_out_1042));




/*wire vasim_68_w_out_1043;
*/

wire vasim_68_lut_match_1043;
wire vasim_68_w_match_1043;

    
    
    

LUT_Match_vasim_68_1043 #(8) lut_match_vasim_68_1043(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1043));


assign vasim_68_w_match_1043 = vasim_68_lut_match_1043 ;

STE #(.fan_in(1)) vasim_68_ste_1043 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1042 }),
                .match(vasim_68_w_match_1043) ,
                .active_state(vasim_68_w_out_1043));




/*wire vasim_68_w_out_1044;
*/

wire vasim_68_lut_match_1044;
wire vasim_68_w_match_1044;

    
    
    

LUT_Match_vasim_68_1044 #(8) lut_match_vasim_68_1044(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1044));


assign vasim_68_w_match_1044 = vasim_68_lut_match_1044 ;

STE #(.fan_in(2)) vasim_68_ste_1044 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1043 }),
                .match(vasim_68_w_match_1044) ,
                .active_state(vasim_68_w_out_1044));




/*wire vasim_68_w_out_1045;
*/

wire vasim_68_lut_match_1045;
wire vasim_68_w_match_1045;

    
    
    

LUT_Match_vasim_68_1045 #(8) lut_match_vasim_68_1045(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1045));


assign vasim_68_w_match_1045 = vasim_68_lut_match_1045 ;

STE #(.fan_in(1)) vasim_68_ste_1045 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1044 }),
                .match(vasim_68_w_match_1045) ,
                .active_state(vasim_68_w_out_1045));




/*wire vasim_68_w_out_1046;
*/

wire vasim_68_lut_match_1046;
wire vasim_68_w_match_1046;

    
    
    

LUT_Match_vasim_68_1046 #(8) lut_match_vasim_68_1046(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1046));


assign vasim_68_w_match_1046 = vasim_68_lut_match_1046 ;

STE #(.fan_in(2)) vasim_68_ste_1046 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1045 }),
                .match(vasim_68_w_match_1046) ,
                .active_state(vasim_68_w_out_1046));




/*wire vasim_68_w_out_1047;
*/

wire vasim_68_lut_match_1047;
wire vasim_68_w_match_1047;

    
    
    

LUT_Match_vasim_68_1047 #(8) lut_match_vasim_68_1047(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1047));


assign vasim_68_w_match_1047 = vasim_68_lut_match_1047 ;

STE #(.fan_in(1)) vasim_68_ste_1047 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1046 }),
                .match(vasim_68_w_match_1047) ,
                .active_state(vasim_68_w_out_1047));




/*wire vasim_68_w_out_1048;
*/

wire vasim_68_lut_match_1048;
wire vasim_68_w_match_1048;

    
    
    

LUT_Match_vasim_68_1048 #(8) lut_match_vasim_68_1048(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1048));


assign vasim_68_w_match_1048 = vasim_68_lut_match_1048 ;

STE #(.fan_in(1)) vasim_68_ste_1048 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1037 }),
                .match(vasim_68_w_match_1048) ,
                .active_state(vasim_68_w_out_1048));




/*wire vasim_68_w_out_1049;
*/

wire vasim_68_lut_match_1049;
wire vasim_68_w_match_1049;

    
    
    

LUT_Match_vasim_68_1049 #(8) lut_match_vasim_68_1049(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1049));


assign vasim_68_w_match_1049 = vasim_68_lut_match_1049 ;

STE #(.fan_in(2)) vasim_68_ste_1049 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1047 }),
                .match(vasim_68_w_match_1049) ,
                .active_state(vasim_68_w_out_1049));




/*wire vasim_68_w_out_1050;
*/

wire vasim_68_lut_match_1050;
wire vasim_68_w_match_1050;

    
    
    

LUT_Match_vasim_68_1050 #(8) lut_match_vasim_68_1050(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1050));


assign vasim_68_w_match_1050 = vasim_68_lut_match_1050 ;

STE #(.fan_in(1)) vasim_68_ste_1050 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1049 }),
                .match(vasim_68_w_match_1050) ,
                .active_state(vasim_68_w_out_1050));




/*wire vasim_68_w_out_1051;
*/

wire vasim_68_lut_match_1051;
wire vasim_68_w_match_1051;

    
    
    

LUT_Match_vasim_68_1051 #(8) lut_match_vasim_68_1051(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1051));


assign vasim_68_w_match_1051 = vasim_68_lut_match_1051 ;

STE #(.fan_in(2)) vasim_68_ste_1051 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1050 }),
                .match(vasim_68_w_match_1051) ,
                .active_state(vasim_68_w_out_1051));




/*wire vasim_68_w_out_1052;
*/

wire vasim_68_lut_match_1052;
wire vasim_68_w_match_1052;

    
    
    

LUT_Match_vasim_68_1052 #(8) lut_match_vasim_68_1052(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1052));


assign vasim_68_w_match_1052 = vasim_68_lut_match_1052 ;

STE #(.fan_in(1)) vasim_68_ste_1052 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1051 }),
                .match(vasim_68_w_match_1052) ,
                .active_state(vasim_68_w_out_1052));




/*wire vasim_68_w_out_1053;
*/

wire vasim_68_lut_match_1053;
wire vasim_68_w_match_1053;

    
    
    

LUT_Match_vasim_68_1053 #(8) lut_match_vasim_68_1053(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1053));


assign vasim_68_w_match_1053 = vasim_68_lut_match_1053 ;

STE #(.fan_in(2)) vasim_68_ste_1053 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1052 }),
                .match(vasim_68_w_match_1053) ,
                .active_state(vasim_68_w_out_1053));




/*wire vasim_68_w_out_1054;
*/

wire vasim_68_lut_match_1054;
wire vasim_68_w_match_1054;

    
    
    

LUT_Match_vasim_68_1054 #(8) lut_match_vasim_68_1054(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1054));


assign vasim_68_w_match_1054 = vasim_68_lut_match_1054 ;

STE #(.fan_in(1)) vasim_68_ste_1054 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1053 }),
                .match(vasim_68_w_match_1054) ,
                .active_state(vasim_68_w_out_1054));




/*wire vasim_68_w_out_1055;
*/

wire vasim_68_lut_match_1055;
wire vasim_68_w_match_1055;

    
    
    

LUT_Match_vasim_68_1055 #(8) lut_match_vasim_68_1055(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1055));


assign vasim_68_w_match_1055 = vasim_68_lut_match_1055 ;

STE #(.fan_in(2)) vasim_68_ste_1055 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1054 }),
                .match(vasim_68_w_match_1055) ,
                .active_state(vasim_68_w_out_1055));




/*wire vasim_68_w_out_1056;
*/

wire vasim_68_lut_match_1056;
wire vasim_68_w_match_1056;

    
    
    

LUT_Match_vasim_68_1056 #(8) lut_match_vasim_68_1056(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1056));


assign vasim_68_w_match_1056 = vasim_68_lut_match_1056 ;

STE #(.fan_in(1)) vasim_68_ste_1056 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1055 }),
                .match(vasim_68_w_match_1056) ,
                .active_state(vasim_68_w_out_1056));




/*wire vasim_68_w_out_1057;
*/

wire vasim_68_lut_match_1057;
wire vasim_68_w_match_1057;

    
    
    

LUT_Match_vasim_68_1057 #(8) lut_match_vasim_68_1057(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1057));


assign vasim_68_w_match_1057 = vasim_68_lut_match_1057 ;

STE #(.fan_in(2)) vasim_68_ste_1057 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1056 }),
                .match(vasim_68_w_match_1057) ,
                .active_state(vasim_68_w_out_1057));




/*wire vasim_68_w_out_1058;
*/

wire vasim_68_lut_match_1058;
wire vasim_68_w_match_1058;

    
    
    

LUT_Match_vasim_68_1058 #(8) lut_match_vasim_68_1058(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1058));


assign vasim_68_w_match_1058 = vasim_68_lut_match_1058 ;

STE #(.fan_in(1)) vasim_68_ste_1058 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1057 }),
                .match(vasim_68_w_match_1058) ,
                .active_state(vasim_68_w_out_1058));




/*wire vasim_68_w_out_1059;
*/

wire vasim_68_lut_match_1059;
wire vasim_68_w_match_1059;

    
    
    

LUT_Match_vasim_68_1059 #(8) lut_match_vasim_68_1059(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1059));


assign vasim_68_w_match_1059 = vasim_68_lut_match_1059 ;

STE #(.fan_in(2)) vasim_68_ste_1059 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1048, vasim_68_w_out_250 }),
                .match(vasim_68_w_match_1059) ,
                .active_state(vasim_68_w_out_1059));




/*wire vasim_68_w_out_1060;
*/

wire vasim_68_lut_match_1060;
wire vasim_68_w_match_1060;

    
    
    

LUT_Match_vasim_68_1060 #(8) lut_match_vasim_68_1060(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1060));


assign vasim_68_w_match_1060 = vasim_68_lut_match_1060 ;

STE #(.fan_in(2)) vasim_68_ste_1060 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1058 }),
                .match(vasim_68_w_match_1060) ,
                .active_state(vasim_68_w_out_1060));




/*wire vasim_68_w_out_1061;
*/

wire vasim_68_lut_match_1061;
wire vasim_68_w_match_1061;

    
    
    

LUT_Match_vasim_68_1061 #(8) lut_match_vasim_68_1061(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1061));


assign vasim_68_w_match_1061 = vasim_68_lut_match_1061 ;

STE #(.fan_in(1)) vasim_68_ste_1061 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1060 }),
                .match(vasim_68_w_match_1061) ,
                .active_state(vasim_68_w_out_1061));




/*wire vasim_68_w_out_1062;
*/

wire vasim_68_lut_match_1062;
wire vasim_68_w_match_1062;

    
    
    

LUT_Match_vasim_68_1062 #(8) lut_match_vasim_68_1062(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1062));


assign vasim_68_w_match_1062 = vasim_68_lut_match_1062 ;

STE #(.fan_in(2)) vasim_68_ste_1062 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1061 }),
                .match(vasim_68_w_match_1062) ,
                .active_state(vasim_68_w_out_1062));




/*wire vasim_68_w_out_1063;
*/

wire vasim_68_lut_match_1063;
wire vasim_68_w_match_1063;

    
    
    

LUT_Match_vasim_68_1063 #(8) lut_match_vasim_68_1063(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1063));


assign vasim_68_w_match_1063 = vasim_68_lut_match_1063 ;

STE #(.fan_in(1)) vasim_68_ste_1063 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1062 }),
                .match(vasim_68_w_match_1063) ,
                .active_state(vasim_68_w_out_1063));




/*wire vasim_68_w_out_1064;
*/

wire vasim_68_lut_match_1064;
wire vasim_68_w_match_1064;

    
    
    

LUT_Match_vasim_68_1064 #(8) lut_match_vasim_68_1064(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1064));


assign vasim_68_w_match_1064 = vasim_68_lut_match_1064 ;

STE #(.fan_in(2)) vasim_68_ste_1064 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1063 }),
                .match(vasim_68_w_match_1064) ,
                .active_state(vasim_68_w_out_1064));




/*wire vasim_68_w_out_1065;
*/

wire vasim_68_lut_match_1065;
wire vasim_68_w_match_1065;

    
    
    

LUT_Match_vasim_68_1065 #(8) lut_match_vasim_68_1065(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1065));


assign vasim_68_w_match_1065 = vasim_68_lut_match_1065 ;

STE #(.fan_in(1)) vasim_68_ste_1065 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1064 }),
                .match(vasim_68_w_match_1065) ,
                .active_state(vasim_68_w_out_1065));




/*wire vasim_68_w_out_1066;
*/

wire vasim_68_lut_match_1066;
wire vasim_68_w_match_1066;

    
    
    

LUT_Match_vasim_68_1066 #(8) lut_match_vasim_68_1066(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1066));


assign vasim_68_w_match_1066 = vasim_68_lut_match_1066 ;

STE #(.fan_in(2)) vasim_68_ste_1066 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1065 }),
                .match(vasim_68_w_match_1066) ,
                .active_state(vasim_68_w_out_1066));




/*wire vasim_68_w_out_1067;
*/

wire vasim_68_lut_match_1067;
wire vasim_68_w_match_1067;

    
    
    

LUT_Match_vasim_68_1067 #(8) lut_match_vasim_68_1067(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1067));


assign vasim_68_w_match_1067 = vasim_68_lut_match_1067 ;

STE #(.fan_in(1)) vasim_68_ste_1067 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1066 }),
                .match(vasim_68_w_match_1067) ,
                .active_state(vasim_68_w_out_1067));




/*wire vasim_68_w_out_1068;
*/

wire vasim_68_lut_match_1068;
wire vasim_68_w_match_1068;

    
    
    

LUT_Match_vasim_68_1068 #(8) lut_match_vasim_68_1068(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1068));


assign vasim_68_w_match_1068 = vasim_68_lut_match_1068 ;

STE #(.fan_in(2)) vasim_68_ste_1068 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1067 }),
                .match(vasim_68_w_match_1068) ,
                .active_state(vasim_68_w_out_1068));




/*wire vasim_68_w_out_1069;
*/

wire vasim_68_lut_match_1069;
wire vasim_68_w_match_1069;

    
    
    

LUT_Match_vasim_68_1069 #(8) lut_match_vasim_68_1069(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1069));


assign vasim_68_w_match_1069 = vasim_68_lut_match_1069 ;

STE #(.fan_in(1)) vasim_68_ste_1069 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1068 }),
                .match(vasim_68_w_match_1069) ,
                .active_state(vasim_68_w_out_1069));




/*wire vasim_68_w_out_1070;
*/

wire vasim_68_lut_match_1070;
wire vasim_68_w_match_1070;

    
    
    

LUT_Match_vasim_68_1070 #(8) lut_match_vasim_68_1070(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1070));


assign vasim_68_w_match_1070 = vasim_68_lut_match_1070 ;

STE #(.fan_in(1)) vasim_68_ste_1070 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1059 }),
                .match(vasim_68_w_match_1070) ,
                .active_state(vasim_68_w_out_1070));




/*wire vasim_68_w_out_1071;
*/

wire vasim_68_lut_match_1071;
wire vasim_68_w_match_1071;

    
    
    

LUT_Match_vasim_68_1071 #(8) lut_match_vasim_68_1071(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1071));


assign vasim_68_w_match_1071 = vasim_68_lut_match_1071 ;

STE #(.fan_in(2)) vasim_68_ste_1071 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1069 }),
                .match(vasim_68_w_match_1071) ,
                .active_state(vasim_68_w_out_1071));




/*wire vasim_68_w_out_1072;
*/

wire vasim_68_lut_match_1072;
wire vasim_68_w_match_1072;

    
    
    

LUT_Match_vasim_68_1072 #(8) lut_match_vasim_68_1072(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1072));


assign vasim_68_w_match_1072 = vasim_68_lut_match_1072 ;

STE #(.fan_in(1)) vasim_68_ste_1072 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1071 }),
                .match(vasim_68_w_match_1072) ,
                .active_state(vasim_68_w_out_1072));




/*wire vasim_68_w_out_1073;
*/

wire vasim_68_lut_match_1073;
wire vasim_68_w_match_1073;

    
    
    

LUT_Match_vasim_68_1073 #(8) lut_match_vasim_68_1073(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1073));


assign vasim_68_w_match_1073 = vasim_68_lut_match_1073 ;

STE #(.fan_in(2)) vasim_68_ste_1073 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1072 }),
                .match(vasim_68_w_match_1073) ,
                .active_state(vasim_68_w_out_1073));




/*wire vasim_68_w_out_1074;
*/

wire vasim_68_lut_match_1074;
wire vasim_68_w_match_1074;

    
    
    

LUT_Match_vasim_68_1074 #(8) lut_match_vasim_68_1074(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1074));


assign vasim_68_w_match_1074 = vasim_68_lut_match_1074 ;

STE #(.fan_in(1)) vasim_68_ste_1074 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1073 }),
                .match(vasim_68_w_match_1074) ,
                .active_state(vasim_68_w_out_1074));




/*wire vasim_68_w_out_1075;
*/

wire vasim_68_lut_match_1075;
wire vasim_68_w_match_1075;

    
    
    

LUT_Match_vasim_68_1075 #(8) lut_match_vasim_68_1075(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1075));


assign vasim_68_w_match_1075 = vasim_68_lut_match_1075 ;

STE #(.fan_in(2)) vasim_68_ste_1075 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1074 }),
                .match(vasim_68_w_match_1075) ,
                .active_state(vasim_68_w_out_1075));




/*wire vasim_68_w_out_1076;
*/

wire vasim_68_lut_match_1076;
wire vasim_68_w_match_1076;

    
    
    

LUT_Match_vasim_68_1076 #(8) lut_match_vasim_68_1076(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1076));


assign vasim_68_w_match_1076 = vasim_68_lut_match_1076 ;

STE #(.fan_in(1)) vasim_68_ste_1076 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1075 }),
                .match(vasim_68_w_match_1076) ,
                .active_state(vasim_68_w_out_1076));




/*wire vasim_68_w_out_1077;
*/

wire vasim_68_lut_match_1077;
wire vasim_68_w_match_1077;

    
    
    

LUT_Match_vasim_68_1077 #(8) lut_match_vasim_68_1077(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1077));


assign vasim_68_w_match_1077 = vasim_68_lut_match_1077 ;

STE #(.fan_in(2)) vasim_68_ste_1077 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1076 }),
                .match(vasim_68_w_match_1077) ,
                .active_state(vasim_68_w_out_1077));




/*wire vasim_68_w_out_1078;
*/

wire vasim_68_lut_match_1078;
wire vasim_68_w_match_1078;

    
    
    

LUT_Match_vasim_68_1078 #(8) lut_match_vasim_68_1078(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1078));


assign vasim_68_w_match_1078 = vasim_68_lut_match_1078 ;

STE #(.fan_in(1)) vasim_68_ste_1078 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1077 }),
                .match(vasim_68_w_match_1078) ,
                .active_state(vasim_68_w_out_1078));




/*wire vasim_68_w_out_1079;
*/

wire vasim_68_lut_match_1079;
wire vasim_68_w_match_1079;

    
    
    

LUT_Match_vasim_68_1079 #(8) lut_match_vasim_68_1079(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1079));


assign vasim_68_w_match_1079 = vasim_68_lut_match_1079 ;

STE #(.fan_in(2)) vasim_68_ste_1079 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_592, vasim_68_w_out_1078 }),
                .match(vasim_68_w_match_1079) ,
                .active_state(vasim_68_w_out_1079));




/*wire vasim_68_w_out_1080;
*/

wire vasim_68_lut_match_1080;
wire vasim_68_w_match_1080;

    
    
    

LUT_Match_vasim_68_1080 #(8) lut_match_vasim_68_1080(
                .clk(clk),
                .symbols(symbols),
                .match(vasim_68_lut_match_1080));


assign vasim_68_w_match_1080 = vasim_68_lut_match_1080 ;

STE #(.fan_in(1)) vasim_68_ste_1080 (
                .clk(clk),
                .run(run),
                .reset(reset),
                .income_edges({ vasim_68_w_out_1079 }),
                .match(vasim_68_w_match_1080) ,
                .active_state(vasim_68_w_out_1080));




endmodule

